<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/stamp/' name='stamp' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/stamp/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/stamp/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/stamp/'>
      <xsd:element name='createANewRequestParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='description' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createANewRequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='owner' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createAPassportResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='owner' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='image' type='xsd:int' minOccurs='0' />
            <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='description' type='xsd:string' minOccurs='0' />
            <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='recommendations' type='xsd:normalizedString' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAPassportParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAPassportResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='facebookLoginResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='forkASharedPasportResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getARequestParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getARequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='owner' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='firstName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='lastName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='description' type='xsd:string' minOccurs='0' />
            <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPassportListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='owner' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='image' type='xsd:int' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                  <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='recommendations' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='visited' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='googlePlacesId' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheLoggedInUserSInfoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='firstName' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='lastName' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='stats' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='passportsRequested' type='xsd:int' minOccurs='0' />
                  <xsd:element name='passportCreated' type='xsd:int' minOccurs='0' />
                  <xsd:element name='stampsEarned' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='fbToken' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='facebook' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='updated_time' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='gender' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='timezone' type='xsd:int' minOccurs='0' />
                  <xsd:element name='link' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='verified' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='last_name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='locale' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='first_name' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='__v' type='xsd:int' minOccurs='0' />
            <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='redirectToAUserSProfilePictureParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='redirectToAUserSProfilePictureResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateARecommendationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateARecommendationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updatePassportParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updatePassportResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='createANewRequestRequestMessage'>
    <part name='parameters' element='tns:createANewRequestParameters' />
  </message>
  <message name='createANewRequestResponseMessage'>
    <part name='response' element='tns:createANewRequestResponse' />
  </message>
  <message name='createAPassportRequestMessage' />
  <message name='createAPassportResponseMessage'>
    <part name='response' element='tns:createAPassportResponse' />
  </message>
  <message name='deleteAPassportRequestMessage'>
    <part name='parameters' element='tns:deleteAPassportParameters' />
  </message>
  <message name='deleteAPassportResponseMessage'>
    <part name='response' element='tns:deleteAPassportResponse' />
  </message>
  <message name='facebookLoginRequestMessage' />
  <message name='facebookLoginResponseMessage'>
    <part name='response' element='tns:facebookLoginResponse' />
  </message>
  <message name='forkASharedPasportRequestMessage' />
  <message name='forkASharedPasportResponseMessage'>
    <part name='response' element='tns:forkASharedPasportResponse' />
  </message>
  <message name='getARequestRequestMessage'>
    <part name='parameters' element='tns:getARequestParameters' />
  </message>
  <message name='getARequestResponseMessage'>
    <part name='response' element='tns:getARequestResponse' />
  </message>
  <message name='getPassportListRequestMessage' />
  <message name='getPassportListResponseMessage'>
    <part name='response' element='tns:getPassportListResponse' />
  </message>
  <message name='getTheLoggedInUserSInfoRequestMessage' />
  <message name='getTheLoggedInUserSInfoResponseMessage'>
    <part name='response' element='tns:getTheLoggedInUserSInfoResponse' />
  </message>
  <message name='redirectToAUserSProfilePictureRequestMessage'>
    <part name='parameters' element='tns:redirectToAUserSProfilePictureParameters' />
  </message>
  <message name='redirectToAUserSProfilePictureResponseMessage'>
    <part name='response' element='tns:redirectToAUserSProfilePictureResponse' />
  </message>
  <message name='updateARecommendationRequestMessage'>
    <part name='parameters' element='tns:updateARecommendationParameters' />
  </message>
  <message name='updateARecommendationResponseMessage'>
    <part name='response' element='tns:updateARecommendationResponse' />
  </message>
  <message name='updatePassportRequestMessage'>
    <part name='parameters' element='tns:updatePassportParameters' />
  </message>
  <message name='updatePassportResponseMessage'>
    <part name='response' element='tns:updatePassportResponse' />
  </message>
  <portType name='stampPortType'>
    <operation name='createANewRequest'>
      <documentation>creates a new request associated with the logged in user</documentation>
      <input message='tns:createANewRequestRequestMessage' name='createANewRequestInput' />
      <output message='tns:createANewRequestResponseMessage' name='createANewRequestOutput' />
    </operation>
    <operation name='createAPassport'>
      <documentation>creates a passport with initial recommendations</documentation>
      <input message='tns:createAPassportRequestMessage' name='createAPassportInput' />
      <output message='tns:createAPassportResponseMessage' name='createAPassportOutput' />
    </operation>
    <operation name='deleteAPassport'>
      <documentation>deletes a passport and its associated recos</documentation>
      <input message='tns:deleteAPassportRequestMessage' name='deleteAPassportInput' />
      <output message='tns:deleteAPassportResponseMessage' name='deleteAPassportOutput' />
    </operation>
    <operation name='facebookLogin'>
      <documentation>generates and returns a JWT token associated to a Facebook user If the user doesn t exist in the DB yet it is created</documentation>
      <input message='tns:facebookLoginRequestMessage' name='facebookLoginInput' />
      <output message='tns:facebookLoginResponseMessage' name='facebookLoginOutput' />
    </operation>
    <operation name='forkASharedPasport'>
      <documentation>this copies the passport with the specified ID to the user s briefcase Note that this is a deep copy not a reference Referenced recos are also copied</documentation>
      <input message='tns:forkASharedPasportRequestMessage' name='forkASharedPasportInput' />
      <output message='tns:forkASharedPasportResponseMessage' name='forkASharedPasportOutput' />
    </operation>
    <operation name='getARequest'>
      <documentation>gets the request with the specified ID Note that this allows to get any request by any user Requests are therefore considered public Also note that this only returns the json info for the request To get to the request s web page go to http xxxx request id without the api</documentation>
      <input message='tns:getARequestRequestMessage' name='getARequestInput' />
      <output message='tns:getARequestResponseMessage' name='getARequestOutput' />
    </operation>
    <operation name='getPassportList'>
      <documentation>get a list of the logged in user s passports and their respective recommendations</documentation>
      <input message='tns:getPassportListRequestMessage' name='getPassportListInput' />
      <output message='tns:getPassportListResponseMessage' name='getPassportListOutput' />
    </operation>
    <operation name='getTheLoggedInUserSInfo'>
      <documentation>returns information on the currently logged in user</documentation>
      <input message='tns:getTheLoggedInUserSInfoRequestMessage' name='getTheLoggedInUserSInfoInput' />
      <output message='tns:getTheLoggedInUserSInfoResponseMessage' name='getTheLoggedInUserSInfoOutput' />
    </operation>
    <operation name='redirectToAUserSProfilePicture'>
      <documentation>redirects to a user s profile picture This does not return a json object</documentation>
      <input message='tns:redirectToAUserSProfilePictureRequestMessage' name='redirectToAUserSProfilePictureInput' />
      <output message='tns:redirectToAUserSProfilePictureResponseMessage' name='redirectToAUserSProfilePictureOutput' />
    </operation>
    <operation name='updateARecommendation'>
      <documentation>updates the specified keys in a recommendation Keys that are not specified will be left unchanged Note that this is how you can mark a reco as visited</documentation>
      <input message='tns:updateARecommendationRequestMessage' name='updateARecommendationInput' />
      <output message='tns:updateARecommendationResponseMessage' name='updateARecommendationOutput' />
    </operation>
    <operation name='updatePassport'>
      <documentation>updates a passport with the specified attributes Unspecified attributes are left unchanged Note that if the recommendations attribute is set all existing recos will be deleted and replaced with the ones specified as parameters</documentation>
      <input message='tns:updatePassportRequestMessage' name='updatePassportInput' />
      <output message='tns:updatePassportResponseMessage' name='updatePassportOutput' />
    </operation>
  </portType>
  <binding name='stampBinding' type='tns:stampPortType'>
    <operation name='createANewRequest'>
      <soap12:operation soapAction='http://createANewRequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createAPassport'>
      <soap12:operation soapAction='http://createAPassport' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAPassport'>
      <soap12:operation soapAction='http://deleteAPassport' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='facebookLogin'>
      <soap12:operation soapAction='http://facebookLogin' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='forkASharedPasport'>
      <soap12:operation soapAction='http://forkASharedPasport' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getARequest'>
      <soap12:operation soapAction='http://getARequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getPassportList'>
      <soap12:operation soapAction='http://getPassportList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheLoggedInUserSInfo'>
      <soap12:operation soapAction='http://getTheLoggedInUserSInfo' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='redirectToAUserSProfilePicture'>
      <soap12:operation soapAction='http://redirectToAUserSProfilePicture' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateARecommendation'>
      <soap12:operation soapAction='http://updateARecommendation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updatePassport'>
      <soap12:operation soapAction='http://updatePassport' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='stamp'>
    <documentation>the API behind Stamp s mobile app</documentation>
    <port name='stampPort' binding='tns:stampBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://stamp' />
    </port>
  </service>
</definitions>