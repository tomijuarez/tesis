<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/imageAppengine/' name='imageAppengine' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/imageAppengine/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/imageAppengine/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/imageAppengine/'>
      <xsd:element name='addBorderResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='exception' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='path' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='timestamp' type='xsd:int' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addTextToImageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='blurFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='boxBlurFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='bumpFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='despeckleFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='gaussianFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='glowFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='grayscaleFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='lensBlurFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='maximumFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='medianFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='metadataInfoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='minimumFilterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='resizeImageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='rotateImageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sizeInfoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='addBorderRequestMessage' />
  <message name='addBorderResponseMessage'>
    <part name='response' element='tns:addBorderResponse' />
  </message>
  <message name='addTextToImageRequestMessage' />
  <message name='addTextToImageResponseMessage'>
    <part name='response' element='tns:addTextToImageResponse' />
  </message>
  <message name='blurFilterRequestMessage' />
  <message name='blurFilterResponseMessage'>
    <part name='response' element='tns:blurFilterResponse' />
  </message>
  <message name='boxBlurFilterRequestMessage' />
  <message name='boxBlurFilterResponseMessage'>
    <part name='response' element='tns:boxBlurFilterResponse' />
  </message>
  <message name='bumpFilterRequestMessage' />
  <message name='bumpFilterResponseMessage'>
    <part name='response' element='tns:bumpFilterResponse' />
  </message>
  <message name='despeckleFilterRequestMessage' />
  <message name='despeckleFilterResponseMessage'>
    <part name='response' element='tns:despeckleFilterResponse' />
  </message>
  <message name='gaussianFilterRequestMessage' />
  <message name='gaussianFilterResponseMessage'>
    <part name='response' element='tns:gaussianFilterResponse' />
  </message>
  <message name='glowFilterRequestMessage' />
  <message name='glowFilterResponseMessage'>
    <part name='response' element='tns:glowFilterResponse' />
  </message>
  <message name='grayscaleFilterRequestMessage' />
  <message name='grayscaleFilterResponseMessage'>
    <part name='response' element='tns:grayscaleFilterResponse' />
  </message>
  <message name='lensBlurFilterRequestMessage' />
  <message name='lensBlurFilterResponseMessage'>
    <part name='response' element='tns:lensBlurFilterResponse' />
  </message>
  <message name='maximumFilterRequestMessage' />
  <message name='maximumFilterResponseMessage'>
    <part name='response' element='tns:maximumFilterResponse' />
  </message>
  <message name='medianFilterRequestMessage' />
  <message name='medianFilterResponseMessage'>
    <part name='response' element='tns:medianFilterResponse' />
  </message>
  <message name='metadataInfoRequestMessage' />
  <message name='metadataInfoResponseMessage'>
    <part name='response' element='tns:metadataInfoResponse' />
  </message>
  <message name='minimumFilterRequestMessage' />
  <message name='minimumFilterResponseMessage'>
    <part name='response' element='tns:minimumFilterResponse' />
  </message>
  <message name='resizeImageRequestMessage' />
  <message name='resizeImageResponseMessage'>
    <part name='response' element='tns:resizeImageResponse' />
  </message>
  <message name='rotateImageRequestMessage' />
  <message name='rotateImageResponseMessage'>
    <part name='response' element='tns:rotateImageResponse' />
  </message>
  <message name='sizeInfoRequestMessage' />
  <message name='sizeInfoResponseMessage'>
    <part name='response' element='tns:sizeInfoResponse' />
  </message>
  <portType name='imageAppenginePortType'>
    <operation name='addBorder'>
      <documentation>draw a border around an image</documentation>
      <input message='tns:addBorderRequestMessage' name='addBorderInput' />
      <output message='tns:addBorderResponseMessage' name='addBorderOutput' />
    </operation>
    <operation name='addTextToImage'>
      <documentation>overlay text on an image</documentation>
      <input message='tns:addTextToImageRequestMessage' name='addTextToImageInput' />
      <output message='tns:addTextToImageResponseMessage' name='addTextToImageOutput' />
    </operation>
    <operation name='blurFilter'>
      <documentation>this filter blurs an uploaded image very slightly using a x blur kernel</documentation>
      <input message='tns:blurFilterRequestMessage' name='blurFilterInput' />
      <output message='tns:blurFilterResponseMessage' name='blurFilterOutput' />
    </operation>
    <operation name='boxBlurFilter'>
      <documentation>a filter which performs a box blur on an uploaded image The horizontal and vertical blurs can be specified separately and a number of iterations can be given which allows an approximation to Gaussian blur</documentation>
      <input message='tns:boxBlurFilterRequestMessage' name='boxBlurFilterInput' />
      <output message='tns:boxBlurFilterResponseMessage' name='boxBlurFilterOutput' />
    </operation>
    <operation name='bumpFilter'>
      <documentation>this filter does a simple convolution which emphasises edges in an uploaded image</documentation>
      <input message='tns:bumpFilterRequestMessage' name='bumpFilterInput' />
      <output message='tns:bumpFilterResponseMessage' name='bumpFilterOutput' />
    </operation>
    <operation name='despeckleFilter'>
      <documentation>this filter reduces light noise in an image using the eight hull algorithm described in Applied Optics Vol No May Geometric filter for Speckle Reduction by Thomas R Crimmins Basically it tries to move each pixel closer in value to its neighbours As it only has a small effect you may need to apply it several times This is good for removing small levels of noise from an image but does give the image some fuzziness</documentation>
      <input message='tns:despeckleFilterRequestMessage' name='despeckleFilterInput' />
      <output message='tns:despeckleFilterResponseMessage' name='despeckleFilterOutput' />
    </operation>
    <operation name='gaussianFilter'>
      <documentation>this filter performs a Gaussian blur on an uploaded image</documentation>
      <input message='tns:gaussianFilterRequestMessage' name='gaussianFilterInput' />
      <output message='tns:gaussianFilterResponseMessage' name='gaussianFilterOutput' />
    </operation>
    <operation name='glowFilter'>
      <documentation>this filter produces a glowing effect on an uploaded image by adding a blurred version of the image to subtracted from the original image</documentation>
      <input message='tns:glowFilterRequestMessage' name='glowFilterInput' />
      <output message='tns:glowFilterResponseMessage' name='glowFilterOutput' />
    </operation>
    <operation name='grayscaleFilter'>
      <documentation>this filter converts an uploaded image to a grayscale image To do this it finds the brightness of each pixel and sets the red green and blue of the output to the brightness value But what is the brightness The simplest answer might be that it is the average of the RGB components but that neglects the way in which the human eye works The eye is much more sensitive to green and red than it is to blue and so we need to take less acount of the blue and more account of the green The weighting used by GrayscaleFilter is luma R G B</documentation>
      <input message='tns:grayscaleFilterRequestMessage' name='grayscaleFilterInput' />
      <output message='tns:grayscaleFilterResponseMessage' name='grayscaleFilterOutput' />
    </operation>
    <operation name='lensBlurFilter'>
      <documentation>this filter simulates the blurring caused by a camera lens You can change the aperture size and shape and also specify blooming of the image This filter is very slow</documentation>
      <input message='tns:lensBlurFilterRequestMessage' name='lensBlurFilterInput' />
      <output message='tns:lensBlurFilterResponseMessage' name='lensBlurFilterOutput' />
    </operation>
    <operation name='maximumFilter'>
      <documentation>this filter replaces each pixel by the maximum of the input pixel and its eight neighbours Each of the RGB channels is considered separately</documentation>
      <input message='tns:maximumFilterRequestMessage' name='maximumFilterInput' />
      <output message='tns:maximumFilterResponseMessage' name='maximumFilterOutput' />
    </operation>
    <operation name='medianFilter'>
      <documentation>this filter replaces each pixel by the median of the input pixel and its eight neighbours Each of the RGB channels is considered separately</documentation>
      <input message='tns:medianFilterRequestMessage' name='medianFilterInput' />
      <output message='tns:medianFilterResponseMessage' name='medianFilterOutput' />
    </operation>
    <operation name='metadataInfo'>
      <documentation>return the embedded metadata in an image ex EXIF etc</documentation>
      <input message='tns:metadataInfoRequestMessage' name='metadataInfoInput' />
      <output message='tns:metadataInfoResponseMessage' name='metadataInfoOutput' />
    </operation>
    <operation name='minimumFilter'>
      <documentation>this filter replaces each pixel by the median of the input pixel and its eight neighbours Each of the RGB channels is considered separately</documentation>
      <input message='tns:minimumFilterRequestMessage' name='minimumFilterInput' />
      <output message='tns:minimumFilterResponseMessage' name='minimumFilterOutput' />
    </operation>
    <operation name='resizeImage'>
      <documentation>resize an image</documentation>
      <input message='tns:resizeImageRequestMessage' name='resizeImageInput' />
      <output message='tns:resizeImageResponseMessage' name='resizeImageOutput' />
    </operation>
    <operation name='rotateImage'>
      <documentation>rotate an image</documentation>
      <input message='tns:rotateImageRequestMessage' name='rotateImageInput' />
      <output message='tns:rotateImageResponseMessage' name='rotateImageOutput' />
    </operation>
    <operation name='sizeInfo'>
      <documentation>get the height and width for the image</documentation>
      <input message='tns:sizeInfoRequestMessage' name='sizeInfoInput' />
      <output message='tns:sizeInfoResponseMessage' name='sizeInfoOutput' />
    </operation>
  </portType>
  <binding name='imageAppengineBinding' type='tns:imageAppenginePortType'>
    <operation name='addBorder'>
      <soap12:operation soapAction='http://addBorder' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addTextToImage'>
      <soap12:operation soapAction='http://addTextToImage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='blurFilter'>
      <soap12:operation soapAction='http://blurFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='boxBlurFilter'>
      <soap12:operation soapAction='http://boxBlurFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='bumpFilter'>
      <soap12:operation soapAction='http://bumpFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='despeckleFilter'>
      <soap12:operation soapAction='http://despeckleFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='gaussianFilter'>
      <soap12:operation soapAction='http://gaussianFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='glowFilter'>
      <soap12:operation soapAction='http://glowFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='grayscaleFilter'>
      <soap12:operation soapAction='http://grayscaleFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='lensBlurFilter'>
      <soap12:operation soapAction='http://lensBlurFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='maximumFilter'>
      <soap12:operation soapAction='http://maximumFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='medianFilter'>
      <soap12:operation soapAction='http://medianFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='metadataInfo'>
      <soap12:operation soapAction='http://metadataInfo' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='minimumFilter'>
      <soap12:operation soapAction='http://minimumFilter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='resizeImage'>
      <soap12:operation soapAction='http://resizeImage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='rotateImage'>
      <soap12:operation soapAction='http://rotateImage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sizeInfo'>
      <soap12:operation soapAction='http://sizeInfo' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='imageAppengine'>
    <documentation>multiple image API s to help developers add advanced image manipulation to their apps Image Information API s Image Modification API s and Image Filter API s</documentation>
    <port name='imageAppenginePort' binding='tns:imageAppengineBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://imageAppengine' />
    </port>
  </service>
</definitions>