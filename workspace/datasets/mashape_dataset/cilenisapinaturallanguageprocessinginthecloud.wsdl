<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/cilenisapiNaturalLanguageProcessingInTheCloud/' name='cilenisapiNaturalLanguageProcessingInTheCloud' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/cilenisapiNaturalLanguageProcessingInTheCloud/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/cilenisapiNaturalLanguageProcessingInTheCloud/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/cilenisapiNaturalLanguageProcessingInTheCloud/'>
      <xsd:element name='keywordExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='keywordExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageIdentifierParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageIdentifierResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='multiwordExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='multiwordExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namedEntityRecognizerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namedEntityRecognizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='partOfSpeechTaggerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='partOfSpeechTaggerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalyzerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalyzerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='summarizerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='outputsize' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='summarizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='syntacticAnalyzerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='outputtype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='syntacticAnalyzerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='tokenizerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='tokenizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='verbConjugatorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='langinput' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='variety' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='verbConjugatorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='webTextExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='webTextExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='keywordExtractorRequestMessage'>
    <part name='parameters' element='tns:keywordExtractorParameters' />
  </message>
  <message name='keywordExtractorResponseMessage'>
    <part name='response' element='tns:keywordExtractorResponse' />
  </message>
  <message name='languageIdentifierRequestMessage'>
    <part name='parameters' element='tns:languageIdentifierParameters' />
  </message>
  <message name='languageIdentifierResponseMessage'>
    <part name='response' element='tns:languageIdentifierResponse' />
  </message>
  <message name='multiwordExtractorRequestMessage'>
    <part name='parameters' element='tns:multiwordExtractorParameters' />
  </message>
  <message name='multiwordExtractorResponseMessage'>
    <part name='response' element='tns:multiwordExtractorResponse' />
  </message>
  <message name='namedEntityRecognizerRequestMessage'>
    <part name='parameters' element='tns:namedEntityRecognizerParameters' />
  </message>
  <message name='namedEntityRecognizerResponseMessage'>
    <part name='response' element='tns:namedEntityRecognizerResponse' />
  </message>
  <message name='partOfSpeechTaggerRequestMessage'>
    <part name='parameters' element='tns:partOfSpeechTaggerParameters' />
  </message>
  <message name='partOfSpeechTaggerResponseMessage'>
    <part name='response' element='tns:partOfSpeechTaggerResponse' />
  </message>
  <message name='sentimentAnalyzerRequestMessage'>
    <part name='parameters' element='tns:sentimentAnalyzerParameters' />
  </message>
  <message name='sentimentAnalyzerResponseMessage'>
    <part name='response' element='tns:sentimentAnalyzerResponse' />
  </message>
  <message name='summarizerRequestMessage'>
    <part name='parameters' element='tns:summarizerParameters' />
  </message>
  <message name='summarizerResponseMessage'>
    <part name='response' element='tns:summarizerResponse' />
  </message>
  <message name='syntacticAnalyzerRequestMessage'>
    <part name='parameters' element='tns:syntacticAnalyzerParameters' />
  </message>
  <message name='syntacticAnalyzerResponseMessage'>
    <part name='response' element='tns:syntacticAnalyzerResponse' />
  </message>
  <message name='tokenizerRequestMessage'>
    <part name='parameters' element='tns:tokenizerParameters' />
  </message>
  <message name='tokenizerResponseMessage'>
    <part name='response' element='tns:tokenizerResponse' />
  </message>
  <message name='verbConjugatorRequestMessage'>
    <part name='parameters' element='tns:verbConjugatorParameters' />
  </message>
  <message name='verbConjugatorResponseMessage'>
    <part name='response' element='tns:verbConjugatorResponse' />
  </message>
  <message name='webTextExtractorRequestMessage'>
    <part name='parameters' element='tns:webTextExtractorParameters' />
  </message>
  <message name='webTextExtractorResponseMessage'>
    <part name='response' element='tns:webTextExtractorResponse' />
  </message>
  <portType name='cilenisapiNaturalLanguageProcessingInTheCloudPortType'>
    <operation name='keywordExtractor'>
      <documentation>it extracts the most relevant words from a text and ranks them according to their degree of relevance For Spanish English Galician and Portuguese</documentation>
      <input message='tns:keywordExtractorRequestMessage' name='keywordExtractorInput' />
      <output message='tns:keywordExtractorResponseMessage' name='keywordExtractorOutput' />
    </operation>
    <operation name='languageIdentifier'>
      <documentation>recognizes the language in which a text is written This module can distinguish several languages using language models and morphological structures</documentation>
      <input message='tns:languageIdentifierRequestMessage' name='languageIdentifierInput' />
      <output message='tns:languageIdentifierResponseMessage' name='languageIdentifierOutput' />
    </operation>
    <operation name='multiwordExtractor'>
      <documentation>it extracts the most relevant multiword terms from a text and ranked according to their degree of internal cohesion for example mortgage rates house price building societies price war For Spanish English Galician and Portuguese</documentation>
      <input message='tns:multiwordExtractorRequestMessage' name='multiwordExtractorInput' />
      <output message='tns:multiwordExtractorResponseMessage' name='multiwordExtractorOutput' />
    </operation>
    <operation name='namedEntityRecognizer'>
      <documentation>it extracts from a text Named Entities and classify them as persons places organizations and miscelaneous</documentation>
      <input message='tns:namedEntityRecognizerRequestMessage' name='namedEntityRecognizerInput' />
      <output message='tns:namedEntityRecognizerResponseMessage' name='namedEntityRecognizerOutput' />
    </operation>
    <operation name='partOfSpeechTagger'>
      <documentation>i analyzes a text with by providing words with Part of Speech tags e g noun verb preposition morphological features singular masculine and their lemmas canonical form For Spanish English Galician and Portuguese</documentation>
      <input message='tns:partOfSpeechTaggerRequestMessage' name='partOfSpeechTaggerInput' />
      <output message='tns:partOfSpeechTaggerResponseMessage' name='partOfSpeechTaggerOutput' />
    </operation>
    <operation name='sentimentAnalyzer'>
      <documentation>it tells you whether it thinks the text you enter expresses positive sentiment negative sentiment or if it s neutral It also gives you a quantitative weight of how intense is the sentiment For Spanish English and Portuguese</documentation>
      <input message='tns:sentimentAnalyzerRequestMessage' name='sentimentAnalyzerInput' />
      <output message='tns:sentimentAnalyzerResponseMessage' name='sentimentAnalyzerOutput' />
    </operation>
    <operation name='summarizer'>
      <documentation>create a summary or abstract from a text You chouse the percentage of the summary abstract or long summary</documentation>
      <input message='tns:summarizerRequestMessage' name='summarizerInput' />
      <output message='tns:summarizerResponseMessage' name='summarizerOutput' />
    </operation>
    <operation name='syntacticAnalyzer'>
      <documentation>gives the syntactic struture of a text using a dependency based parser DepPattern All words of a text are structured in binary relations dependencies For Spanish English Galician and Portuguese</documentation>
      <input message='tns:syntacticAnalyzerRequestMessage' name='syntacticAnalyzerInput' />
      <output message='tns:syntacticAnalyzerResponseMessage' name='syntacticAnalyzerOutput' />
    </operation>
    <operation name='tokenizer'>
      <documentation>splits a text into words and phrases including ambiguous separators like dots and colons</documentation>
      <input message='tns:tokenizerRequestMessage' name='tokenizerInput' />
      <output message='tns:tokenizerResponseMessage' name='tokenizerOutput' />
    </operation>
    <operation name='verbConjugator'>
      <documentation>returns the inflection of a verb even verbs that don t exist using the rules to conjugate it For Galician Spanish and Portuguese</documentation>
      <input message='tns:verbConjugatorRequestMessage' name='verbConjugatorInput' />
      <output message='tns:verbConjugatorResponseMessage' name='verbConjugatorOutput' />
    </operation>
    <operation name='webTextExtractor'>
      <documentation>it extracts from a url the relevant text of the web In a newspaper it extract the article</documentation>
      <input message='tns:webTextExtractorRequestMessage' name='webTextExtractorInput' />
      <output message='tns:webTextExtractorResponseMessage' name='webTextExtractorOutput' />
    </operation>
  </portType>
  <binding name='cilenisapiNaturalLanguageProcessingInTheCloudBinding' type='tns:cilenisapiNaturalLanguageProcessingInTheCloudPortType'>
    <operation name='keywordExtractor'>
      <soap12:operation soapAction='http://keywordExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='languageIdentifier'>
      <soap12:operation soapAction='http://languageIdentifier' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='multiwordExtractor'>
      <soap12:operation soapAction='http://multiwordExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='namedEntityRecognizer'>
      <soap12:operation soapAction='http://namedEntityRecognizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='partOfSpeechTagger'>
      <soap12:operation soapAction='http://partOfSpeechTagger' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sentimentAnalyzer'>
      <soap12:operation soapAction='http://sentimentAnalyzer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='summarizer'>
      <soap12:operation soapAction='http://summarizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='syntacticAnalyzer'>
      <soap12:operation soapAction='http://syntacticAnalyzer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='tokenizer'>
      <soap12:operation soapAction='http://tokenizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='verbConjugator'>
      <soap12:operation soapAction='http://verbConjugator' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='webTextExtractor'>
      <soap12:operation soapAction='http://webTextExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='cilenisapiNaturalLanguageProcessingInTheCloud'>
    <documentation>cilenisAPI helps you to analyze and extract information from texts Add language technology to your software in a few minutes using our cloud solution We offer you technology based on years of research in Natural Language Processing in a very easy and scalable SaaS model trough a RESTful API</documentation>
    <port name='cilenisapiNaturalLanguageProcessingInTheCloudPort' binding='tns:cilenisapiNaturalLanguageProcessingInTheCloudBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://cilenisapiNaturalLanguageProcessingInTheCloud' />
    </port>
  </service>
</definitions>