<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/producteev/' name='producteev' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/producteev/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/producteev/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/producteev/'>
      <xsd:element name='acceptOrRefuseAnInvitationToJoinANetworkParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='acceptOrRefuseAnInvitationToJoinANetworkResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addARestrictedProjectToANetworkInvitationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='projectid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addARestrictedProjectToANetworkInvitationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='projects' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createANewLabelOnTheNetworkResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteALabelParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteALabelResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='nlp_suggestions' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAProducteevFileParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAProducteevFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='remoteFile' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='fileName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAProducteevFileByItsIdParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAProducteevFileByItsIdResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='file' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='creator' type='xsd:string' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='content_type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='file_extension' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheLabelWithTheSpecifiedIdParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheLabelWithTheSpecifiedIdResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheListOfPendingInvitationForTheCurrentUserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheListOfPendingInvitationForTheCurrentUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='network_invitations' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='creator' type='xsd:string' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='network' type='xsd:string' minOccurs='0' />
                  <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='reSendTheEmailForANetworkInvitationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='reSendTheEmailForANetworkInvitationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='returnAListOfSuggestionsForTheNaturalLanguageProcessingParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='projectid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='query' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='returnAListOfSuggestionsForTheNaturalLanguageProcessingResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='nlp_suggestions' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='returnSuggestedColorsForLabelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='label_colors' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='background_color' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='foreground_color' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateALabelParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateALabelResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='uploadALocalFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='file' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='creator' type='xsd:string' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='content_type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='file_extension' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='uploadARemoteFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='file' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='creator' type='xsd:string' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='content_type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='file_extension' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='acceptOrRefuseAnInvitationToJoinANetworkRequestMessage'>
    <part name='parameters' element='tns:acceptOrRefuseAnInvitationToJoinANetworkParameters' />
  </message>
  <message name='acceptOrRefuseAnInvitationToJoinANetworkResponseMessage'>
    <part name='response' element='tns:acceptOrRefuseAnInvitationToJoinANetworkResponse' />
  </message>
  <message name='addARestrictedProjectToANetworkInvitationRequestMessage'>
    <part name='parameters' element='tns:addARestrictedProjectToANetworkInvitationParameters' />
  </message>
  <message name='addARestrictedProjectToANetworkInvitationResponseMessage'>
    <part name='response' element='tns:addARestrictedProjectToANetworkInvitationResponse' />
  </message>
  <message name='createANewLabelOnTheNetworkRequestMessage' />
  <message name='createANewLabelOnTheNetworkResponseMessage'>
    <part name='response' element='tns:createANewLabelOnTheNetworkResponse' />
  </message>
  <message name='deleteALabelRequestMessage'>
    <part name='parameters' element='tns:deleteALabelParameters' />
  </message>
  <message name='deleteALabelResponseMessage'>
    <part name='response' element='tns:deleteALabelResponse' />
  </message>
  <message name='deleteAProducteevFileRequestMessage'>
    <part name='parameters' element='tns:deleteAProducteevFileParameters' />
  </message>
  <message name='deleteAProducteevFileResponseMessage'>
    <part name='response' element='tns:deleteAProducteevFileResponse' />
  </message>
  <message name='getAProducteevFileByItsIdRequestMessage'>
    <part name='parameters' element='tns:getAProducteevFileByItsIdParameters' />
  </message>
  <message name='getAProducteevFileByItsIdResponseMessage'>
    <part name='response' element='tns:getAProducteevFileByItsIdResponse' />
  </message>
  <message name='getTheLabelWithTheSpecifiedIdRequestMessage'>
    <part name='parameters' element='tns:getTheLabelWithTheSpecifiedIdParameters' />
  </message>
  <message name='getTheLabelWithTheSpecifiedIdResponseMessage'>
    <part name='response' element='tns:getTheLabelWithTheSpecifiedIdResponse' />
  </message>
  <message name='getTheListOfPendingInvitationForTheCurrentUserRequestMessage'>
    <part name='parameters' element='tns:getTheListOfPendingInvitationForTheCurrentUserParameters' />
  </message>
  <message name='getTheListOfPendingInvitationForTheCurrentUserResponseMessage'>
    <part name='response' element='tns:getTheListOfPendingInvitationForTheCurrentUserResponse' />
  </message>
  <message name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressRequestMessage' />
  <message name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressResponseMessage'>
    <part name='response' element='tns:inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressResponse' />
  </message>
  <message name='reSendTheEmailForANetworkInvitationRequestMessage'>
    <part name='parameters' element='tns:reSendTheEmailForANetworkInvitationParameters' />
  </message>
  <message name='reSendTheEmailForANetworkInvitationResponseMessage'>
    <part name='response' element='tns:reSendTheEmailForANetworkInvitationResponse' />
  </message>
  <message name='returnAListOfSuggestionsForTheNaturalLanguageProcessingRequestMessage'>
    <part name='parameters' element='tns:returnAListOfSuggestionsForTheNaturalLanguageProcessingParameters' />
  </message>
  <message name='returnAListOfSuggestionsForTheNaturalLanguageProcessingResponseMessage'>
    <part name='response' element='tns:returnAListOfSuggestionsForTheNaturalLanguageProcessingResponse' />
  </message>
  <message name='returnSuggestedColorsForLabelsRequestMessage' />
  <message name='returnSuggestedColorsForLabelsResponseMessage'>
    <part name='response' element='tns:returnSuggestedColorsForLabelsResponse' />
  </message>
  <message name='updateALabelRequestMessage'>
    <part name='parameters' element='tns:updateALabelParameters' />
  </message>
  <message name='updateALabelResponseMessage'>
    <part name='response' element='tns:updateALabelResponse' />
  </message>
  <message name='uploadALocalFileRequestMessage' />
  <message name='uploadALocalFileResponseMessage'>
    <part name='response' element='tns:uploadALocalFileResponse' />
  </message>
  <message name='uploadARemoteFileRequestMessage' />
  <message name='uploadARemoteFileResponseMessage'>
    <part name='response' element='tns:uploadARemoteFileResponse' />
  </message>
  <portType name='producteevPortType'>
    <operation name='acceptOrRefuseAnInvitationToJoinANetwork'>
      <documentation>updating an invitation is the way to accept or refuse it To do so you need to change the status attribute</documentation>
      <input message='tns:acceptOrRefuseAnInvitationToJoinANetworkRequestMessage' name='acceptOrRefuseAnInvitationToJoinANetworkInput' />
      <output message='tns:acceptOrRefuseAnInvitationToJoinANetworkResponseMessage' name='acceptOrRefuseAnInvitationToJoinANetworkOutput' />
    </operation>
    <operation name='addARestrictedProjectToANetworkInvitation'>
      <documentation>add a restricted project to a network invitation so the user joining the invitation will join the restricted project automatically This Method will return the list of restricted Projects attached to the Invitations</documentation>
      <input message='tns:addARestrictedProjectToANetworkInvitationRequestMessage' name='addARestrictedProjectToANetworkInvitationInput' />
      <output message='tns:addARestrictedProjectToANetworkInvitationResponseMessage' name='addARestrictedProjectToANetworkInvitationOutput' />
    </operation>
    <operation name='createANewLabelOnTheNetwork'>
      <documentation>to create a Label you need to POST a JSON label object containing the title foreground color background color for creation only you also need to send the id of the network in which you wanna create the label in</documentation>
      <input message='tns:createANewLabelOnTheNetworkRequestMessage' name='createANewLabelOnTheNetworkInput' />
      <output message='tns:createANewLabelOnTheNetworkResponseMessage' name='createANewLabelOnTheNetworkOutput' />
    </operation>
    <operation name='deleteALabel'>
      <documentation>delete a Label from the network</documentation>
      <input message='tns:deleteALabelRequestMessage' name='deleteALabelInput' />
      <output message='tns:deleteALabelResponseMessage' name='deleteALabelOutput' />
    </operation>
    <operation name='deleteAProducteevFile'>
      <documentation>delete a file from the cloud storage</documentation>
      <input message='tns:deleteAProducteevFileRequestMessage' name='deleteAProducteevFileInput' />
      <output message='tns:deleteAProducteevFileResponseMessage' name='deleteAProducteevFileOutput' />
    </operation>
    <operation name='getAProducteevFileByItsId'>
      <documentation>files are usually attached to Notes But because they remain an independant object type in the system you need to upload the file first before being able to attach it to a note</documentation>
      <input message='tns:getAProducteevFileByItsIdRequestMessage' name='getAProducteevFileByItsIdInput' />
      <output message='tns:getAProducteevFileByItsIdResponseMessage' name='getAProducteevFileByItsIdOutput' />
    </operation>
    <operation name='getTheLabelWithTheSpecifiedId'>
      <documentation>labels are attached to a task and are available across all your projects inside a network This method returns a Label Object</documentation>
      <input message='tns:getTheLabelWithTheSpecifiedIdRequestMessage' name='getTheLabelWithTheSpecifiedIdInput' />
      <output message='tns:getTheLabelWithTheSpecifiedIdResponseMessage' name='getTheLabelWithTheSpecifiedIdOutput' />
    </operation>
    <operation name='getTheListOfPendingInvitationForTheCurrentUser'>
      <documentation>network Invitations are used to add people in existing networks To invite someone you can either use the targetUser attribute if you know that this person is on Producteev and know his id Otherwise use email and we ll send an invite to this person via email</documentation>
      <input message='tns:getTheListOfPendingInvitationForTheCurrentUserRequestMessage' name='getTheListOfPendingInvitationForTheCurrentUserInput' />
      <output message='tns:getTheListOfPendingInvitationForTheCurrentUserResponseMessage' name='getTheListOfPendingInvitationForTheCurrentUserOutput' />
    </operation>
    <operation name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddress'>
      <documentation>in order to invite a user on a network you need to create a Network Invitation You need to specify the targetUser or an email address the network and the type see list below</documentation>
      <input message='tns:inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressRequestMessage' name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressInput' />
      <output message='tns:inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressResponseMessage' name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddressOutput' />
    </operation>
    <operation name='reSendTheEmailForANetworkInvitation'>
      <documentation>re send the email for a network invitation This call works only if the invitation has the status network invitation status pending</documentation>
      <input message='tns:reSendTheEmailForANetworkInvitationRequestMessage' name='reSendTheEmailForANetworkInvitationInput' />
      <output message='tns:reSendTheEmailForANetworkInvitationResponseMessage' name='reSendTheEmailForANetworkInvitationOutput' />
    </operation>
    <operation name='returnAListOfSuggestionsForTheNaturalLanguageProcessing'>
      <documentation>the call will return a collection of NLP suggestion object</documentation>
      <input message='tns:returnAListOfSuggestionsForTheNaturalLanguageProcessingRequestMessage' name='returnAListOfSuggestionsForTheNaturalLanguageProcessingInput' />
      <output message='tns:returnAListOfSuggestionsForTheNaturalLanguageProcessingResponseMessage' name='returnAListOfSuggestionsForTheNaturalLanguageProcessingOutput' />
    </operation>
    <operation name='returnSuggestedColorsForLabels'>
      <documentation>return the list of recommended colors foreground and background for the labels You can create your labels with your own colors but we strongly recommend to use colors returned by this API call to provide a consistent experience accross all Producteev apps</documentation>
      <input message='tns:returnSuggestedColorsForLabelsRequestMessage' name='returnSuggestedColorsForLabelsInput' />
      <output message='tns:returnSuggestedColorsForLabelsResponseMessage' name='returnSuggestedColorsForLabelsOutput' />
    </operation>
    <operation name='updateALabel'>
      <documentation>updating a label allows you to change its title and colors You can send only the field you wanna update or the full object we will update only the field that are differents from the server If you wanna move it on another network you need to create a new label and delete this one</documentation>
      <input message='tns:updateALabelRequestMessage' name='updateALabelInput' />
      <output message='tns:updateALabelResponseMessage' name='updateALabelOutput' />
    </operation>
    <operation name='uploadALocalFile'>
      <documentation>to create a file object from a local source you need to POST the file using the classic Multipart form data The key for the uploaded data must be file</documentation>
      <input message='tns:uploadALocalFileRequestMessage' name='uploadALocalFileInput' />
      <output message='tns:uploadALocalFileResponseMessage' name='uploadALocalFileOutput' />
    </operation>
    <operation name='uploadARemoteFile'>
      <documentation>to create a file object from a remote source you need to POST a JSON object prefixed by remoteFile and containing the url and fileName</documentation>
      <input message='tns:uploadARemoteFileRequestMessage' name='uploadARemoteFileInput' />
      <output message='tns:uploadARemoteFileResponseMessage' name='uploadARemoteFileOutput' />
    </operation>
  </portType>
  <binding name='producteevBinding' type='tns:producteevPortType'>
    <operation name='acceptOrRefuseAnInvitationToJoinANetwork'>
      <soap12:operation soapAction='http://acceptOrRefuseAnInvitationToJoinANetwork' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addARestrictedProjectToANetworkInvitation'>
      <soap12:operation soapAction='http://addARestrictedProjectToANetworkInvitation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createANewLabelOnTheNetwork'>
      <soap12:operation soapAction='http://createANewLabelOnTheNetwork' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteALabel'>
      <soap12:operation soapAction='http://deleteALabel' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAProducteevFile'>
      <soap12:operation soapAction='http://deleteAProducteevFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAProducteevFileByItsId'>
      <soap12:operation soapAction='http://getAProducteevFileByItsId' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheLabelWithTheSpecifiedId'>
      <soap12:operation soapAction='http://getTheLabelWithTheSpecifiedId' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheListOfPendingInvitationForTheCurrentUser'>
      <soap12:operation soapAction='http://getTheListOfPendingInvitationForTheCurrentUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddress'>
      <soap12:operation soapAction='http://inviteAUserToJoinTheNetworkYouCanUseTheUserIdOrAnEmailAddress' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='reSendTheEmailForANetworkInvitation'>
      <soap12:operation soapAction='http://reSendTheEmailForANetworkInvitation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='returnAListOfSuggestionsForTheNaturalLanguageProcessing'>
      <soap12:operation soapAction='http://returnAListOfSuggestionsForTheNaturalLanguageProcessing' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='returnSuggestedColorsForLabels'>
      <soap12:operation soapAction='http://returnSuggestedColorsForLabels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateALabel'>
      <soap12:operation soapAction='http://updateALabel' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='uploadALocalFile'>
      <soap12:operation soapAction='http://uploadALocalFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='uploadARemoteFile'>
      <soap12:operation soapAction='http://uploadARemoteFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='producteev'>
    <documentation>producteev is the leading social task management solution for teams It s helped thousands of teams get work done faster and more effectively It s brought to you by Jive the world s social business provider</documentation>
    <port name='producteevPort' binding='tns:producteevBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://producteev' />
    </port>
  </service>
</definitions>