<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/apnAsAService/' name='apnAsAService' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/apnAsAService/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/apnAsAService/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/apnAsAService/'>
      <xsd:element name='certificateAddResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateAddJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateFetchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='sandbox' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='pem' type='xsd:string' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateFetchJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='sandbox' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='pem' type='xsd:string' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateRemoveResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateRemoveJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateUpdateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='certificateUpdateJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionBeginResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='tokens' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionBeginJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='tokens' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionDeliverResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionDeliverJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionPreflightResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sessionPreflightJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='success' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='certificateAddRequestMessage' />
  <message name='certificateAddResponseMessage'>
    <part name='response' element='tns:certificateAddResponse' />
  </message>
  <message name='certificateAddJsonRequestMessage' />
  <message name='certificateAddJsonResponseMessage'>
    <part name='response' element='tns:certificateAddJsonResponse' />
  </message>
  <message name='certificateFetchRequestMessage' />
  <message name='certificateFetchResponseMessage'>
    <part name='response' element='tns:certificateFetchResponse' />
  </message>
  <message name='certificateFetchJsonRequestMessage' />
  <message name='certificateFetchJsonResponseMessage'>
    <part name='response' element='tns:certificateFetchJsonResponse' />
  </message>
  <message name='certificateRemoveRequestMessage' />
  <message name='certificateRemoveResponseMessage'>
    <part name='response' element='tns:certificateRemoveResponse' />
  </message>
  <message name='certificateRemoveJsonRequestMessage' />
  <message name='certificateRemoveJsonResponseMessage'>
    <part name='response' element='tns:certificateRemoveJsonResponse' />
  </message>
  <message name='certificateUpdateRequestMessage' />
  <message name='certificateUpdateResponseMessage'>
    <part name='response' element='tns:certificateUpdateResponse' />
  </message>
  <message name='certificateUpdateJsonRequestMessage' />
  <message name='certificateUpdateJsonResponseMessage'>
    <part name='response' element='tns:certificateUpdateJsonResponse' />
  </message>
  <message name='sessionBeginRequestMessage' />
  <message name='sessionBeginResponseMessage'>
    <part name='response' element='tns:sessionBeginResponse' />
  </message>
  <message name='sessionBeginJsonRequestMessage' />
  <message name='sessionBeginJsonResponseMessage'>
    <part name='response' element='tns:sessionBeginJsonResponse' />
  </message>
  <message name='sessionDeliverRequestMessage' />
  <message name='sessionDeliverResponseMessage'>
    <part name='response' element='tns:sessionDeliverResponse' />
  </message>
  <message name='sessionDeliverJsonRequestMessage' />
  <message name='sessionDeliverJsonResponseMessage'>
    <part name='response' element='tns:sessionDeliverJsonResponse' />
  </message>
  <message name='sessionPreflightRequestMessage' />
  <message name='sessionPreflightResponseMessage'>
    <part name='response' element='tns:sessionPreflightResponse' />
  </message>
  <message name='sessionPreflightJsonRequestMessage' />
  <message name='sessionPreflightJsonResponseMessage'>
    <part name='response' element='tns:sessionPreflightJsonResponse' />
  </message>
  <portType name='apnAsAServicePortType'>
    <operation name='certificateAdd'>
      <documentation>add a certificate pem bundle for later use in sending notifications</documentation>
      <input message='tns:certificateAddRequestMessage' name='certificateAddInput' />
      <output message='tns:certificateAddResponseMessage' name='certificateAddOutput' />
    </operation>
    <operation name='certificateAddJson'>
      <documentation>add a certificate pem bundle for later use in sending notifications</documentation>
      <input message='tns:certificateAddJsonRequestMessage' name='certificateAddJsonInput' />
      <output message='tns:certificateAddJsonResponseMessage' name='certificateAddJsonOutput' />
    </operation>
    <operation name='certificateFetch'>
      <documentation>fetch a certificate pem bundle</documentation>
      <input message='tns:certificateFetchRequestMessage' name='certificateFetchInput' />
      <output message='tns:certificateFetchResponseMessage' name='certificateFetchOutput' />
    </operation>
    <operation name='certificateFetchJson'>
      <documentation>fetch a certificate pem bundle</documentation>
      <input message='tns:certificateFetchJsonRequestMessage' name='certificateFetchJsonInput' />
      <output message='tns:certificateFetchJsonResponseMessage' name='certificateFetchJsonOutput' />
    </operation>
    <operation name='certificateRemove'>
      <documentation>remove a certificate pem bundle</documentation>
      <input message='tns:certificateRemoveRequestMessage' name='certificateRemoveInput' />
      <output message='tns:certificateRemoveResponseMessage' name='certificateRemoveOutput' />
    </operation>
    <operation name='certificateRemoveJson'>
      <documentation></documentation>
      <input message='tns:certificateRemoveJsonRequestMessage' name='certificateRemoveJsonInput' />
      <output message='tns:certificateRemoveJsonResponseMessage' name='certificateRemoveJsonOutput' />
    </operation>
    <operation name='certificateUpdate'>
      <documentation>update a certificate pem bundle</documentation>
      <input message='tns:certificateUpdateRequestMessage' name='certificateUpdateInput' />
      <output message='tns:certificateUpdateResponseMessage' name='certificateUpdateOutput' />
    </operation>
    <operation name='certificateUpdateJson'>
      <documentation>update a certificate pem bundle</documentation>
      <input message='tns:certificateUpdateJsonRequestMessage' name='certificateUpdateJsonInput' />
      <output message='tns:certificateUpdateJsonResponseMessage' name='certificateUpdateJsonOutput' />
    </operation>
    <operation name='sessionBegin'>
      <documentation>begin a session</documentation>
      <input message='tns:sessionBeginRequestMessage' name='sessionBeginInput' />
      <output message='tns:sessionBeginResponseMessage' name='sessionBeginOutput' />
    </operation>
    <operation name='sessionBeginJson'>
      <documentation>begin a session</documentation>
      <input message='tns:sessionBeginJsonRequestMessage' name='sessionBeginJsonInput' />
      <output message='tns:sessionBeginJsonResponseMessage' name='sessionBeginJsonOutput' />
    </operation>
    <operation name='sessionDeliver'>
      <documentation>deliver notifications to a session and end the session</documentation>
      <input message='tns:sessionDeliverRequestMessage' name='sessionDeliverInput' />
      <output message='tns:sessionDeliverResponseMessage' name='sessionDeliverOutput' />
    </operation>
    <operation name='sessionDeliverJson'>
      <documentation>deliver notifications to a session and end the session</documentation>
      <input message='tns:sessionDeliverJsonRequestMessage' name='sessionDeliverJsonInput' />
      <output message='tns:sessionDeliverJsonResponseMessage' name='sessionDeliverJsonOutput' />
    </operation>
    <operation name='sessionPreflight'>
      <documentation>preflight a session s credentials</documentation>
      <input message='tns:sessionPreflightRequestMessage' name='sessionPreflightInput' />
      <output message='tns:sessionPreflightResponseMessage' name='sessionPreflightOutput' />
    </operation>
    <operation name='sessionPreflightJson'>
      <documentation>preflight a session s credentials</documentation>
      <input message='tns:sessionPreflightJsonRequestMessage' name='sessionPreflightJsonInput' />
      <output message='tns:sessionPreflightJsonResponseMessage' name='sessionPreflightJsonOutput' />
    </operation>
  </portType>
  <binding name='apnAsAServiceBinding' type='tns:apnAsAServicePortType'>
    <operation name='certificateAdd'>
      <soap12:operation soapAction='http://certificateAdd' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateAddJson'>
      <soap12:operation soapAction='http://certificateAddJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateFetch'>
      <soap12:operation soapAction='http://certificateFetch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateFetchJson'>
      <soap12:operation soapAction='http://certificateFetchJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateRemove'>
      <soap12:operation soapAction='http://certificateRemove' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateRemoveJson'>
      <soap12:operation soapAction='http://certificateRemoveJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateUpdate'>
      <soap12:operation soapAction='http://certificateUpdate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='certificateUpdateJson'>
      <soap12:operation soapAction='http://certificateUpdateJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionBegin'>
      <soap12:operation soapAction='http://sessionBegin' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionBeginJson'>
      <soap12:operation soapAction='http://sessionBeginJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionDeliver'>
      <soap12:operation soapAction='http://sessionDeliver' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionDeliverJson'>
      <soap12:operation soapAction='http://sessionDeliverJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionPreflight'>
      <soap12:operation soapAction='http://sessionPreflight' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sessionPreflightJson'>
      <soap12:operation soapAction='http://sessionPreflightJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='apnAsAService'>
    <documentation>aPNaaS allows your app to send Apple push notifications with an absolute minimum in overhead We take care of delivery feedback and all interim infrastructure allowing your app to send only the essential information easily send to APNS on iOS and Mac</documentation>
    <port name='apnAsAServicePort' binding='tns:apnAsAServiceBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://apnAsAService' />
    </port>
  </service>
</definitions>