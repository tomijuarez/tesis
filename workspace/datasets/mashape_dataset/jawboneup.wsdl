<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/jawboneUp/' name='jawboneUp' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/jawboneUp/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/jawboneUp/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/jawboneUp/'>
      <xsd:element name='createEventToRecordBodyMetricsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='image' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='note' type='xsd:string' minOccurs='0' />
                  <xsd:element name='weight' type='xsd:int' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='time_updated' type='xsd:int' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='lean_mass' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_created' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_removed' type='xsd:int' minOccurs='0' />
                  <xsd:element name='body_fat' type='xsd:int' minOccurs='0' />
                  <xsd:element name='bmi' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewMealResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='place_lat' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='image' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='place_lon' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewUserEventToRecordCardiacMetricsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='image' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='diastolic_pressure' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_created' type='xsd:int' minOccurs='0' />
                  <xsd:element name='heart_rate' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_removed' type='xsd:int' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='time_updated' type='xsd:int' minOccurs='0' />
                  <xsd:element name='systolic_pressure' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createSleepResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createWorkoutResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createsANewGenericEventForTheUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAGenericEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAGenericEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleCardiacMetricEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='eventxid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleCardiacMetricEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleMoodEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleMoodEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleWeightMetricEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='eventxid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteASingleWeightMetricEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteSingleMealEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteSingleMealEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteWorkoutEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteWorkoutEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAGenericEventForTheUserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='limit' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAGenericEventForTheUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleBodyCompositionMetricEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='eventxid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleBodyCompositionMetricEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='image' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='note' type='xsd:string' minOccurs='0' />
                  <xsd:element name='weight' type='xsd:int' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='time_updated' type='xsd:int' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='lean_mass' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_created' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_removed' type='xsd:int' minOccurs='0' />
                  <xsd:element name='body_fat' type='xsd:int' minOccurs='0' />
                  <xsd:element name='bmi' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleCardiacMetricEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='eventxid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleCardiacMetricEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='image' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='note' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='diastolic_pressure' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_created' type='xsd:int' minOccurs='0' />
                  <xsd:element name='heart_rate' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time_removed' type='xsd:int' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='time_updated' type='xsd:int' minOccurs='0' />
                  <xsd:element name='systolic_pressure' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleMoodEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getASingleMoodEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBodyMetricsRecordEventsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='limit' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBodyMetricsRecordEventsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getCardiacMetricsEventsForAUserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='limit' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getCardiacMetricsEventsForAUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getDetailedInformationAboutTheUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getInformationAboutASpecificWorkoutParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getInformationAboutASpecificWorkoutResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getInformationAboutSpecificMealParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getInformationAboutSpecificMealResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='place_lat' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='image' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='place_lon' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getListOfFriendsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getMoveIntensityParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='movexid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getMoveIntensityResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSleepPeriodInformationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSleepPeriodInformationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSleepPhasesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSleepPhasesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheInformationAboutASpecificMoveParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='movexid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheInformationAboutASpecificMoveResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMoodParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMoodResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMoveGraphsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='movexid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMoveGraphsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMovesListParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSMovesListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSTrendsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='bucketsize' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='enddate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='range' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='rangeduration' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSTrendsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSWorkoutGraphsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSWorkoutGraphsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSWorkoutListParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='limit' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTheUserSWorkoutListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSMealListParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endtime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSMealListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSSleepParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='date' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='enddate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagetoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='starttime' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='updatedafter' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSSleepResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSSleepGraphsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserSSleepGraphsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getWorkoutIntensityParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getWorkoutIntensityResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recordUserSMoodResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAMealParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAMealResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='place_lat' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='image' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='place_lon' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='title' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateWorkoutParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='xid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateWorkoutResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:int' minOccurs='0' />
                  <xsd:element name='user_xid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='createEventToRecordBodyMetricsRequestMessage' />
  <message name='createEventToRecordBodyMetricsResponseMessage'>
    <part name='response' element='tns:createEventToRecordBodyMetricsResponse' />
  </message>
  <message name='createNewMealRequestMessage' />
  <message name='createNewMealResponseMessage'>
    <part name='response' element='tns:createNewMealResponse' />
  </message>
  <message name='createNewUserEventToRecordCardiacMetricsRequestMessage' />
  <message name='createNewUserEventToRecordCardiacMetricsResponseMessage'>
    <part name='response' element='tns:createNewUserEventToRecordCardiacMetricsResponse' />
  </message>
  <message name='createSleepRequestMessage' />
  <message name='createSleepResponseMessage'>
    <part name='response' element='tns:createSleepResponse' />
  </message>
  <message name='createWorkoutRequestMessage' />
  <message name='createWorkoutResponseMessage'>
    <part name='response' element='tns:createWorkoutResponse' />
  </message>
  <message name='createsANewGenericEventForTheUserRequestMessage' />
  <message name='createsANewGenericEventForTheUserResponseMessage'>
    <part name='response' element='tns:createsANewGenericEventForTheUserResponse' />
  </message>
  <message name='deleteAGenericEventRequestMessage'>
    <part name='parameters' element='tns:deleteAGenericEventParameters' />
  </message>
  <message name='deleteAGenericEventResponseMessage'>
    <part name='response' element='tns:deleteAGenericEventResponse' />
  </message>
  <message name='deleteASingleCardiacMetricEventRequestMessage'>
    <part name='parameters' element='tns:deleteASingleCardiacMetricEventParameters' />
  </message>
  <message name='deleteASingleCardiacMetricEventResponseMessage'>
    <part name='response' element='tns:deleteASingleCardiacMetricEventResponse' />
  </message>
  <message name='deleteASingleMoodEventRequestMessage'>
    <part name='parameters' element='tns:deleteASingleMoodEventParameters' />
  </message>
  <message name='deleteASingleMoodEventResponseMessage'>
    <part name='response' element='tns:deleteASingleMoodEventResponse' />
  </message>
  <message name='deleteASingleWeightMetricEventRequestMessage'>
    <part name='parameters' element='tns:deleteASingleWeightMetricEventParameters' />
  </message>
  <message name='deleteASingleWeightMetricEventResponseMessage'>
    <part name='response' element='tns:deleteASingleWeightMetricEventResponse' />
  </message>
  <message name='deleteSingleMealEventRequestMessage'>
    <part name='parameters' element='tns:deleteSingleMealEventParameters' />
  </message>
  <message name='deleteSingleMealEventResponseMessage'>
    <part name='response' element='tns:deleteSingleMealEventResponse' />
  </message>
  <message name='deleteWorkoutEventRequestMessage'>
    <part name='parameters' element='tns:deleteWorkoutEventParameters' />
  </message>
  <message name='deleteWorkoutEventResponseMessage'>
    <part name='response' element='tns:deleteWorkoutEventResponse' />
  </message>
  <message name='getAGenericEventForTheUserRequestMessage'>
    <part name='parameters' element='tns:getAGenericEventForTheUserParameters' />
  </message>
  <message name='getAGenericEventForTheUserResponseMessage'>
    <part name='response' element='tns:getAGenericEventForTheUserResponse' />
  </message>
  <message name='getASingleBodyCompositionMetricEventRequestMessage'>
    <part name='parameters' element='tns:getASingleBodyCompositionMetricEventParameters' />
  </message>
  <message name='getASingleBodyCompositionMetricEventResponseMessage'>
    <part name='response' element='tns:getASingleBodyCompositionMetricEventResponse' />
  </message>
  <message name='getASingleCardiacMetricEventRequestMessage'>
    <part name='parameters' element='tns:getASingleCardiacMetricEventParameters' />
  </message>
  <message name='getASingleCardiacMetricEventResponseMessage'>
    <part name='response' element='tns:getASingleCardiacMetricEventResponse' />
  </message>
  <message name='getASingleMoodEventRequestMessage'>
    <part name='parameters' element='tns:getASingleMoodEventParameters' />
  </message>
  <message name='getASingleMoodEventResponseMessage'>
    <part name='response' element='tns:getASingleMoodEventResponse' />
  </message>
  <message name='getBodyMetricsRecordEventsRequestMessage'>
    <part name='parameters' element='tns:getBodyMetricsRecordEventsParameters' />
  </message>
  <message name='getBodyMetricsRecordEventsResponseMessage'>
    <part name='response' element='tns:getBodyMetricsRecordEventsResponse' />
  </message>
  <message name='getCardiacMetricsEventsForAUserRequestMessage'>
    <part name='parameters' element='tns:getCardiacMetricsEventsForAUserParameters' />
  </message>
  <message name='getCardiacMetricsEventsForAUserResponseMessage'>
    <part name='response' element='tns:getCardiacMetricsEventsForAUserResponse' />
  </message>
  <message name='getDetailedInformationAboutTheUserRequestMessage' />
  <message name='getDetailedInformationAboutTheUserResponseMessage'>
    <part name='response' element='tns:getDetailedInformationAboutTheUserResponse' />
  </message>
  <message name='getInformationAboutASpecificWorkoutRequestMessage'>
    <part name='parameters' element='tns:getInformationAboutASpecificWorkoutParameters' />
  </message>
  <message name='getInformationAboutASpecificWorkoutResponseMessage'>
    <part name='response' element='tns:getInformationAboutASpecificWorkoutResponse' />
  </message>
  <message name='getInformationAboutSpecificMealRequestMessage'>
    <part name='parameters' element='tns:getInformationAboutSpecificMealParameters' />
  </message>
  <message name='getInformationAboutSpecificMealResponseMessage'>
    <part name='response' element='tns:getInformationAboutSpecificMealResponse' />
  </message>
  <message name='getListOfFriendsRequestMessage' />
  <message name='getListOfFriendsResponseMessage'>
    <part name='response' element='tns:getListOfFriendsResponse' />
  </message>
  <message name='getMoveIntensityRequestMessage'>
    <part name='parameters' element='tns:getMoveIntensityParameters' />
  </message>
  <message name='getMoveIntensityResponseMessage'>
    <part name='response' element='tns:getMoveIntensityResponse' />
  </message>
  <message name='getSleepPeriodInformationRequestMessage'>
    <part name='parameters' element='tns:getSleepPeriodInformationParameters' />
  </message>
  <message name='getSleepPeriodInformationResponseMessage'>
    <part name='response' element='tns:getSleepPeriodInformationResponse' />
  </message>
  <message name='getSleepPhasesRequestMessage'>
    <part name='parameters' element='tns:getSleepPhasesParameters' />
  </message>
  <message name='getSleepPhasesResponseMessage'>
    <part name='response' element='tns:getSleepPhasesResponse' />
  </message>
  <message name='getTheInformationAboutASpecificMoveRequestMessage'>
    <part name='parameters' element='tns:getTheInformationAboutASpecificMoveParameters' />
  </message>
  <message name='getTheInformationAboutASpecificMoveResponseMessage'>
    <part name='response' element='tns:getTheInformationAboutASpecificMoveResponse' />
  </message>
  <message name='getTheUserSMoodRequestMessage'>
    <part name='parameters' element='tns:getTheUserSMoodParameters' />
  </message>
  <message name='getTheUserSMoodResponseMessage'>
    <part name='response' element='tns:getTheUserSMoodResponse' />
  </message>
  <message name='getTheUserSMoveGraphsRequestMessage'>
    <part name='parameters' element='tns:getTheUserSMoveGraphsParameters' />
  </message>
  <message name='getTheUserSMoveGraphsResponseMessage'>
    <part name='response' element='tns:getTheUserSMoveGraphsResponse' />
  </message>
  <message name='getTheUserSMovesListRequestMessage'>
    <part name='parameters' element='tns:getTheUserSMovesListParameters' />
  </message>
  <message name='getTheUserSMovesListResponseMessage'>
    <part name='response' element='tns:getTheUserSMovesListResponse' />
  </message>
  <message name='getTheUserSTrendsRequestMessage'>
    <part name='parameters' element='tns:getTheUserSTrendsParameters' />
  </message>
  <message name='getTheUserSTrendsResponseMessage'>
    <part name='response' element='tns:getTheUserSTrendsResponse' />
  </message>
  <message name='getTheUserSWorkoutGraphsRequestMessage'>
    <part name='parameters' element='tns:getTheUserSWorkoutGraphsParameters' />
  </message>
  <message name='getTheUserSWorkoutGraphsResponseMessage'>
    <part name='response' element='tns:getTheUserSWorkoutGraphsResponse' />
  </message>
  <message name='getTheUserSWorkoutListRequestMessage'>
    <part name='parameters' element='tns:getTheUserSWorkoutListParameters' />
  </message>
  <message name='getTheUserSWorkoutListResponseMessage'>
    <part name='response' element='tns:getTheUserSWorkoutListResponse' />
  </message>
  <message name='getUserSMealListRequestMessage'>
    <part name='parameters' element='tns:getUserSMealListParameters' />
  </message>
  <message name='getUserSMealListResponseMessage'>
    <part name='response' element='tns:getUserSMealListResponse' />
  </message>
  <message name='getUserSSleepRequestMessage'>
    <part name='parameters' element='tns:getUserSSleepParameters' />
  </message>
  <message name='getUserSSleepResponseMessage'>
    <part name='response' element='tns:getUserSSleepResponse' />
  </message>
  <message name='getUserSSleepGraphsRequestMessage'>
    <part name='parameters' element='tns:getUserSSleepGraphsParameters' />
  </message>
  <message name='getUserSSleepGraphsResponseMessage'>
    <part name='response' element='tns:getUserSSleepGraphsResponse' />
  </message>
  <message name='getWorkoutIntensityRequestMessage'>
    <part name='parameters' element='tns:getWorkoutIntensityParameters' />
  </message>
  <message name='getWorkoutIntensityResponseMessage'>
    <part name='response' element='tns:getWorkoutIntensityResponse' />
  </message>
  <message name='recordUserSMoodRequestMessage' />
  <message name='recordUserSMoodResponseMessage'>
    <part name='response' element='tns:recordUserSMoodResponse' />
  </message>
  <message name='updateAMealRequestMessage'>
    <part name='parameters' element='tns:updateAMealParameters' />
  </message>
  <message name='updateAMealResponseMessage'>
    <part name='response' element='tns:updateAMealResponse' />
  </message>
  <message name='updateWorkoutRequestMessage'>
    <part name='parameters' element='tns:updateWorkoutParameters' />
  </message>
  <message name='updateWorkoutResponseMessage'>
    <part name='response' element='tns:updateWorkoutResponse' />
  </message>
  <portType name='jawboneUpPortType'>
    <operation name='createEventToRecordBodyMetrics'>
      <documentation></documentation>
      <input message='tns:createEventToRecordBodyMetricsRequestMessage' name='createEventToRecordBodyMetricsInput' />
      <output message='tns:createEventToRecordBodyMetricsResponseMessage' name='createEventToRecordBodyMetricsOutput' />
    </operation>
    <operation name='createNewMeal'>
      <documentation></documentation>
      <input message='tns:createNewMealRequestMessage' name='createNewMealInput' />
      <output message='tns:createNewMealResponseMessage' name='createNewMealOutput' />
    </operation>
    <operation name='createNewUserEventToRecordCardiacMetrics'>
      <documentation></documentation>
      <input message='tns:createNewUserEventToRecordCardiacMetricsRequestMessage' name='createNewUserEventToRecordCardiacMetricsInput' />
      <output message='tns:createNewUserEventToRecordCardiacMetricsResponseMessage' name='createNewUserEventToRecordCardiacMetricsOutput' />
    </operation>
    <operation name='createSleep'>
      <documentation>creates a new sleep</documentation>
      <input message='tns:createSleepRequestMessage' name='createSleepInput' />
      <output message='tns:createSleepResponseMessage' name='createSleepOutput' />
    </operation>
    <operation name='createWorkout'>
      <documentation></documentation>
      <input message='tns:createWorkoutRequestMessage' name='createWorkoutInput' />
      <output message='tns:createWorkoutResponseMessage' name='createWorkoutOutput' />
    </operation>
    <operation name='createsANewGenericEventForTheUser'>
      <documentation>generic event is recommended as a means to post app specific user actions to the user s feed</documentation>
      <input message='tns:createsANewGenericEventForTheUserRequestMessage' name='createsANewGenericEventForTheUserInput' />
      <output message='tns:createsANewGenericEventForTheUserResponseMessage' name='createsANewGenericEventForTheUserOutput' />
    </operation>
    <operation name='deleteAGenericEvent'>
      <documentation>deletes an existing generic event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteAGenericEventRequestMessage' name='deleteAGenericEventInput' />
      <output message='tns:deleteAGenericEventResponseMessage' name='deleteAGenericEventOutput' />
    </operation>
    <operation name='deleteASingleCardiacMetricEvent'>
      <documentation>deletes an existing event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteASingleCardiacMetricEventRequestMessage' name='deleteASingleCardiacMetricEventInput' />
      <output message='tns:deleteASingleCardiacMetricEventResponseMessage' name='deleteASingleCardiacMetricEventOutput' />
    </operation>
    <operation name='deleteASingleMoodEvent'>
      <documentation>deletes an existing event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteASingleMoodEventRequestMessage' name='deleteASingleMoodEventInput' />
      <output message='tns:deleteASingleMoodEventResponseMessage' name='deleteASingleMoodEventOutput' />
    </operation>
    <operation name='deleteASingleWeightMetricEvent'>
      <documentation>deletes an existing event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteASingleWeightMetricEventRequestMessage' name='deleteASingleWeightMetricEventInput' />
      <output message='tns:deleteASingleWeightMetricEventResponseMessage' name='deleteASingleWeightMetricEventOutput' />
    </operation>
    <operation name='deleteSingleMealEvent'>
      <documentation>deletes an existing meal event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteSingleMealEventRequestMessage' name='deleteSingleMealEventInput' />
      <output message='tns:deleteSingleMealEventResponseMessage' name='deleteSingleMealEventOutput' />
    </operation>
    <operation name='deleteWorkoutEvent'>
      <documentation>deletes an existing workout event The event must have been created by the partner for this call to succeed</documentation>
      <input message='tns:deleteWorkoutEventRequestMessage' name='deleteWorkoutEventInput' />
      <output message='tns:deleteWorkoutEventResponseMessage' name='deleteWorkoutEventOutput' />
    </operation>
    <operation name='getAGenericEventForTheUser'>
      <documentation>returns the list of generic events of the current user This list can be paginated by date or timestamp</documentation>
      <input message='tns:getAGenericEventForTheUserRequestMessage' name='getAGenericEventForTheUserInput' />
      <output message='tns:getAGenericEventForTheUserResponseMessage' name='getAGenericEventForTheUserOutput' />
    </operation>
    <operation name='getASingleBodyCompositionMetricEvent'>
      <documentation></documentation>
      <input message='tns:getASingleBodyCompositionMetricEventRequestMessage' name='getASingleBodyCompositionMetricEventInput' />
      <output message='tns:getASingleBodyCompositionMetricEventResponseMessage' name='getASingleBodyCompositionMetricEventOutput' />
    </operation>
    <operation name='getASingleCardiacMetricEvent'>
      <documentation></documentation>
      <input message='tns:getASingleCardiacMetricEventRequestMessage' name='getASingleCardiacMetricEventInput' />
      <output message='tns:getASingleCardiacMetricEventResponseMessage' name='getASingleCardiacMetricEventOutput' />
    </operation>
    <operation name='getASingleMoodEvent'>
      <documentation></documentation>
      <input message='tns:getASingleMoodEventRequestMessage' name='getASingleMoodEventInput' />
      <output message='tns:getASingleMoodEventResponseMessage' name='getASingleMoodEventOutput' />
    </operation>
    <operation name='getBodyMetricsRecordEvents'>
      <documentation></documentation>
      <input message='tns:getBodyMetricsRecordEventsRequestMessage' name='getBodyMetricsRecordEventsInput' />
      <output message='tns:getBodyMetricsRecordEventsResponseMessage' name='getBodyMetricsRecordEventsOutput' />
    </operation>
    <operation name='getCardiacMetricsEventsForAUser'>
      <documentation></documentation>
      <input message='tns:getCardiacMetricsEventsForAUserRequestMessage' name='getCardiacMetricsEventsForAUserInput' />
      <output message='tns:getCardiacMetricsEventsForAUserResponseMessage' name='getCardiacMetricsEventsForAUserOutput' />
    </operation>
    <operation name='getDetailedInformationAboutTheUser'>
      <documentation>returns the basic information of the user</documentation>
      <input message='tns:getDetailedInformationAboutTheUserRequestMessage' name='getDetailedInformationAboutTheUserInput' />
      <output message='tns:getDetailedInformationAboutTheUserResponseMessage' name='getDetailedInformationAboutTheUserOutput' />
    </operation>
    <operation name='getInformationAboutASpecificWorkout'>
      <documentation>returns detailed information about the given workout</documentation>
      <input message='tns:getInformationAboutASpecificWorkoutRequestMessage' name='getInformationAboutASpecificWorkoutInput' />
      <output message='tns:getInformationAboutASpecificWorkoutResponseMessage' name='getInformationAboutASpecificWorkoutOutput' />
    </operation>
    <operation name='getInformationAboutSpecificMeal'>
      <documentation>returns detailed information about a specific meal</documentation>
      <input message='tns:getInformationAboutSpecificMealRequestMessage' name='getInformationAboutSpecificMealInput' />
      <output message='tns:getInformationAboutSpecificMealResponseMessage' name='getInformationAboutSpecificMealOutput' />
    </operation>
    <operation name='getListOfFriends'>
      <documentation>returns the list of unique identifiers XIDs of the user s friends</documentation>
      <input message='tns:getListOfFriendsRequestMessage' name='getListOfFriendsInput' />
      <output message='tns:getListOfFriendsResponseMessage' name='getListOfFriendsOutput' />
    </operation>
    <operation name='getMoveIntensity'>
      <documentation>returns a time series of the move intensity during the day Each entry is a tuple that contains a timestamp and the average intensity during that period Currently it s an arbitrary equidistributed list of timestamps</documentation>
      <input message='tns:getMoveIntensityRequestMessage' name='getMoveIntensityInput' />
      <output message='tns:getMoveIntensityResponseMessage' name='getMoveIntensityOutput' />
    </operation>
    <operation name='getSleepPeriodInformation'>
      <documentation>returns detailed information about the given sleep period denoted by xid</documentation>
      <input message='tns:getSleepPeriodInformationRequestMessage' name='getSleepPeriodInformationInput' />
      <output message='tns:getSleepPeriodInformationResponseMessage' name='getSleepPeriodInformationOutput' />
    </operation>
    <operation name='getSleepPhases'>
      <documentation>a sleep period can be sub divided into phases awake light and deep This endpoint returns a time series of the sleep phase during the period Each entry is a tuple that contains a timestamp and the sleep phase awake light deep The timestamps are distributed based on when the type of sleep changes</documentation>
      <input message='tns:getSleepPhasesRequestMessage' name='getSleepPhasesInput' />
      <output message='tns:getSleepPhasesResponseMessage' name='getSleepPhasesOutput' />
    </operation>
    <operation name='getTheInformationAboutASpecificMove'>
      <documentation>returns the detailed information of the given move</documentation>
      <input message='tns:getTheInformationAboutASpecificMoveRequestMessage' name='getTheInformationAboutASpecificMoveInput' />
      <output message='tns:getTheInformationAboutASpecificMoveResponseMessage' name='getTheInformationAboutASpecificMoveOutput' />
    </operation>
    <operation name='getTheUserSMood'>
      <documentation>returns the user s mood for the given day Defaults to get today s mood</documentation>
      <input message='tns:getTheUserSMoodRequestMessage' name='getTheUserSMoodInput' />
      <output message='tns:getTheUserSMoodResponseMessage' name='getTheUserSMoodOutput' />
    </operation>
    <operation name='getTheUserSMoveGraphs'>
      <documentation>returns the image of the given move</documentation>
      <input message='tns:getTheUserSMoveGraphsRequestMessage' name='getTheUserSMoveGraphsInput' />
      <output message='tns:getTheUserSMoveGraphsResponseMessage' name='getTheUserSMoveGraphsOutput' />
    </operation>
    <operation name='getTheUserSMovesList'>
      <documentation>returns the list of moves of the current user This list can be paginated by date or timestamp</documentation>
      <input message='tns:getTheUserSMovesListRequestMessage' name='getTheUserSMovesListInput' />
      <output message='tns:getTheUserSMovesListResponseMessage' name='getTheUserSMovesListOutput' />
    </operation>
    <operation name='getTheUserSTrends'>
      <documentation>returns the user s trends over a period of time e g weeks using the given granularity e g by day</documentation>
      <input message='tns:getTheUserSTrendsRequestMessage' name='getTheUserSTrendsInput' />
      <output message='tns:getTheUserSTrendsResponseMessage' name='getTheUserSTrendsOutput' />
    </operation>
    <operation name='getTheUserSWorkoutGraphs'>
      <documentation></documentation>
      <input message='tns:getTheUserSWorkoutGraphsRequestMessage' name='getTheUserSWorkoutGraphsInput' />
      <output message='tns:getTheUserSWorkoutGraphsResponseMessage' name='getTheUserSWorkoutGraphsOutput' />
    </operation>
    <operation name='getTheUserSWorkoutList'>
      <documentation>returns the list of workouts of the current user This list can be paginated by date or timestamp</documentation>
      <input message='tns:getTheUserSWorkoutListRequestMessage' name='getTheUserSWorkoutListInput' />
      <output message='tns:getTheUserSWorkoutListResponseMessage' name='getTheUserSWorkoutListOutput' />
    </operation>
    <operation name='getUserSMealList'>
      <documentation>returns the list of meals of the current user This list can be paginated by date or timestamp</documentation>
      <input message='tns:getUserSMealListRequestMessage' name='getUserSMealListInput' />
      <output message='tns:getUserSMealListResponseMessage' name='getUserSMealListOutput' />
    </operation>
    <operation name='getUserSSleep'>
      <documentation>returns the list of sleeps of the current user This list can be paginated by date or timestamp</documentation>
      <input message='tns:getUserSSleepRequestMessage' name='getUserSSleepInput' />
      <output message='tns:getUserSSleepResponseMessage' name='getUserSSleepOutput' />
    </operation>
    <operation name='getUserSSleepGraphs'>
      <documentation>returns the image of the given sleep</documentation>
      <input message='tns:getUserSSleepGraphsRequestMessage' name='getUserSSleepGraphsInput' />
      <output message='tns:getUserSSleepGraphsResponseMessage' name='getUserSSleepGraphsOutput' />
    </operation>
    <operation name='getWorkoutIntensity'>
      <documentation>returns a time series of the workout intensity during the day Each entry is a tuple that contains a timestamp and the average intensity during that period Currently it s an arbitrary equidistributed list of timestamps</documentation>
      <input message='tns:getWorkoutIntensityRequestMessage' name='getWorkoutIntensityInput' />
      <output message='tns:getWorkoutIntensityResponseMessage' name='getWorkoutIntensityOutput' />
    </operation>
    <operation name='recordUserSMood'>
      <documentation></documentation>
      <input message='tns:recordUserSMoodRequestMessage' name='recordUserSMoodInput' />
      <output message='tns:recordUserSMoodResponseMessage' name='recordUserSMoodOutput' />
    </operation>
    <operation name='updateAMeal'>
      <documentation></documentation>
      <input message='tns:updateAMealRequestMessage' name='updateAMealInput' />
      <output message='tns:updateAMealResponseMessage' name='updateAMealOutput' />
    </operation>
    <operation name='updateWorkout'>
      <documentation>updates an existing workout</documentation>
      <input message='tns:updateWorkoutRequestMessage' name='updateWorkoutInput' />
      <output message='tns:updateWorkoutResponseMessage' name='updateWorkoutOutput' />
    </operation>
  </portType>
  <binding name='jawboneUpBinding' type='tns:jawboneUpPortType'>
    <operation name='createEventToRecordBodyMetrics'>
      <soap12:operation soapAction='http://createEventToRecordBodyMetrics' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewMeal'>
      <soap12:operation soapAction='http://createNewMeal' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewUserEventToRecordCardiacMetrics'>
      <soap12:operation soapAction='http://createNewUserEventToRecordCardiacMetrics' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createSleep'>
      <soap12:operation soapAction='http://createSleep' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createWorkout'>
      <soap12:operation soapAction='http://createWorkout' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createsANewGenericEventForTheUser'>
      <soap12:operation soapAction='http://createsANewGenericEventForTheUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAGenericEvent'>
      <soap12:operation soapAction='http://deleteAGenericEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteASingleCardiacMetricEvent'>
      <soap12:operation soapAction='http://deleteASingleCardiacMetricEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteASingleMoodEvent'>
      <soap12:operation soapAction='http://deleteASingleMoodEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteASingleWeightMetricEvent'>
      <soap12:operation soapAction='http://deleteASingleWeightMetricEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteSingleMealEvent'>
      <soap12:operation soapAction='http://deleteSingleMealEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteWorkoutEvent'>
      <soap12:operation soapAction='http://deleteWorkoutEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAGenericEventForTheUser'>
      <soap12:operation soapAction='http://getAGenericEventForTheUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getASingleBodyCompositionMetricEvent'>
      <soap12:operation soapAction='http://getASingleBodyCompositionMetricEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getASingleCardiacMetricEvent'>
      <soap12:operation soapAction='http://getASingleCardiacMetricEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getASingleMoodEvent'>
      <soap12:operation soapAction='http://getASingleMoodEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getBodyMetricsRecordEvents'>
      <soap12:operation soapAction='http://getBodyMetricsRecordEvents' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getCardiacMetricsEventsForAUser'>
      <soap12:operation soapAction='http://getCardiacMetricsEventsForAUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getDetailedInformationAboutTheUser'>
      <soap12:operation soapAction='http://getDetailedInformationAboutTheUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getInformationAboutASpecificWorkout'>
      <soap12:operation soapAction='http://getInformationAboutASpecificWorkout' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getInformationAboutSpecificMeal'>
      <soap12:operation soapAction='http://getInformationAboutSpecificMeal' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getListOfFriends'>
      <soap12:operation soapAction='http://getListOfFriends' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getMoveIntensity'>
      <soap12:operation soapAction='http://getMoveIntensity' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getSleepPeriodInformation'>
      <soap12:operation soapAction='http://getSleepPeriodInformation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getSleepPhases'>
      <soap12:operation soapAction='http://getSleepPhases' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheInformationAboutASpecificMove'>
      <soap12:operation soapAction='http://getTheInformationAboutASpecificMove' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSMood'>
      <soap12:operation soapAction='http://getTheUserSMood' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSMoveGraphs'>
      <soap12:operation soapAction='http://getTheUserSMoveGraphs' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSMovesList'>
      <soap12:operation soapAction='http://getTheUserSMovesList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSTrends'>
      <soap12:operation soapAction='http://getTheUserSTrends' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSWorkoutGraphs'>
      <soap12:operation soapAction='http://getTheUserSWorkoutGraphs' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTheUserSWorkoutList'>
      <soap12:operation soapAction='http://getTheUserSWorkoutList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUserSMealList'>
      <soap12:operation soapAction='http://getUserSMealList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUserSSleep'>
      <soap12:operation soapAction='http://getUserSSleep' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUserSSleepGraphs'>
      <soap12:operation soapAction='http://getUserSSleepGraphs' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getWorkoutIntensity'>
      <soap12:operation soapAction='http://getWorkoutIntensity' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='recordUserSMood'>
      <soap12:operation soapAction='http://recordUserSMood' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateAMeal'>
      <soap12:operation soapAction='http://updateAMeal' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateWorkout'>
      <soap12:operation soapAction='http://updateWorkout' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='jawboneUp'>
    <documentation>uP is a wristband and app that tracks how you sleep move and eat then helps you use that information to feel your best The UP Platform documentation provides information related to establishing and maintaining an API connection with UP The purpose of this API is to enable the exchange of select data in order to extend and augment the UP user experience and support complementary services This can include data aggregation and visualization gaming marketing rewards provisioning and more</documentation>
    <port name='jawboneUpPort' binding='tns:jawboneUpBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://jawboneUp' />
    </port>
  </service>
</definitions>