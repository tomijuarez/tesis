<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/jeannie/' name='jeannie' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/jeannie/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/jeannie/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/jeannie/'>
      <xsd:element name='jsonParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='input' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='location' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='page' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='timezone' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='jsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='output' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='entities' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='text' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='responseTime' type='xsd:int' minOccurs='0' />
                  <xsd:element name='actions' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='say' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='results' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='info' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='clientFeatures' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='responseTime' type='xsd:int' minOccurs='0' />
                  <xsd:element name='detectedLanguage' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='location' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                  <xsd:element name='locale' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='login' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='clientTime' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='teachParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='action' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='request' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='response' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='teaching' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='teachResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='clientfeatures' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='input' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='location' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='out' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='timezone' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='jsonRequestMessage'>
    <part name='parameters' element='tns:jsonParameters' />
  </message>
  <message name='jsonResponseMessage'>
    <part name='response' element='tns:jsonResponse' />
  </message>
  <message name='teachRequestMessage'>
    <part name='parameters' element='tns:teachParameters' />
  </message>
  <message name='teachResponseMessage'>
    <part name='response' element='tns:teachResponse' />
  </message>
  <message name='textRequestMessage'>
    <part name='parameters' element='tns:textParameters' />
  </message>
  <message name='textResponseMessage'>
    <part name='response' element='tns:textResponse' />
  </message>
  <portType name='jeanniePortType'>
    <operation name='json'>
      <documentation>http request</documentation>
      <input message='tns:jsonRequestMessage' name='jsonInput' />
      <output message='tns:jsonResponseMessage' name='jsonOutput' />
    </operation>
    <operation name='teach'>
      <documentation>teach your bot new actions and responses</documentation>
      <input message='tns:teachRequestMessage' name='teachInput' />
      <output message='tns:teachResponseMessage' name='teachOutput' />
    </operation>
    <operation name='text'>
      <documentation>plaintext response</documentation>
      <input message='tns:textRequestMessage' name='textInput' />
      <output message='tns:textResponseMessage' name='textOutput' />
    </operation>
  </portType>
  <binding name='jeannieBinding' type='tns:jeanniePortType'>
    <operation name='json'>
      <soap12:operation soapAction='http://json' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='teach'>
      <soap12:operation soapAction='http://teach' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='text'>
      <soap12:operation soapAction='http://text' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='jeannie'>
    <documentation>jeannie Voice Actions is a virtual assistant with over three million downloads now also available via API The objective of this service is to provide you and your robot with the smartest response to any natural language question just like Siri Jeannie API provides an interface to the standard functions that users demand of modern voice assistants like chatting controlling your devices looking up information creating messages and much much more You can extend this API to your own needs It also provides useful metadata such as sentence analysis and entity extraction that goes beyond simple chatting and voice commands Several million users have already been in contact with this API http www voice actions com Examples https weannie pannous com api input hi login test user https ask pannous com input hi Complete documentation https docs google com document d dVG B Sc x fi pN iJJjfF bJY KEFzUqjOb NsntI edit</documentation>
    <port name='jeanniePort' binding='tns:jeannieBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://jeannie' />
    </port>
  </service>
</definitions>