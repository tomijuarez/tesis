<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/zenpayroll/' name='zenpayroll' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/zenpayroll/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/zenpayroll/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/zenpayroll/'>
      <xsd:element name='apiVCompaniesCompanyIdParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='companyid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVCompaniesCompanyIdResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='compensations' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='paid_time_off' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='hourly' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='multiple' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='fixed' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='locations' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='street_1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='city' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='street_2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='state' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='trade_name' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVCompaniesCompanyIdEmployeesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='companyid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVCompaniesCompanyIdEmployeesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date_of_birth' type='xsd:date' minOccurs='0' />
                  <xsd:element name='jobs' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='rate' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='title' type='xsd:string' minOccurs='0' />
                        <xsd:element name='payment_unit' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='location_id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='middle_initial' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='last_name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='first_name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVCompaniesCompanyIdPayPeriodsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='companyid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='enddate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startdate' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVCompaniesCompanyIdPayPeriodsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='end_date' type='xsd:date' minOccurs='0' />
                  <xsd:element name='eligible_employees' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='job_ids' type='xsd:int' minOccurs='0' />
                        <xsd:element name='employee_id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='payroll' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='processed' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='payroll_deadline' type='xsd:date' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='start_date' type='xsd:date' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='apiVMeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='roles' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='payroll_admin' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='company_ids' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPayrollsForACompanyParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='companyid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPayrollsForACompanyResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='processed' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='pay_period' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='end_date' type='xsd:date' minOccurs='0' />
                        <xsd:element name='start_date' type='xsd:date' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='payroll_deadline' type='xsd:date' minOccurs='0' />
                  <xsd:element name='employee_compensations' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='hourly_compensations' maxOccurs='unbounded'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='hours' type='xsd:decimal' minOccurs='0' />
                              <xsd:element name='compensation_multiplier' type='xsd:int' minOccurs='0' />
                              <xsd:element name='job_id' type='xsd:int' minOccurs='0' />
                              <xsd:element name='name' type='xsd:string' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='employee_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='paid_time_off' maxOccurs='unbounded'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='hours' type='xsd:decimal' minOccurs='0' />
                              <xsd:element name='name' type='xsd:string' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='fixed_compensations' maxOccurs='unbounded'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='amount' type='xsd:decimal' minOccurs='0' />
                              <xsd:element name='job_id' type='xsd:int' minOccurs='0' />
                              <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='version' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updatePayrollParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='companyid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='payperiodstartdate' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updatePayrollResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='apiVCompaniesCompanyIdRequestMessage'>
    <part name='parameters' element='tns:apiVCompaniesCompanyIdParameters' />
  </message>
  <message name='apiVCompaniesCompanyIdResponseMessage'>
    <part name='response' element='tns:apiVCompaniesCompanyIdResponse' />
  </message>
  <message name='apiVCompaniesCompanyIdEmployeesRequestMessage'>
    <part name='parameters' element='tns:apiVCompaniesCompanyIdEmployeesParameters' />
  </message>
  <message name='apiVCompaniesCompanyIdEmployeesResponseMessage'>
    <part name='response' element='tns:apiVCompaniesCompanyIdEmployeesResponse' />
  </message>
  <message name='apiVCompaniesCompanyIdPayPeriodsRequestMessage'>
    <part name='parameters' element='tns:apiVCompaniesCompanyIdPayPeriodsParameters' />
  </message>
  <message name='apiVCompaniesCompanyIdPayPeriodsResponseMessage'>
    <part name='response' element='tns:apiVCompaniesCompanyIdPayPeriodsResponse' />
  </message>
  <message name='apiVMeRequestMessage' />
  <message name='apiVMeResponseMessage'>
    <part name='response' element='tns:apiVMeResponse' />
  </message>
  <message name='getPayrollsForACompanyRequestMessage'>
    <part name='parameters' element='tns:getPayrollsForACompanyParameters' />
  </message>
  <message name='getPayrollsForACompanyResponseMessage'>
    <part name='response' element='tns:getPayrollsForACompanyResponse' />
  </message>
  <message name='updatePayrollRequestMessage'>
    <part name='parameters' element='tns:updatePayrollParameters' />
  </message>
  <message name='updatePayrollResponseMessage'>
    <part name='response' element='tns:updatePayrollResponse' />
  </message>
  <portType name='zenpayrollPortType'>
    <operation name='apiVCompaniesCompanyId'>
      <documentation>returns Get information about a particular company</documentation>
      <input message='tns:apiVCompaniesCompanyIdRequestMessage' name='apiVCompaniesCompanyIdInput' />
      <output message='tns:apiVCompaniesCompanyIdResponseMessage' name='apiVCompaniesCompanyIdOutput' />
    </operation>
    <operation name='apiVCompaniesCompanyIdEmployees'>
      <documentation>array of all employees currently employeed with this company</documentation>
      <input message='tns:apiVCompaniesCompanyIdEmployeesRequestMessage' name='apiVCompaniesCompanyIdEmployeesInput' />
      <output message='tns:apiVCompaniesCompanyIdEmployeesResponseMessage' name='apiVCompaniesCompanyIdEmployeesOutput' />
    </operation>
    <operation name='apiVCompaniesCompanyIdPayPeriods'>
      <documentation>array of all pay periods past and current for a company</documentation>
      <input message='tns:apiVCompaniesCompanyIdPayPeriodsRequestMessage' name='apiVCompaniesCompanyIdPayPeriodsInput' />
      <output message='tns:apiVCompaniesCompanyIdPayPeriodsResponseMessage' name='apiVCompaniesCompanyIdPayPeriodsOutput' />
    </operation>
    <operation name='apiVMe'>
      <documentation>returns Information pertaining to the currently authenticated user</documentation>
      <input message='tns:apiVMeRequestMessage' name='apiVMeInput' />
      <output message='tns:apiVMeResponseMessage' name='apiVMeOutput' />
    </operation>
    <operation name='getPayrollsForACompany'>
      <documentation>array of all payrolls current and past for a company</documentation>
      <input message='tns:getPayrollsForACompanyRequestMessage' name='getPayrollsForACompanyInput' />
      <output message='tns:getPayrollsForACompanyResponseMessage' name='getPayrollsForACompanyOutput' />
    </operation>
    <operation name='updatePayroll'>
      <documentation>this endpoint allows you to update information for one or more employees for a specific payroll The payrolls are identified by their pay periods start date and end date Both are required and must correspond with an existing unprocessed payroll If the dates do not match the entire request will be rejected This was an explicit design decision to remove any assumptions around the timespan for data sent</documentation>
      <input message='tns:updatePayrollRequestMessage' name='updatePayrollInput' />
      <output message='tns:updatePayrollResponseMessage' name='updatePayrollOutput' />
    </operation>
  </portType>
  <binding name='zenpayrollBinding' type='tns:zenpayrollPortType'>
    <operation name='apiVCompaniesCompanyId'>
      <soap12:operation soapAction='http://apiVCompaniesCompanyId' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='apiVCompaniesCompanyIdEmployees'>
      <soap12:operation soapAction='http://apiVCompaniesCompanyIdEmployees' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='apiVCompaniesCompanyIdPayPeriods'>
      <soap12:operation soapAction='http://apiVCompaniesCompanyIdPayPeriods' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='apiVMe'>
      <soap12:operation soapAction='http://apiVMe' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getPayrollsForACompany'>
      <soap12:operation soapAction='http://getPayrollsForACompany' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updatePayroll'>
      <soap12:operation soapAction='http://updatePayroll' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='zenpayroll'>
    <documentation>zenPayroll is delightful modern payroll Our comprehensive payroll service enables businesses to get set up and run payroll in minutes from any web enabled device All government payroll taxes reporting and compliance are taken care of automatically and paperlessly The ZenPayroll API transforms payroll from being a vertical silo to a horizontal platform that seamlessly connects applications for HR time tracking accounting and other important back office functions The immediate benefit of enabling systems to talk to payroll is efficiency and improved data quality In the long run opening up the flow of information between back office applications and payroll is about creating new ways to manage work and compensate employees For instance imagine a point of sale system that could dynamically offer incentives to salespeople based on changes in inventory or an HR system that could generate on the spot bonuses for employees to reward them for their great work</documentation>
    <port name='zenpayrollPort' binding='tns:zenpayrollBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://zenpayroll' />
    </port>
  </service>
</definitions>