<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/usda/' name='usda' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/usda/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/usda/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/usda/'>
      <xsd:element name='amberwavesCollectionOfContentNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesCollectionOfContentNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFilteredCountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='alias' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getcount' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFilteredCountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFirstContentNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFirstContentNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFirstNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='alias' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesFirstNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesRetrievePagedCollectionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='alias' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesRetrievePagedCollectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesSectionAliasesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesSectionAliasesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesSingleNodeContentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesSingleNodeContentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesTotalCountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getcount' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='amberwavesTotalCountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartRetrieveContentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartRetrieveContentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsFirstNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsFirstNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsRetrieveChartAliasesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsRetrieveChartAliasesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsRetrieveNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsRetrieveNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsTotalCountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getcount' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='chartsTotalCountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsNodeCountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getcount' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsNodeCountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildNodeCountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getchildren' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='getcount' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildNodeCountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildNodesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getchildren' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildNodesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1' />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildTopicsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='getchildren' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsChildTopicsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1' />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsContentNodeCollectionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsContentNodeCollectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsRootLevelContentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsRootLevelContentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='ParentId' type='xsd:int' minOccurs='0' />
                  <xsd:element name='UpdateDate' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='Title' type='xsd:string' minOccurs='0' />
                  <xsd:element name='Id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='Properties' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='keyField' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='propertyValueField' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='ReleaseDate' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='CreateDate' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='Url' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsSingleTopicParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='topicsSingleTopicResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='amberwavesCollectionOfContentNodesRequestMessage'>
    <part name='parameters' element='tns:amberwavesCollectionOfContentNodesParameters' />
  </message>
  <message name='amberwavesCollectionOfContentNodesResponseMessage'>
    <part name='response' element='tns:amberwavesCollectionOfContentNodesResponse' />
  </message>
  <message name='amberwavesFilteredCountRequestMessage'>
    <part name='parameters' element='tns:amberwavesFilteredCountParameters' />
  </message>
  <message name='amberwavesFilteredCountResponseMessage'>
    <part name='response' element='tns:amberwavesFilteredCountResponse' />
  </message>
  <message name='amberwavesFirstContentNodesRequestMessage'>
    <part name='parameters' element='tns:amberwavesFirstContentNodesParameters' />
  </message>
  <message name='amberwavesFirstContentNodesResponseMessage'>
    <part name='response' element='tns:amberwavesFirstContentNodesResponse' />
  </message>
  <message name='amberwavesFirstNodesRequestMessage'>
    <part name='parameters' element='tns:amberwavesFirstNodesParameters' />
  </message>
  <message name='amberwavesFirstNodesResponseMessage'>
    <part name='response' element='tns:amberwavesFirstNodesResponse' />
  </message>
  <message name='amberwavesRetrievePagedCollectionRequestMessage'>
    <part name='parameters' element='tns:amberwavesRetrievePagedCollectionParameters' />
  </message>
  <message name='amberwavesRetrievePagedCollectionResponseMessage'>
    <part name='response' element='tns:amberwavesRetrievePagedCollectionResponse' />
  </message>
  <message name='amberwavesSectionAliasesRequestMessage'>
    <part name='parameters' element='tns:amberwavesSectionAliasesParameters' />
  </message>
  <message name='amberwavesSectionAliasesResponseMessage'>
    <part name='response' element='tns:amberwavesSectionAliasesResponse' />
  </message>
  <message name='amberwavesSingleNodeContentRequestMessage'>
    <part name='parameters' element='tns:amberwavesSingleNodeContentParameters' />
  </message>
  <message name='amberwavesSingleNodeContentResponseMessage'>
    <part name='response' element='tns:amberwavesSingleNodeContentResponse' />
  </message>
  <message name='amberwavesTotalCountRequestMessage'>
    <part name='parameters' element='tns:amberwavesTotalCountParameters' />
  </message>
  <message name='amberwavesTotalCountResponseMessage'>
    <part name='response' element='tns:amberwavesTotalCountResponse' />
  </message>
  <message name='chartRetrieveContentRequestMessage'>
    <part name='parameters' element='tns:chartRetrieveContentParameters' />
  </message>
  <message name='chartRetrieveContentResponseMessage'>
    <part name='response' element='tns:chartRetrieveContentResponse' />
  </message>
  <message name='chartsFirstNodesRequestMessage'>
    <part name='parameters' element='tns:chartsFirstNodesParameters' />
  </message>
  <message name='chartsFirstNodesResponseMessage'>
    <part name='response' element='tns:chartsFirstNodesResponse' />
  </message>
  <message name='chartsRetrieveChartAliasesRequestMessage'>
    <part name='parameters' element='tns:chartsRetrieveChartAliasesParameters' />
  </message>
  <message name='chartsRetrieveChartAliasesResponseMessage'>
    <part name='response' element='tns:chartsRetrieveChartAliasesResponse' />
  </message>
  <message name='chartsRetrieveNodesRequestMessage'>
    <part name='parameters' element='tns:chartsRetrieveNodesParameters' />
  </message>
  <message name='chartsRetrieveNodesResponseMessage'>
    <part name='response' element='tns:chartsRetrieveNodesResponse' />
  </message>
  <message name='chartsTotalCountRequestMessage'>
    <part name='parameters' element='tns:chartsTotalCountParameters' />
  </message>
  <message name='chartsTotalCountResponseMessage'>
    <part name='response' element='tns:chartsTotalCountResponse' />
  </message>
  <message name='topicsNodeCountRequestMessage'>
    <part name='parameters' element='tns:topicsNodeCountParameters' />
  </message>
  <message name='topicsNodeCountResponseMessage'>
    <part name='response' element='tns:topicsNodeCountResponse' />
  </message>
  <message name='topicsChildNodeCountRequestMessage'>
    <part name='parameters' element='tns:topicsChildNodeCountParameters' />
  </message>
  <message name='topicsChildNodeCountResponseMessage'>
    <part name='response' element='tns:topicsChildNodeCountResponse' />
  </message>
  <message name='topicsChildNodesRequestMessage'>
    <part name='parameters' element='tns:topicsChildNodesParameters' />
  </message>
  <message name='topicsChildNodesResponseMessage'>
    <part name='response' element='tns:topicsChildNodesResponse' />
  </message>
  <message name='topicsChildTopicsRequestMessage'>
    <part name='parameters' element='tns:topicsChildTopicsParameters' />
  </message>
  <message name='topicsChildTopicsResponseMessage'>
    <part name='response' element='tns:topicsChildTopicsResponse' />
  </message>
  <message name='topicsContentNodeCollectionRequestMessage'>
    <part name='parameters' element='tns:topicsContentNodeCollectionParameters' />
  </message>
  <message name='topicsContentNodeCollectionResponseMessage'>
    <part name='response' element='tns:topicsContentNodeCollectionResponse' />
  </message>
  <message name='topicsRootLevelContentRequestMessage'>
    <part name='parameters' element='tns:topicsRootLevelContentParameters' />
  </message>
  <message name='topicsRootLevelContentResponseMessage'>
    <part name='response' element='tns:topicsRootLevelContentResponse' />
  </message>
  <message name='topicsSingleTopicRequestMessage'>
    <part name='parameters' element='tns:topicsSingleTopicParameters' />
  </message>
  <message name='topicsSingleTopicResponseMessage'>
    <part name='response' element='tns:topicsSingleTopicResponse' />
  </message>
  <portType name='usdaPortType'>
    <operation name='amberwavesCollectionOfContentNodes'>
      <documentation>retrieves a paged collection of amber waves content nodes sorted by descending release date</documentation>
      <input message='tns:amberwavesCollectionOfContentNodesRequestMessage' name='amberwavesCollectionOfContentNodesInput' />
      <output message='tns:amberwavesCollectionOfContentNodesResponseMessage' name='amberwavesCollectionOfContentNodesOutput' />
    </operation>
    <operation name='amberwavesFilteredCount'>
      <documentation>retrieves a total count of amber waves content nodes filtered by a particular section alias</documentation>
      <input message='tns:amberwavesFilteredCountRequestMessage' name='amberwavesFilteredCountInput' />
      <output message='tns:amberwavesFilteredCountResponseMessage' name='amberwavesFilteredCountOutput' />
    </operation>
    <operation name='amberwavesFirstContentNodes'>
      <documentation>retrieves the first amber waves content nodes sorted by descending release date</documentation>
      <input message='tns:amberwavesFirstContentNodesRequestMessage' name='amberwavesFirstContentNodesInput' />
      <output message='tns:amberwavesFirstContentNodesResponseMessage' name='amberwavesFirstContentNodesOutput' />
    </operation>
    <operation name='amberwavesFirstNodes'>
      <documentation>retrieves the first amber waves nodes filtered by a particular section alias ordered by descending release date</documentation>
      <input message='tns:amberwavesFirstNodesRequestMessage' name='amberwavesFirstNodesInput' />
      <output message='tns:amberwavesFirstNodesResponseMessage' name='amberwavesFirstNodesOutput' />
    </operation>
    <operation name='amberwavesRetrievePagedCollection'>
      <documentation>retrieves a paged collection of amber waves content nodes filtered by a particular section alias ordered by descending release date</documentation>
      <input message='tns:amberwavesRetrievePagedCollectionRequestMessage' name='amberwavesRetrievePagedCollectionInput' />
      <output message='tns:amberwavesRetrievePagedCollectionResponseMessage' name='amberwavesRetrievePagedCollectionOutput' />
    </operation>
    <operation name='amberwavesSectionAliases'>
      <documentation>retrieves all amber waves section aliases</documentation>
      <input message='tns:amberwavesSectionAliasesRequestMessage' name='amberwavesSectionAliasesInput' />
      <output message='tns:amberwavesSectionAliasesResponseMessage' name='amberwavesSectionAliasesOutput' />
    </operation>
    <operation name='amberwavesSingleNodeContent'>
      <documentation>retrieves a single amber waves content node</documentation>
      <input message='tns:amberwavesSingleNodeContentRequestMessage' name='amberwavesSingleNodeContentInput' />
      <output message='tns:amberwavesSingleNodeContentResponseMessage' name='amberwavesSingleNodeContentOutput' />
    </operation>
    <operation name='amberwavesTotalCount'>
      <documentation>retrieves a total count of all amber waves content nodes</documentation>
      <input message='tns:amberwavesTotalCountRequestMessage' name='amberwavesTotalCountInput' />
      <output message='tns:amberwavesTotalCountResponseMessage' name='amberwavesTotalCountOutput' />
    </operation>
    <operation name='chartRetrieveContent'>
      <documentation>retrieves a single chart content node</documentation>
      <input message='tns:chartRetrieveContentRequestMessage' name='chartRetrieveContentInput' />
      <output message='tns:chartRetrieveContentResponseMessage' name='chartRetrieveContentOutput' />
    </operation>
    <operation name='chartsFirstNodes'>
      <documentation>retrieves a collection of the first chart content nodes sorted by descending release date</documentation>
      <input message='tns:chartsFirstNodesRequestMessage' name='chartsFirstNodesInput' />
      <output message='tns:chartsFirstNodesResponseMessage' name='chartsFirstNodesOutput' />
    </operation>
    <operation name='chartsRetrieveChartAliases'>
      <documentation>retrieves a collection of valid chart collection aliases</documentation>
      <input message='tns:chartsRetrieveChartAliasesRequestMessage' name='chartsRetrieveChartAliasesInput' />
      <output message='tns:chartsRetrieveChartAliasesResponseMessage' name='chartsRetrieveChartAliasesOutput' />
    </operation>
    <operation name='chartsRetrieveNodes'>
      <documentation>retrieves a paged collection of chart content nodes sorted by descending release date</documentation>
      <input message='tns:chartsRetrieveNodesRequestMessage' name='chartsRetrieveNodesInput' />
      <output message='tns:chartsRetrieveNodesResponseMessage' name='chartsRetrieveNodesOutput' />
    </operation>
    <operation name='chartsTotalCount'>
      <documentation>retrieves a total count of all chart content nodes</documentation>
      <input message='tns:chartsTotalCountRequestMessage' name='chartsTotalCountInput' />
      <output message='tns:chartsTotalCountResponseMessage' name='chartsTotalCountOutput' />
    </operation>
    <operation name='topicsNodeCount'>
      <documentation>retrieves a total count of all topic nodes</documentation>
      <input message='tns:topicsNodeCountRequestMessage' name='topicsNodeCountInput' />
      <output message='tns:topicsNodeCountResponseMessage' name='topicsNodeCountOutput' />
    </operation>
    <operation name='topicsChildNodeCount'>
      <documentation>retrieves a total count of all child topic nodes</documentation>
      <input message='tns:topicsChildNodeCountRequestMessage' name='topicsChildNodeCountInput' />
      <output message='tns:topicsChildNodeCountResponseMessage' name='topicsChildNodeCountOutput' />
    </operation>
    <operation name='topicsChildNodes'>
      <documentation>retrieves a collection of all child topic nodes of the specified topic node</documentation>
      <input message='tns:topicsChildNodesRequestMessage' name='topicsChildNodesInput' />
      <output message='tns:topicsChildNodesResponseMessage' name='topicsChildNodesOutput' />
    </operation>
    <operation name='topicsChildTopics'>
      <documentation>retrieves a paged collection of all child topic nodes of the specified topic node</documentation>
      <input message='tns:topicsChildTopicsRequestMessage' name='topicsChildTopicsInput' />
      <output message='tns:topicsChildTopicsResponseMessage' name='topicsChildTopicsOutput' />
    </operation>
    <operation name='topicsContentNodeCollection'>
      <documentation>retrieves a paged collection of topic content nodes</documentation>
      <input message='tns:topicsContentNodeCollectionRequestMessage' name='topicsContentNodeCollectionInput' />
      <output message='tns:topicsContentNodeCollectionResponseMessage' name='topicsContentNodeCollectionOutput' />
    </operation>
    <operation name='topicsRootLevelContent'>
      <documentation>retrieves a collection of all root level topic content nodes</documentation>
      <input message='tns:topicsRootLevelContentRequestMessage' name='topicsRootLevelContentInput' />
      <output message='tns:topicsRootLevelContentResponseMessage' name='topicsRootLevelContentOutput' />
    </operation>
    <operation name='topicsSingleTopic'>
      <documentation>retrieves a single topic node</documentation>
      <input message='tns:topicsSingleTopicRequestMessage' name='topicsSingleTopicInput' />
      <output message='tns:topicsSingleTopicResponseMessage' name='topicsSingleTopicOutput' />
    </operation>
  </portType>
  <binding name='usdaBinding' type='tns:usdaPortType'>
    <operation name='amberwavesCollectionOfContentNodes'>
      <soap12:operation soapAction='http://amberwavesCollectionOfContentNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesFilteredCount'>
      <soap12:operation soapAction='http://amberwavesFilteredCount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesFirstContentNodes'>
      <soap12:operation soapAction='http://amberwavesFirstContentNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesFirstNodes'>
      <soap12:operation soapAction='http://amberwavesFirstNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesRetrievePagedCollection'>
      <soap12:operation soapAction='http://amberwavesRetrievePagedCollection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesSectionAliases'>
      <soap12:operation soapAction='http://amberwavesSectionAliases' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesSingleNodeContent'>
      <soap12:operation soapAction='http://amberwavesSingleNodeContent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='amberwavesTotalCount'>
      <soap12:operation soapAction='http://amberwavesTotalCount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='chartRetrieveContent'>
      <soap12:operation soapAction='http://chartRetrieveContent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='chartsFirstNodes'>
      <soap12:operation soapAction='http://chartsFirstNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='chartsRetrieveChartAliases'>
      <soap12:operation soapAction='http://chartsRetrieveChartAliases' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='chartsRetrieveNodes'>
      <soap12:operation soapAction='http://chartsRetrieveNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='chartsTotalCount'>
      <soap12:operation soapAction='http://chartsTotalCount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsNodeCount'>
      <soap12:operation soapAction='http://topicsNodeCount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsChildNodeCount'>
      <soap12:operation soapAction='http://topicsChildNodeCount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsChildNodes'>
      <soap12:operation soapAction='http://topicsChildNodes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsChildTopics'>
      <soap12:operation soapAction='http://topicsChildTopics' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsContentNodeCollection'>
      <soap12:operation soapAction='http://topicsContentNodeCollection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsRootLevelContent'>
      <soap12:operation soapAction='http://topicsRootLevelContent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='topicsSingleTopic'>
      <soap12:operation soapAction='http://topicsSingleTopic' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='usda'>
    <documentation>united States Government Data and API</documentation>
    <port name='usdaPort' binding='tns:usdaBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://usda' />
    </port>
  </service>
</definitions>