<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/wazeRouteCalculation/' name='wazeRouteCalculation' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/wazeRouteCalculation/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/wazeRouteCalculation/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/wazeRouteCalculation/'>
      <xsd:element name='addressListParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addressListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='addressList' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesDirectionsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='end' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesDirectionsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='endPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='endLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='endLatitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='routesWithDirections' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='routeStreets' type='xsd:string' maxOccurs='unbounded' />
                  <xsd:element name='routeParts' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='streetName' type='xsd:string' minOccurs='0' />
                        <xsd:element name='timeFromStartInSeconds' type='xsd:int' minOccurs='0' />
                        <xsd:element name='instruction' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='lengthOfPartInMeters' type='xsd:int' minOccurs='0' />
                        <xsd:element name='tollRoad' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='timeToCrossInSeconds' type='xsd:int' minOccurs='0' />
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='routeStatus' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='routeName' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesCalculationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='end' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesCalculationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='routes' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='routeLengthKM' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='routeDurationInMinutes' type='xsd:int' minOccurs='0' />
                  <xsd:element name='routeLengthMiles' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='toll' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='routeName' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='endPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='startLatitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='endLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='endLatitude' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesCalculationCoordinatesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='endlat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endlon' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startlat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startlon' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesCalculationCoordinatesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='routes' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='routeLengthKM' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='routeDurationInMinutes' type='xsd:int' minOccurs='0' />
                  <xsd:element name='routeLengthMiles' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='toll' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='routeName' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='endPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='startLatitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='endLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='endLatitude' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesDirectionsCoordinatesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='endlat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='endlon' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startlat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startlon' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routesDirectionsCoordinatesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='endPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='startPoint' type='xsd:string' minOccurs='0' />
            <xsd:element name='endLongitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='endLatitude' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='routesWithDirections' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='routeStreets' type='xsd:string' maxOccurs='unbounded' />
                  <xsd:element name='routeParts' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='streetName' type='xsd:string' minOccurs='0' />
                        <xsd:element name='timeFromStartInSeconds' type='xsd:int' minOccurs='0' />
                        <xsd:element name='instruction' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='lengthOfPartInMeters' type='xsd:int' minOccurs='0' />
                        <xsd:element name='tollRoad' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='timeToCrossInSeconds' type='xsd:int' minOccurs='0' />
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='routeStatus' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='routeName' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='addressListRequestMessage'>
    <part name='parameters' element='tns:addressListParameters' />
  </message>
  <message name='addressListResponseMessage'>
    <part name='response' element='tns:addressListResponse' />
  </message>
  <message name='routesDirectionsRequestMessage'>
    <part name='parameters' element='tns:routesDirectionsParameters' />
  </message>
  <message name='routesDirectionsResponseMessage'>
    <part name='response' element='tns:routesDirectionsResponse' />
  </message>
  <message name='routesCalculationRequestMessage'>
    <part name='parameters' element='tns:routesCalculationParameters' />
  </message>
  <message name='routesCalculationResponseMessage'>
    <part name='response' element='tns:routesCalculationResponse' />
  </message>
  <message name='routesCalculationCoordinatesRequestMessage'>
    <part name='parameters' element='tns:routesCalculationCoordinatesParameters' />
  </message>
  <message name='routesCalculationCoordinatesResponseMessage'>
    <part name='response' element='tns:routesCalculationCoordinatesResponse' />
  </message>
  <message name='routesDirectionsCoordinatesRequestMessage'>
    <part name='parameters' element='tns:routesDirectionsCoordinatesParameters' />
  </message>
  <message name='routesDirectionsCoordinatesResponseMessage'>
    <part name='response' element='tns:routesDirectionsCoordinatesResponse' />
  </message>
  <portType name='wazeRouteCalculationPortType'>
    <operation name='addressList'>
      <documentation>returns a list of address options from the user input free text use this to give the users several options to choose from</documentation>
      <input message='tns:addressListRequestMessage' name='addressListInput' />
      <output message='tns:addressListResponseMessage' name='addressListOutput' />
    </operation>
    <operation name='routesDirections'>
      <documentation>send start end point use address list call for more fine grained input and get routes with directions</documentation>
      <input message='tns:routesDirectionsRequestMessage' name='routesDirectionsInput' />
      <output message='tns:routesDirectionsResponseMessage' name='routesDirectionsOutput' />
    </operation>
    <operation name='routesCalculation'>
      <documentation>send start end point use address list call for more fine grained input and get routes time cordinates</documentation>
      <input message='tns:routesCalculationRequestMessage' name='routesCalculationInput' />
      <output message='tns:routesCalculationResponseMessage' name='routesCalculationOutput' />
    </operation>
    <operation name='routesCalculationCoordinates'>
      <documentation>get routes by latitude and longitude coordinates</documentation>
      <input message='tns:routesCalculationCoordinatesRequestMessage' name='routesCalculationCoordinatesInput' />
      <output message='tns:routesCalculationCoordinatesResponseMessage' name='routesCalculationCoordinatesOutput' />
    </operation>
    <operation name='routesDirectionsCoordinates'>
      <documentation>get routes with directions by latitude and longitude coordinates</documentation>
      <input message='tns:routesDirectionsCoordinatesRequestMessage' name='routesDirectionsCoordinatesInput' />
      <output message='tns:routesDirectionsCoordinatesResponseMessage' name='routesDirectionsCoordinatesOutput' />
    </operation>
  </portType>
  <binding name='wazeRouteCalculationBinding' type='tns:wazeRouteCalculationPortType'>
    <operation name='addressList'>
      <soap12:operation soapAction='http://addressList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routesDirections'>
      <soap12:operation soapAction='http://routesDirections' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routesCalculation'>
      <soap12:operation soapAction='http://routesCalculation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routesCalculationCoordinates'>
      <soap12:operation soapAction='http://routesCalculationCoordinates' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routesDirectionsCoordinates'>
      <soap12:operation soapAction='http://routesDirectionsCoordinates' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='wazeRouteCalculation'>
    <documentation>calculate route information from the most accurate service based on live user traffic showing route duration distance tolls more</documentation>
    <port name='wazeRouteCalculationPort' binding='tns:wazeRouteCalculationBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://wazeRouteCalculation' />
    </port>
  </service>
</definitions>