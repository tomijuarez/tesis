<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/dailycred/' name='dailycred' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/dailycred/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/dailycred/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/dailycred/'>
      <xsd:element name='accountEventTimelineParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='clientid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='clientsecret' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='eventtype' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountEventTimelineResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='changeAUserSEmailAddressResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='changePasswordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectAnExistingUserWithANewIdentityProviderParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='clientid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='identityprovider' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='redirecturi' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='state' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectAnExistingUserWithANewIdentityProviderResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createACustomEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createAUserWithOnlyAnEmailParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='clientid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='email' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createAUserWithOnlyAnEmailResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='findAUserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='accesstoken' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='clientid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='clientsecret' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='email' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='userid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='username' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='findAUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPasswordResetTokenResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeAnAttributeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='resetPasswordsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAnAttributeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='taggingUsersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='triggerAReferralResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='untaggingUsersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userEventTimelineParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='eventtype' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userEventTimelineResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='accountEventTimelineRequestMessage'>
    <part name='parameters' element='tns:accountEventTimelineParameters' />
  </message>
  <message name='accountEventTimelineResponseMessage'>
    <part name='response' element='tns:accountEventTimelineResponse' />
  </message>
  <message name='changeAUserSEmailAddressRequestMessage' />
  <message name='changeAUserSEmailAddressResponseMessage'>
    <part name='response' element='tns:changeAUserSEmailAddressResponse' />
  </message>
  <message name='changePasswordRequestMessage' />
  <message name='changePasswordResponseMessage'>
    <part name='response' element='tns:changePasswordResponse' />
  </message>
  <message name='connectAnExistingUserWithANewIdentityProviderRequestMessage'>
    <part name='parameters' element='tns:connectAnExistingUserWithANewIdentityProviderParameters' />
  </message>
  <message name='connectAnExistingUserWithANewIdentityProviderResponseMessage'>
    <part name='response' element='tns:connectAnExistingUserWithANewIdentityProviderResponse' />
  </message>
  <message name='createACustomEventRequestMessage' />
  <message name='createACustomEventResponseMessage'>
    <part name='response' element='tns:createACustomEventResponse' />
  </message>
  <message name='createAUserWithOnlyAnEmailRequestMessage'>
    <part name='parameters' element='tns:createAUserWithOnlyAnEmailParameters' />
  </message>
  <message name='createAUserWithOnlyAnEmailResponseMessage'>
    <part name='response' element='tns:createAUserWithOnlyAnEmailResponse' />
  </message>
  <message name='findAUserRequestMessage'>
    <part name='parameters' element='tns:findAUserParameters' />
  </message>
  <message name='findAUserResponseMessage'>
    <part name='response' element='tns:findAUserResponse' />
  </message>
  <message name='getPasswordResetTokenRequestMessage' />
  <message name='getPasswordResetTokenResponseMessage'>
    <part name='response' element='tns:getPasswordResetTokenResponse' />
  </message>
  <message name='removeAnAttributeRequestMessage' />
  <message name='removeAnAttributeResponseMessage'>
    <part name='response' element='tns:removeAnAttributeResponse' />
  </message>
  <message name='resetPasswordsRequestMessage' />
  <message name='resetPasswordsResponseMessage'>
    <part name='response' element='tns:resetPasswordsResponse' />
  </message>
  <message name='setAnAttributeRequestMessage' />
  <message name='setAnAttributeResponseMessage'>
    <part name='response' element='tns:setAnAttributeResponse' />
  </message>
  <message name='taggingUsersRequestMessage' />
  <message name='taggingUsersResponseMessage'>
    <part name='response' element='tns:taggingUsersResponse' />
  </message>
  <message name='triggerAReferralRequestMessage' />
  <message name='triggerAReferralResponseMessage'>
    <part name='response' element='tns:triggerAReferralResponse' />
  </message>
  <message name='untaggingUsersRequestMessage' />
  <message name='untaggingUsersResponseMessage'>
    <part name='response' element='tns:untaggingUsersResponse' />
  </message>
  <message name='userEventTimelineRequestMessage'>
    <part name='parameters' element='tns:userEventTimelineParameters' />
  </message>
  <message name='userEventTimelineResponseMessage'>
    <part name='response' element='tns:userEventTimelineResponse' />
  </message>
  <portType name='dailycredPortType'>
    <operation name='accountEventTimeline'>
      <documentation></documentation>
      <input message='tns:accountEventTimelineRequestMessage' name='accountEventTimelineInput' />
      <output message='tns:accountEventTimelineResponseMessage' name='accountEventTimelineOutput' />
    </operation>
    <operation name='changeAUserSEmailAddress'>
      <documentation></documentation>
      <input message='tns:changeAUserSEmailAddressRequestMessage' name='changeAUserSEmailAddressInput' />
      <output message='tns:changeAUserSEmailAddressResponseMessage' name='changeAUserSEmailAddressOutput' />
    </operation>
    <operation name='changePassword'>
      <documentation></documentation>
      <input message='tns:changePasswordRequestMessage' name='changePasswordInput' />
      <output message='tns:changePasswordResponseMessage' name='changePasswordOutput' />
    </operation>
    <operation name='connectAnExistingUserWithANewIdentityProvider'>
      <documentation></documentation>
      <input message='tns:connectAnExistingUserWithANewIdentityProviderRequestMessage' name='connectAnExistingUserWithANewIdentityProviderInput' />
      <output message='tns:connectAnExistingUserWithANewIdentityProviderResponseMessage' name='connectAnExistingUserWithANewIdentityProviderOutput' />
    </operation>
    <operation name='createACustomEvent'>
      <documentation></documentation>
      <input message='tns:createACustomEventRequestMessage' name='createACustomEventInput' />
      <output message='tns:createACustomEventResponseMessage' name='createACustomEventOutput' />
    </operation>
    <operation name='createAUserWithOnlyAnEmail'>
      <documentation></documentation>
      <input message='tns:createAUserWithOnlyAnEmailRequestMessage' name='createAUserWithOnlyAnEmailInput' />
      <output message='tns:createAUserWithOnlyAnEmailResponseMessage' name='createAUserWithOnlyAnEmailOutput' />
    </operation>
    <operation name='findAUser'>
      <documentation></documentation>
      <input message='tns:findAUserRequestMessage' name='findAUserInput' />
      <output message='tns:findAUserResponseMessage' name='findAUserOutput' />
    </operation>
    <operation name='getPasswordResetToken'>
      <documentation></documentation>
      <input message='tns:getPasswordResetTokenRequestMessage' name='getPasswordResetTokenInput' />
      <output message='tns:getPasswordResetTokenResponseMessage' name='getPasswordResetTokenOutput' />
    </operation>
    <operation name='removeAnAttribute'>
      <documentation></documentation>
      <input message='tns:removeAnAttributeRequestMessage' name='removeAnAttributeInput' />
      <output message='tns:removeAnAttributeResponseMessage' name='removeAnAttributeOutput' />
    </operation>
    <operation name='resetPasswords'>
      <documentation></documentation>
      <input message='tns:resetPasswordsRequestMessage' name='resetPasswordsInput' />
      <output message='tns:resetPasswordsResponseMessage' name='resetPasswordsOutput' />
    </operation>
    <operation name='setAnAttribute'>
      <documentation></documentation>
      <input message='tns:setAnAttributeRequestMessage' name='setAnAttributeInput' />
      <output message='tns:setAnAttributeResponseMessage' name='setAnAttributeOutput' />
    </operation>
    <operation name='taggingUsers'>
      <documentation></documentation>
      <input message='tns:taggingUsersRequestMessage' name='taggingUsersInput' />
      <output message='tns:taggingUsersResponseMessage' name='taggingUsersOutput' />
    </operation>
    <operation name='triggerAReferral'>
      <documentation></documentation>
      <input message='tns:triggerAReferralRequestMessage' name='triggerAReferralInput' />
      <output message='tns:triggerAReferralResponseMessage' name='triggerAReferralOutput' />
    </operation>
    <operation name='untaggingUsers'>
      <documentation></documentation>
      <input message='tns:untaggingUsersRequestMessage' name='untaggingUsersInput' />
      <output message='tns:untaggingUsersResponseMessage' name='untaggingUsersOutput' />
    </operation>
    <operation name='userEventTimeline'>
      <documentation></documentation>
      <input message='tns:userEventTimelineRequestMessage' name='userEventTimelineInput' />
      <output message='tns:userEventTimelineResponseMessage' name='userEventTimelineOutput' />
    </operation>
  </portType>
  <binding name='dailycredBinding' type='tns:dailycredPortType'>
    <operation name='accountEventTimeline'>
      <soap12:operation soapAction='http://accountEventTimeline' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='changeAUserSEmailAddress'>
      <soap12:operation soapAction='http://changeAUserSEmailAddress' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='changePassword'>
      <soap12:operation soapAction='http://changePassword' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='connectAnExistingUserWithANewIdentityProvider'>
      <soap12:operation soapAction='http://connectAnExistingUserWithANewIdentityProvider' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createACustomEvent'>
      <soap12:operation soapAction='http://createACustomEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createAUserWithOnlyAnEmail'>
      <soap12:operation soapAction='http://createAUserWithOnlyAnEmail' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='findAUser'>
      <soap12:operation soapAction='http://findAUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getPasswordResetToken'>
      <soap12:operation soapAction='http://getPasswordResetToken' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removeAnAttribute'>
      <soap12:operation soapAction='http://removeAnAttribute' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='resetPasswords'>
      <soap12:operation soapAction='http://resetPasswords' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAnAttribute'>
      <soap12:operation soapAction='http://setAnAttribute' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='taggingUsers'>
      <soap12:operation soapAction='http://taggingUsers' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='triggerAReferral'>
      <soap12:operation soapAction='http://triggerAReferral' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='untaggingUsers'>
      <soap12:operation soapAction='http://untaggingUsers' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userEventTimeline'>
      <soap12:operation soapAction='http://userEventTimeline' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='dailycred'>
    <documentation>identity made simple everything you need to manage users for your website or app DailyCred wraps all of your OAuth providers into a single OAuth call You can also use DailyCred to authenticate email and password users as well as Twitter and LinkedIn users using OAuth DailyCred aggregates all of your user data and combines it with page view information in a single place View the demo of the DailyCred dashboard here https www dailycred com demo</documentation>
    <port name='dailycredPort' binding='tns:dailycredBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://dailycred' />
    </port>
  </service>
</definitions>