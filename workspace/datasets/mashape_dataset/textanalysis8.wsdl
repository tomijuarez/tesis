<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/textanalysis/' name='textanalysis' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/textanalysis/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/textanalysis/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/textanalysis/'>
      <xsd:element name='chineseWordSegmenterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='langidLanguageDetectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='confidence' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='language' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='mbspChunkResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='mbspParseResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='mbspPosTaggingResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='mbspWordLemmatizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='mbspWordTokenizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkLancasterStemmerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkPorterStemmerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkPosTaggingResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkSentenceSegmentationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='sentences' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkSnowballStemmerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkWordTokenizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkWordnetLemmatizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nltkWordnetWordLemmatizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternIndefiniteArticleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternModalityResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternParseResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternPosTaggingResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternSentenceSegmentationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='sentences' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternSentimentAnalysisResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='Subjectivity' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='Polarity' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternWordComparativeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternWordPluralizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternWordSingularizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternWordSuperlativeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='patternWordTokenizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobNounPhraseExtractionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='noun_phrases' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobParseResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobPosTaggingResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobSentenceSegmentationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='sentences' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobSentimentAnalysisResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='Subjectivity' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='Polarity' type='xsd:decimal' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobSpellingCorrectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobWordPluralizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobWordSingularizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textblobWordTokenizeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='chineseWordSegmenterRequestMessage' />
  <message name='chineseWordSegmenterResponseMessage'>
    <part name='response' element='tns:chineseWordSegmenterResponse' />
  </message>
  <message name='langidLanguageDetectionRequestMessage' />
  <message name='langidLanguageDetectionResponseMessage'>
    <part name='response' element='tns:langidLanguageDetectionResponse' />
  </message>
  <message name='mbspChunkRequestMessage' />
  <message name='mbspChunkResponseMessage'>
    <part name='response' element='tns:mbspChunkResponse' />
  </message>
  <message name='mbspParseRequestMessage' />
  <message name='mbspParseResponseMessage'>
    <part name='response' element='tns:mbspParseResponse' />
  </message>
  <message name='mbspPosTaggingRequestMessage' />
  <message name='mbspPosTaggingResponseMessage'>
    <part name='response' element='tns:mbspPosTaggingResponse' />
  </message>
  <message name='mbspWordLemmatizeRequestMessage' />
  <message name='mbspWordLemmatizeResponseMessage'>
    <part name='response' element='tns:mbspWordLemmatizeResponse' />
  </message>
  <message name='mbspWordTokenizeRequestMessage' />
  <message name='mbspWordTokenizeResponseMessage'>
    <part name='response' element='tns:mbspWordTokenizeResponse' />
  </message>
  <message name='nltkLancasterStemmerRequestMessage' />
  <message name='nltkLancasterStemmerResponseMessage'>
    <part name='response' element='tns:nltkLancasterStemmerResponse' />
  </message>
  <message name='nltkPorterStemmerRequestMessage' />
  <message name='nltkPorterStemmerResponseMessage'>
    <part name='response' element='tns:nltkPorterStemmerResponse' />
  </message>
  <message name='nltkPosTaggingRequestMessage' />
  <message name='nltkPosTaggingResponseMessage'>
    <part name='response' element='tns:nltkPosTaggingResponse' />
  </message>
  <message name='nltkSentenceSegmentationRequestMessage' />
  <message name='nltkSentenceSegmentationResponseMessage'>
    <part name='response' element='tns:nltkSentenceSegmentationResponse' />
  </message>
  <message name='nltkSnowballStemmerRequestMessage' />
  <message name='nltkSnowballStemmerResponseMessage'>
    <part name='response' element='tns:nltkSnowballStemmerResponse' />
  </message>
  <message name='nltkWordTokenizeRequestMessage' />
  <message name='nltkWordTokenizeResponseMessage'>
    <part name='response' element='tns:nltkWordTokenizeResponse' />
  </message>
  <message name='nltkWordnetLemmatizerRequestMessage' />
  <message name='nltkWordnetLemmatizerResponseMessage'>
    <part name='response' element='tns:nltkWordnetLemmatizerResponse' />
  </message>
  <message name='nltkWordnetWordLemmatizerRequestMessage' />
  <message name='nltkWordnetWordLemmatizerResponseMessage'>
    <part name='response' element='tns:nltkWordnetWordLemmatizerResponse' />
  </message>
  <message name='patternIndefiniteArticleRequestMessage' />
  <message name='patternIndefiniteArticleResponseMessage'>
    <part name='response' element='tns:patternIndefiniteArticleResponse' />
  </message>
  <message name='patternModalityRequestMessage' />
  <message name='patternModalityResponseMessage'>
    <part name='response' element='tns:patternModalityResponse' />
  </message>
  <message name='patternParseRequestMessage' />
  <message name='patternParseResponseMessage'>
    <part name='response' element='tns:patternParseResponse' />
  </message>
  <message name='patternPosTaggingRequestMessage' />
  <message name='patternPosTaggingResponseMessage'>
    <part name='response' element='tns:patternPosTaggingResponse' />
  </message>
  <message name='patternSentenceSegmentationRequestMessage' />
  <message name='patternSentenceSegmentationResponseMessage'>
    <part name='response' element='tns:patternSentenceSegmentationResponse' />
  </message>
  <message name='patternSentimentAnalysisRequestMessage' />
  <message name='patternSentimentAnalysisResponseMessage'>
    <part name='response' element='tns:patternSentimentAnalysisResponse' />
  </message>
  <message name='patternWordComparativeRequestMessage' />
  <message name='patternWordComparativeResponseMessage'>
    <part name='response' element='tns:patternWordComparativeResponse' />
  </message>
  <message name='patternWordPluralizeRequestMessage' />
  <message name='patternWordPluralizeResponseMessage'>
    <part name='response' element='tns:patternWordPluralizeResponse' />
  </message>
  <message name='patternWordSingularizeRequestMessage' />
  <message name='patternWordSingularizeResponseMessage'>
    <part name='response' element='tns:patternWordSingularizeResponse' />
  </message>
  <message name='patternWordSuperlativeRequestMessage' />
  <message name='patternWordSuperlativeResponseMessage'>
    <part name='response' element='tns:patternWordSuperlativeResponse' />
  </message>
  <message name='patternWordTokenizeRequestMessage' />
  <message name='patternWordTokenizeResponseMessage'>
    <part name='response' element='tns:patternWordTokenizeResponse' />
  </message>
  <message name='textblobNounPhraseExtractionRequestMessage' />
  <message name='textblobNounPhraseExtractionResponseMessage'>
    <part name='response' element='tns:textblobNounPhraseExtractionResponse' />
  </message>
  <message name='textblobParseRequestMessage' />
  <message name='textblobParseResponseMessage'>
    <part name='response' element='tns:textblobParseResponse' />
  </message>
  <message name='textblobPosTaggingRequestMessage' />
  <message name='textblobPosTaggingResponseMessage'>
    <part name='response' element='tns:textblobPosTaggingResponse' />
  </message>
  <message name='textblobSentenceSegmentationRequestMessage' />
  <message name='textblobSentenceSegmentationResponseMessage'>
    <part name='response' element='tns:textblobSentenceSegmentationResponse' />
  </message>
  <message name='textblobSentimentAnalysisRequestMessage' />
  <message name='textblobSentimentAnalysisResponseMessage'>
    <part name='response' element='tns:textblobSentimentAnalysisResponse' />
  </message>
  <message name='textblobSpellingCorrectionRequestMessage' />
  <message name='textblobSpellingCorrectionResponseMessage'>
    <part name='response' element='tns:textblobSpellingCorrectionResponse' />
  </message>
  <message name='textblobWordPluralizeRequestMessage' />
  <message name='textblobWordPluralizeResponseMessage'>
    <part name='response' element='tns:textblobWordPluralizeResponse' />
  </message>
  <message name='textblobWordSingularizeRequestMessage' />
  <message name='textblobWordSingularizeResponseMessage'>
    <part name='response' element='tns:textblobWordSingularizeResponse' />
  </message>
  <message name='textblobWordTokenizeRequestMessage' />
  <message name='textblobWordTokenizeResponseMessage'>
    <part name='response' element='tns:textblobWordTokenizeResponse' />
  </message>
  <portType name='textanalysisPortType'>
    <operation name='chineseWordSegmenter'>
      <documentation>chinese word segmenter</documentation>
      <input message='tns:chineseWordSegmenterRequestMessage' name='chineseWordSegmenterInput' />
      <output message='tns:chineseWordSegmenterResponseMessage' name='chineseWordSegmenterOutput' />
    </operation>
    <operation name='langidLanguageDetection'>
      <documentation>support about languages ISO codes demo http textanalysisonline com langid language detection</documentation>
      <input message='tns:langidLanguageDetectionRequestMessage' name='langidLanguageDetectionInput' />
      <output message='tns:langidLanguageDetectionResponseMessage' name='langidLanguageDetectionOutput' />
    </operation>
    <operation name='mbspChunk'>
      <documentation>chunk by MBSP</documentation>
      <input message='tns:mbspChunkRequestMessage' name='mbspChunkInput' />
      <output message='tns:mbspChunkResponseMessage' name='mbspChunkOutput' />
    </operation>
    <operation name='mbspParse'>
      <documentation>parse by MBSP</documentation>
      <input message='tns:mbspParseRequestMessage' name='mbspParseInput' />
      <output message='tns:mbspParseResponseMessage' name='mbspParseOutput' />
    </operation>
    <operation name='mbspPosTagging'>
      <documentation>pOS Tagging by MBSP</documentation>
      <input message='tns:mbspPosTaggingRequestMessage' name='mbspPosTaggingInput' />
      <output message='tns:mbspPosTaggingResponseMessage' name='mbspPosTaggingOutput' />
    </operation>
    <operation name='mbspWordLemmatize'>
      <documentation>word Lemmatize by MBSP</documentation>
      <input message='tns:mbspWordLemmatizeRequestMessage' name='mbspWordLemmatizeInput' />
      <output message='tns:mbspWordLemmatizeResponseMessage' name='mbspWordLemmatizeOutput' />
    </operation>
    <operation name='mbspWordTokenize'>
      <documentation>word Tokenize by MBSP</documentation>
      <input message='tns:mbspWordTokenizeRequestMessage' name='mbspWordTokenizeInput' />
      <output message='tns:mbspWordTokenizeResponseMessage' name='mbspWordTokenizeOutput' />
    </operation>
    <operation name='nltkLancasterStemmer'>
      <documentation>lancaster Stemmer by NLTK</documentation>
      <input message='tns:nltkLancasterStemmerRequestMessage' name='nltkLancasterStemmerInput' />
      <output message='tns:nltkLancasterStemmerResponseMessage' name='nltkLancasterStemmerOutput' />
    </operation>
    <operation name='nltkPorterStemmer'>
      <documentation>porter Stemmer by NLTK</documentation>
      <input message='tns:nltkPorterStemmerRequestMessage' name='nltkPorterStemmerInput' />
      <output message='tns:nltkPorterStemmerResponseMessage' name='nltkPorterStemmerOutput' />
    </operation>
    <operation name='nltkPosTagging'>
      <documentation>pos Tagging by NLTK</documentation>
      <input message='tns:nltkPosTaggingRequestMessage' name='nltkPosTaggingInput' />
      <output message='tns:nltkPosTaggingResponseMessage' name='nltkPosTaggingOutput' />
    </operation>
    <operation name='nltkSentenceSegmentation'>
      <documentation>sentence Segmentation or Sentence Boundary Detection by NLTK</documentation>
      <input message='tns:nltkSentenceSegmentationRequestMessage' name='nltkSentenceSegmentationInput' />
      <output message='tns:nltkSentenceSegmentationResponseMessage' name='nltkSentenceSegmentationOutput' />
    </operation>
    <operation name='nltkSnowballStemmer'>
      <documentation>snowball Stemmer by NLTK</documentation>
      <input message='tns:nltkSnowballStemmerRequestMessage' name='nltkSnowballStemmerInput' />
      <output message='tns:nltkSnowballStemmerResponseMessage' name='nltkSnowballStemmerOutput' />
    </operation>
    <operation name='nltkWordTokenize'>
      <documentation>word Tokenize by NLTK</documentation>
      <input message='tns:nltkWordTokenizeRequestMessage' name='nltkWordTokenizeInput' />
      <output message='tns:nltkWordTokenizeResponseMessage' name='nltkWordTokenizeOutput' />
    </operation>
    <operation name='nltkWordnetLemmatizer'>
      <documentation>wordnet Lemmatizer by NLTK</documentation>
      <input message='tns:nltkWordnetLemmatizerRequestMessage' name='nltkWordnetLemmatizerInput' />
      <output message='tns:nltkWordnetLemmatizerResponseMessage' name='nltkWordnetLemmatizerOutput' />
    </operation>
    <operation name='nltkWordnetWordLemmatizer'>
      <documentation>nLTK wordnet word lemmatizer only for english word with pos tag</documentation>
      <input message='tns:nltkWordnetWordLemmatizerRequestMessage' name='nltkWordnetWordLemmatizerInput' />
      <output message='tns:nltkWordnetWordLemmatizerResponseMessage' name='nltkWordnetWordLemmatizerOutput' />
    </operation>
    <operation name='patternIndefiniteArticle'>
      <documentation>indefinite Article by Pattern</documentation>
      <input message='tns:patternIndefiniteArticleRequestMessage' name='patternIndefiniteArticleInput' />
      <output message='tns:patternIndefiniteArticleResponseMessage' name='patternIndefiniteArticleOutput' />
    </operation>
    <operation name='patternModality'>
      <documentation>modality by Pattern</documentation>
      <input message='tns:patternModalityRequestMessage' name='patternModalityInput' />
      <output message='tns:patternModalityResponseMessage' name='patternModalityOutput' />
    </operation>
    <operation name='patternParse'>
      <documentation>parse by Pattern</documentation>
      <input message='tns:patternParseRequestMessage' name='patternParseInput' />
      <output message='tns:patternParseResponseMessage' name='patternParseOutput' />
    </operation>
    <operation name='patternPosTagging'>
      <documentation>pos Tagging by Pattern</documentation>
      <input message='tns:patternPosTaggingRequestMessage' name='patternPosTaggingInput' />
      <output message='tns:patternPosTaggingResponseMessage' name='patternPosTaggingOutput' />
    </operation>
    <operation name='patternSentenceSegmentation'>
      <documentation>sentence Segmentation by Pattern</documentation>
      <input message='tns:patternSentenceSegmentationRequestMessage' name='patternSentenceSegmentationInput' />
      <output message='tns:patternSentenceSegmentationResponseMessage' name='patternSentenceSegmentationOutput' />
    </operation>
    <operation name='patternSentimentAnalysis'>
      <documentation>sentiment Analysis by Pattern</documentation>
      <input message='tns:patternSentimentAnalysisRequestMessage' name='patternSentimentAnalysisInput' />
      <output message='tns:patternSentimentAnalysisResponseMessage' name='patternSentimentAnalysisOutput' />
    </operation>
    <operation name='patternWordComparative'>
      <documentation>word Comparative by Pattern</documentation>
      <input message='tns:patternWordComparativeRequestMessage' name='patternWordComparativeInput' />
      <output message='tns:patternWordComparativeResponseMessage' name='patternWordComparativeOutput' />
    </operation>
    <operation name='patternWordPluralize'>
      <documentation>word Pluralize by Pattern</documentation>
      <input message='tns:patternWordPluralizeRequestMessage' name='patternWordPluralizeInput' />
      <output message='tns:patternWordPluralizeResponseMessage' name='patternWordPluralizeOutput' />
    </operation>
    <operation name='patternWordSingularize'>
      <documentation>word Singularize by Pattern</documentation>
      <input message='tns:patternWordSingularizeRequestMessage' name='patternWordSingularizeInput' />
      <output message='tns:patternWordSingularizeResponseMessage' name='patternWordSingularizeOutput' />
    </operation>
    <operation name='patternWordSuperlative'>
      <documentation>word Superlative</documentation>
      <input message='tns:patternWordSuperlativeRequestMessage' name='patternWordSuperlativeInput' />
      <output message='tns:patternWordSuperlativeResponseMessage' name='patternWordSuperlativeOutput' />
    </operation>
    <operation name='patternWordTokenize'>
      <documentation>word Tokenize by Pattern</documentation>
      <input message='tns:patternWordTokenizeRequestMessage' name='patternWordTokenizeInput' />
      <output message='tns:patternWordTokenizeResponseMessage' name='patternWordTokenizeOutput' />
    </operation>
    <operation name='textblobNounPhraseExtraction'>
      <documentation>noun Phrase Extraction by TextBlob</documentation>
      <input message='tns:textblobNounPhraseExtractionRequestMessage' name='textblobNounPhraseExtractionInput' />
      <output message='tns:textblobNounPhraseExtractionResponseMessage' name='textblobNounPhraseExtractionOutput' />
    </operation>
    <operation name='textblobParse'>
      <documentation>parse by TextBlob</documentation>
      <input message='tns:textblobParseRequestMessage' name='textblobParseInput' />
      <output message='tns:textblobParseResponseMessage' name='textblobParseOutput' />
    </operation>
    <operation name='textblobPosTagging'>
      <documentation>pos Tagging by TextBlob</documentation>
      <input message='tns:textblobPosTaggingRequestMessage' name='textblobPosTaggingInput' />
      <output message='tns:textblobPosTaggingResponseMessage' name='textblobPosTaggingOutput' />
    </operation>
    <operation name='textblobSentenceSegmentation'>
      <documentation>sentence Segmentation or Sentence Boundary Detection by TextBlob</documentation>
      <input message='tns:textblobSentenceSegmentationRequestMessage' name='textblobSentenceSegmentationInput' />
      <output message='tns:textblobSentenceSegmentationResponseMessage' name='textblobSentenceSegmentationOutput' />
    </operation>
    <operation name='textblobSentimentAnalysis'>
      <documentation>sentiment Analysis by TextBlob</documentation>
      <input message='tns:textblobSentimentAnalysisRequestMessage' name='textblobSentimentAnalysisInput' />
      <output message='tns:textblobSentimentAnalysisResponseMessage' name='textblobSentimentAnalysisOutput' />
    </operation>
    <operation name='textblobSpellingCorrection'>
      <documentation>spelling Correction by TextBlob</documentation>
      <input message='tns:textblobSpellingCorrectionRequestMessage' name='textblobSpellingCorrectionInput' />
      <output message='tns:textblobSpellingCorrectionResponseMessage' name='textblobSpellingCorrectionOutput' />
    </operation>
    <operation name='textblobWordPluralize'>
      <documentation>word Pluralize by TextBlob</documentation>
      <input message='tns:textblobWordPluralizeRequestMessage' name='textblobWordPluralizeInput' />
      <output message='tns:textblobWordPluralizeResponseMessage' name='textblobWordPluralizeOutput' />
    </operation>
    <operation name='textblobWordSingularize'>
      <documentation>word Singularize by TextBlob</documentation>
      <input message='tns:textblobWordSingularizeRequestMessage' name='textblobWordSingularizeInput' />
      <output message='tns:textblobWordSingularizeResponseMessage' name='textblobWordSingularizeOutput' />
    </operation>
    <operation name='textblobWordTokenize'>
      <documentation>word Tokenize by TextBlob</documentation>
      <input message='tns:textblobWordTokenizeRequestMessage' name='textblobWordTokenizeInput' />
      <output message='tns:textblobWordTokenizeResponseMessage' name='textblobWordTokenizeOutput' />
    </operation>
  </portType>
  <binding name='textanalysisBinding' type='tns:textanalysisPortType'>
    <operation name='chineseWordSegmenter'>
      <soap12:operation soapAction='http://chineseWordSegmenter' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='langidLanguageDetection'>
      <soap12:operation soapAction='http://langidLanguageDetection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='mbspChunk'>
      <soap12:operation soapAction='http://mbspChunk' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='mbspParse'>
      <soap12:operation soapAction='http://mbspParse' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='mbspPosTagging'>
      <soap12:operation soapAction='http://mbspPosTagging' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='mbspWordLemmatize'>
      <soap12:operation soapAction='http://mbspWordLemmatize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='mbspWordTokenize'>
      <soap12:operation soapAction='http://mbspWordTokenize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkLancasterStemmer'>
      <soap12:operation soapAction='http://nltkLancasterStemmer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkPorterStemmer'>
      <soap12:operation soapAction='http://nltkPorterStemmer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkPosTagging'>
      <soap12:operation soapAction='http://nltkPosTagging' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkSentenceSegmentation'>
      <soap12:operation soapAction='http://nltkSentenceSegmentation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkSnowballStemmer'>
      <soap12:operation soapAction='http://nltkSnowballStemmer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkWordTokenize'>
      <soap12:operation soapAction='http://nltkWordTokenize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkWordnetLemmatizer'>
      <soap12:operation soapAction='http://nltkWordnetLemmatizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nltkWordnetWordLemmatizer'>
      <soap12:operation soapAction='http://nltkWordnetWordLemmatizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternIndefiniteArticle'>
      <soap12:operation soapAction='http://patternIndefiniteArticle' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternModality'>
      <soap12:operation soapAction='http://patternModality' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternParse'>
      <soap12:operation soapAction='http://patternParse' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternPosTagging'>
      <soap12:operation soapAction='http://patternPosTagging' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternSentenceSegmentation'>
      <soap12:operation soapAction='http://patternSentenceSegmentation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternSentimentAnalysis'>
      <soap12:operation soapAction='http://patternSentimentAnalysis' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternWordComparative'>
      <soap12:operation soapAction='http://patternWordComparative' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternWordPluralize'>
      <soap12:operation soapAction='http://patternWordPluralize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternWordSingularize'>
      <soap12:operation soapAction='http://patternWordSingularize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternWordSuperlative'>
      <soap12:operation soapAction='http://patternWordSuperlative' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='patternWordTokenize'>
      <soap12:operation soapAction='http://patternWordTokenize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobNounPhraseExtraction'>
      <soap12:operation soapAction='http://textblobNounPhraseExtraction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobParse'>
      <soap12:operation soapAction='http://textblobParse' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobPosTagging'>
      <soap12:operation soapAction='http://textblobPosTagging' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobSentenceSegmentation'>
      <soap12:operation soapAction='http://textblobSentenceSegmentation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobSentimentAnalysis'>
      <soap12:operation soapAction='http://textblobSentimentAnalysis' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobSpellingCorrection'>
      <soap12:operation soapAction='http://textblobSpellingCorrection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobWordPluralize'>
      <soap12:operation soapAction='http://textblobWordPluralize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobWordSingularize'>
      <soap12:operation soapAction='http://textblobWordSingularize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textblobWordTokenize'>
      <soap12:operation soapAction='http://textblobWordTokenize' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='textanalysis'>
    <documentation>textAnalysis API provides customized Text Analysis Text Mining and Text Processing Services like Text Summarization Language Detection Text Classification Sentiment Analysis Word Tokenize Part of Speech POS Tagging Named Entity Recognition NER Stemmer Lemmatizer Chunker Parser Key Phrase Extraction Noun Phrase Extraction Sentence Segmentation Sentence Boundary Detection Grammar Checker and other Text Analysis Tasks It stands on the giant shoulders of NLP Tools such as NLTK TextBlob Pattern MBSP and etc You can test the services on our demo website TextAnalysisOnline and use the TextAnalysis API on Mashape If you have any questions or want any customized text analysis services you can contact us by email textanalysisapi gmail com</documentation>
    <port name='textanalysisPort' binding='tns:textanalysisBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://textanalysis' />
    </port>
  </service>
</definitions>