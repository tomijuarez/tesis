<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/words/' name='words' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/words/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/words/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/words/'>
      <xsd:element name='getSynonymsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSynonymsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:normalizedString' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='stemAWordParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='stemAWordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='stem' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToPastParticipleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToPastParticipleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='pastParticiple' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToPluralParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToPluralResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='plural' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSimplePastParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSimplePastResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='simplePast' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSimplePresentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSimplePresentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='simplePresent' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSingularParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToSingularResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='singular' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToTheThirdPersonSingularParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='word' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transformToTheThirdPersonSingularResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='original' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='thirdPersonSingular' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='getSynonymsRequestMessage'>
    <part name='parameters' element='tns:getSynonymsParameters' />
  </message>
  <message name='getSynonymsResponseMessage'>
    <part name='response' element='tns:getSynonymsResponse' />
  </message>
  <message name='stemAWordRequestMessage'>
    <part name='parameters' element='tns:stemAWordParameters' />
  </message>
  <message name='stemAWordResponseMessage'>
    <part name='response' element='tns:stemAWordResponse' />
  </message>
  <message name='transformToPastParticipleRequestMessage'>
    <part name='parameters' element='tns:transformToPastParticipleParameters' />
  </message>
  <message name='transformToPastParticipleResponseMessage'>
    <part name='response' element='tns:transformToPastParticipleResponse' />
  </message>
  <message name='transformToPluralRequestMessage'>
    <part name='parameters' element='tns:transformToPluralParameters' />
  </message>
  <message name='transformToPluralResponseMessage'>
    <part name='response' element='tns:transformToPluralResponse' />
  </message>
  <message name='transformToSimplePastRequestMessage'>
    <part name='parameters' element='tns:transformToSimplePastParameters' />
  </message>
  <message name='transformToSimplePastResponseMessage'>
    <part name='response' element='tns:transformToSimplePastResponse' />
  </message>
  <message name='transformToSimplePresentRequestMessage'>
    <part name='parameters' element='tns:transformToSimplePresentParameters' />
  </message>
  <message name='transformToSimplePresentResponseMessage'>
    <part name='response' element='tns:transformToSimplePresentResponse' />
  </message>
  <message name='transformToSingularRequestMessage'>
    <part name='parameters' element='tns:transformToSingularParameters' />
  </message>
  <message name='transformToSingularResponseMessage'>
    <part name='response' element='tns:transformToSingularResponse' />
  </message>
  <message name='transformToTheThirdPersonSingularRequestMessage'>
    <part name='parameters' element='tns:transformToTheThirdPersonSingularParameters' />
  </message>
  <message name='transformToTheThirdPersonSingularResponseMessage'>
    <part name='response' element='tns:transformToTheThirdPersonSingularResponse' />
  </message>
  <portType name='wordsPortType'>
    <operation name='getSynonyms'>
      <documentation>get a list of synonyms for a word</documentation>
      <input message='tns:getSynonymsRequestMessage' name='getSynonymsInput' />
      <output message='tns:getSynonymsResponseMessage' name='getSynonymsOutput' />
    </operation>
    <operation name='stemAWord'>
      <documentation>retrieve the stem of an English word</documentation>
      <input message='tns:stemAWordRequestMessage' name='stemAWordInput' />
      <output message='tns:stemAWordResponseMessage' name='stemAWordOutput' />
    </operation>
    <operation name='transformToPastParticiple'>
      <documentation>transform a verb into the past participle tense</documentation>
      <input message='tns:transformToPastParticipleRequestMessage' name='transformToPastParticipleInput' />
      <output message='tns:transformToPastParticipleResponseMessage' name='transformToPastParticipleOutput' />
    </operation>
    <operation name='transformToPlural'>
      <documentation>transform a noun in its plural form</documentation>
      <input message='tns:transformToPluralRequestMessage' name='transformToPluralInput' />
      <output message='tns:transformToPluralResponseMessage' name='transformToPluralOutput' />
    </operation>
    <operation name='transformToSimplePast'>
      <documentation>transform a verb into the simple past tense</documentation>
      <input message='tns:transformToSimplePastRequestMessage' name='transformToSimplePastInput' />
      <output message='tns:transformToSimplePastResponseMessage' name='transformToSimplePastOutput' />
    </operation>
    <operation name='transformToSimplePresent'>
      <documentation>transform a verb into the simple present tense</documentation>
      <input message='tns:transformToSimplePresentRequestMessage' name='transformToSimplePresentInput' />
      <output message='tns:transformToSimplePresentResponseMessage' name='transformToSimplePresentOutput' />
    </operation>
    <operation name='transformToSingular'>
      <documentation>transform a noun in its singular form</documentation>
      <input message='tns:transformToSingularRequestMessage' name='transformToSingularInput' />
      <output message='tns:transformToSingularResponseMessage' name='transformToSingularOutput' />
    </operation>
    <operation name='transformToTheThirdPersonSingular'>
      <documentation>transform a verb to the third person singular</documentation>
      <input message='tns:transformToTheThirdPersonSingularRequestMessage' name='transformToTheThirdPersonSingularInput' />
      <output message='tns:transformToTheThirdPersonSingularResponseMessage' name='transformToTheThirdPersonSingularOutput' />
    </operation>
  </portType>
  <binding name='wordsBinding' type='tns:wordsPortType'>
    <operation name='getSynonyms'>
      <soap12:operation soapAction='http://getSynonyms' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='stemAWord'>
      <soap12:operation soapAction='http://stemAWord' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToPastParticiple'>
      <soap12:operation soapAction='http://transformToPastParticiple' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToPlural'>
      <soap12:operation soapAction='http://transformToPlural' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToSimplePast'>
      <soap12:operation soapAction='http://transformToSimplePast' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToSimplePresent'>
      <soap12:operation soapAction='http://transformToSimplePresent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToSingular'>
      <soap12:operation soapAction='http://transformToSingular' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transformToTheThirdPersonSingular'>
      <soap12:operation soapAction='http://transformToTheThirdPersonSingular' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='words'>
    <documentation>the WebKnox Words API lets you have your way with words Get the singular plural present past past participle or synonyms of a word</documentation>
    <port name='wordsPort' binding='tns:wordsBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://words' />
    </port>
  </service>
</definitions>