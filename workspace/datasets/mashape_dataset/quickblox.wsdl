<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/quickblox/' name='quickblox' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/quickblox/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/quickblox/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/quickblox/'>
      <xsd:element name='getBlobsJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlobsUidXmlParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlobsUidXmlResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getGeodataFindJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='items' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='geo_datum' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='user_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='created_at_timestamp' type='xsd:int' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='application_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='user' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='user' minOccurs='0'>
                                <xsd:complexType>
                                  <xsd:sequence minOccurs='1' maxOccurs='1'>
                                    <xsd:element name='website' type='xsd:anyURI' minOccurs='0' />
                                    <xsd:element name='last_request_at' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='blob_id' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='owner_id' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='login' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='external_user_id' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='facebook_id' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='user_tags' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='full_name' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='phone' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='id' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='twitter_id' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                                  </xsd:sequence>
                                </xsd:complexType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='current_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='total_entries' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPlacesJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='items' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='place' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='address' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='photo_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='description' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='geo_data_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='title' type='xsd:string' minOccurs='0' />
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='current_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='total_entries' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUsersJsonParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='filter' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='page' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='perpage' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUsersJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='items' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='user' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='website' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='last_request_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='blob_id' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='owner_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='login' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='external_user_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='facebook_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='user_tags' type='xsd:string' minOccurs='0' />
                        <xsd:element name='full_name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='phone' type='xsd:int' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='twitter_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='current_page' type='xsd:int' minOccurs='0' />
            <xsd:element name='total_entries' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postBlobsJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='blob' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='blob_object_access' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='expires' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='object_access_type' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='blob_id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='params' type='xsd:anyURI' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='lifetime' type='xsd:int' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='set_completed_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='ref_count' type='xsd:int' minOccurs='0' />
                  <xsd:element name='blob_status' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='uid' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='content_type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='public' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='size' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='last_read_access_ts' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postGeodataJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='geo_data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='user_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='created_at_timestamp' type='xsd:int' minOccurs='0' />
                  <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='application_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postPlacesJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='place' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='photo_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='geo_data_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postUsersJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='geo_data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='latitude' type='xsd:int' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='putBlobsIdCompleteJsonParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='putBlobsIdCompleteJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='getBlobsJsonRequestMessage' />
  <message name='getBlobsJsonResponseMessage'>
    <part name='response' element='tns:getBlobsJsonResponse' />
  </message>
  <message name='getBlobsUidXmlRequestMessage'>
    <part name='parameters' element='tns:getBlobsUidXmlParameters' />
  </message>
  <message name='getBlobsUidXmlResponseMessage'>
    <part name='response' element='tns:getBlobsUidXmlResponse' />
  </message>
  <message name='getGeodataFindJsonRequestMessage' />
  <message name='getGeodataFindJsonResponseMessage'>
    <part name='response' element='tns:getGeodataFindJsonResponse' />
  </message>
  <message name='getPlacesJsonRequestMessage' />
  <message name='getPlacesJsonResponseMessage'>
    <part name='response' element='tns:getPlacesJsonResponse' />
  </message>
  <message name='getUsersJsonRequestMessage'>
    <part name='parameters' element='tns:getUsersJsonParameters' />
  </message>
  <message name='getUsersJsonResponseMessage'>
    <part name='response' element='tns:getUsersJsonResponse' />
  </message>
  <message name='postBlobsJsonRequestMessage' />
  <message name='postBlobsJsonResponseMessage'>
    <part name='response' element='tns:postBlobsJsonResponse' />
  </message>
  <message name='postGeodataJsonRequestMessage' />
  <message name='postGeodataJsonResponseMessage'>
    <part name='response' element='tns:postGeodataJsonResponse' />
  </message>
  <message name='postPlacesJsonRequestMessage' />
  <message name='postPlacesJsonResponseMessage'>
    <part name='response' element='tns:postPlacesJsonResponse' />
  </message>
  <message name='postUsersJsonRequestMessage' />
  <message name='postUsersJsonResponseMessage'>
    <part name='response' element='tns:postUsersJsonResponse' />
  </message>
  <message name='putBlobsIdCompleteJsonRequestMessage'>
    <part name='parameters' element='tns:putBlobsIdCompleteJsonParameters' />
  </message>
  <message name='putBlobsIdCompleteJsonResponseMessage'>
    <part name='response' element='tns:putBlobsIdCompleteJsonResponse' />
  </message>
  <portType name='quickbloxPortType'>
    <operation name='getBlobsJson'>
      <documentation>get list of files for the current user The ID of the user is taken from the token specified in the request</documentation>
      <input message='tns:getBlobsJsonRequestMessage' name='getBlobsJsonInput' />
      <output message='tns:getBlobsJsonResponseMessage' name='getBlobsJsonOutput' />
    </operation>
    <operation name='getBlobsUidXml'>
      <documentation>download File Get File as a redirect to the S object by uid uid is a parameter which should be taken from the response of the request for the creating a file To have a possibility to download a file you should set a status complete to your file firstly</documentation>
      <input message='tns:getBlobsUidXmlRequestMessage' name='getBlobsUidXmlInput' />
      <output message='tns:getBlobsUidXmlResponseMessage' name='getBlobsUidXmlOutput' />
    </operation>
    <operation name='getGeodataFindJson'>
      <documentation>retrieve all by default geodata for current application The ID of the application is taken from the token which is specified in the request</documentation>
      <input message='tns:getGeodataFindJsonRequestMessage' name='getGeodataFindJsonInput' />
      <output message='tns:getGeodataFindJsonResponseMessage' name='getGeodataFindJsonOutput' />
    </operation>
    <operation name='getPlacesJson'>
      <documentation>retrieving a list of the created places by application</documentation>
      <input message='tns:getPlacesJsonRequestMessage' name='getPlacesJsonInput' />
      <output message='tns:getPlacesJsonResponseMessage' name='getPlacesJsonOutput' />
    </operation>
    <operation name='getUsersJson'>
      <documentation>call this API to get a list of current users of you app By default it returns upto users but you can change this by adding pagination parameters</documentation>
      <input message='tns:getUsersJsonRequestMessage' name='getUsersJsonInput' />
      <output message='tns:getUsersJsonResponseMessage' name='getUsersJsonOutput' />
    </operation>
    <operation name='postBlobsJson'>
      <documentation>create a file Create an entity which is a file in a system</documentation>
      <input message='tns:postBlobsJsonRequestMessage' name='postBlobsJsonInput' />
      <output message='tns:postBlobsJsonResponseMessage' name='postBlobsJsonOutput' />
    </operation>
    <operation name='postGeodataJson'>
      <documentation>create geodata which represent points on the earth</documentation>
      <input message='tns:postGeodataJsonRequestMessage' name='postGeodataJsonInput' />
      <output message='tns:postGeodataJsonResponseMessage' name='postGeodataJsonOutput' />
    </operation>
    <operation name='postPlacesJson'>
      <documentation>create place</documentation>
      <input message='tns:postPlacesJsonRequestMessage' name='postPlacesJsonInput' />
      <output message='tns:postPlacesJsonResponseMessage' name='postPlacesJsonOutput' />
    </operation>
    <operation name='postUsersJson'>
      <documentation>call this API to register a user for the app You must provide either a user login or email address along with their password passing both email address and login is permitted but not required</documentation>
      <input message='tns:postUsersJsonRequestMessage' name='postUsersJsonInput' />
      <output message='tns:postUsersJsonResponseMessage' name='postUsersJsonOutput' />
    </operation>
    <operation name='putBlobsIdCompleteJson'>
      <documentation></documentation>
      <input message='tns:putBlobsIdCompleteJsonRequestMessage' name='putBlobsIdCompleteJsonInput' />
      <output message='tns:putBlobsIdCompleteJsonResponseMessage' name='putBlobsIdCompleteJsonOutput' />
    </operation>
  </portType>
  <binding name='quickbloxBinding' type='tns:quickbloxPortType'>
    <operation name='getBlobsJson'>
      <soap12:operation soapAction='http://getBlobsJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getBlobsUidXml'>
      <soap12:operation soapAction='http://getBlobsUidXml' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getGeodataFindJson'>
      <soap12:operation soapAction='http://getGeodataFindJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getPlacesJson'>
      <soap12:operation soapAction='http://getPlacesJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUsersJson'>
      <soap12:operation soapAction='http://getUsersJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postBlobsJson'>
      <soap12:operation soapAction='http://postBlobsJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postGeodataJson'>
      <soap12:operation soapAction='http://postGeodataJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postPlacesJson'>
      <soap12:operation soapAction='http://postPlacesJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postUsersJson'>
      <soap12:operation soapAction='http://postUsersJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='putBlobsIdCompleteJson'>
      <soap12:operation soapAction='http://putBlobsIdCompleteJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='quickblox'>
    <documentation>quickBlox is a cloud hosted Communications backend service We help developers and publishers add advanced communication features to their apps while reducing development time cost All our modules are available through SDKs for all major platforms Android iOS WP Blackberry and Web Communication Video Calling Voice Chat Instant Messaging Push Notifications Presence Data Location Users Content Custom Objects Ratings</documentation>
    <port name='quickbloxPort' binding='tns:quickbloxBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://quickblox' />
    </port>
  </service>
</definitions>