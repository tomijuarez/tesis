<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/lob/' name='lob' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/lob/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/lob/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/lob/'>
      <xsd:element name='addressParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='addressid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addressResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_country' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_state' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_line_2' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
            <xsd:element name='object' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addressDeleteParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='addressid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addressDeleteResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:boolean' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addressesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_country' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_state' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_line_2' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
            <xsd:element name='object' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAddressesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAddressesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_country' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_state' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_line_2' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
            <xsd:element name='id' type='xsd:string' minOccurs='0' />
            <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
            <xsd:element name='object' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getJobParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='jobid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getJobResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='quantity' type='xsd:int' minOccurs='0' />
            <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
            <xsd:element name='objects' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='from' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='packaging' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='to' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getJobsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getJobsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='quantity' type='xsd:int' minOccurs='0' />
            <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
            <xsd:element name='objects' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='from' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='packaging' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='to' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getObjectParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='objectid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getObjectResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
            <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getObjectsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getObjectsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='id' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='total_count' type='xsd:int' minOccurs='0' />
            <xsd:element name='count' type='xsd:int' minOccurs='0' />
            <xsd:element name='object' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='jobsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='quantity' type='xsd:int' minOccurs='0' />
            <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
            <xsd:element name='objects' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='from' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='packaging' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='to' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address_line2' type='xsd:string' minOccurs='0' />
                  <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_line1' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_country' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address_state' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='address_zip' type='xsd:int' minOccurs='0' />
                  <xsd:element name='address_city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='objectDeleteParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='objectid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='objectDeleteResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='error' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:boolean' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='objectsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='paper_size_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_modified' type='xsd:string' minOccurs='0' />
            <xsd:element name='paper_type_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='date_created' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='paper_color_name' type='xsd:string' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='packagingsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='price' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='packaging_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='packaging_name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='settingsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='quantity' type='xsd:int' minOccurs='0' />
            <xsd:element name='paper' type='xsd:string' minOccurs='0' />
            <xsd:element name='size' type='xsd:string' minOccurs='0' />
            <xsd:element name='color' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='price' type='xsd:int' minOccurs='0' />
            <xsd:element name='description' type='xsd:string' minOccurs='0' />
            <xsd:element name='type' type='xsd:string' minOccurs='0' />
            <xsd:element name='setting_id' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='addressRequestMessage'>
    <part name='parameters' element='tns:addressParameters' />
  </message>
  <message name='addressResponseMessage'>
    <part name='response' element='tns:addressResponse' />
  </message>
  <message name='addressDeleteRequestMessage'>
    <part name='parameters' element='tns:addressDeleteParameters' />
  </message>
  <message name='addressDeleteResponseMessage'>
    <part name='response' element='tns:addressDeleteResponse' />
  </message>
  <message name='addressesRequestMessage' />
  <message name='addressesResponseMessage'>
    <part name='response' element='tns:addressesResponse' />
  </message>
  <message name='getAddressesRequestMessage'>
    <part name='parameters' element='tns:getAddressesParameters' />
  </message>
  <message name='getAddressesResponseMessage'>
    <part name='response' element='tns:getAddressesResponse' />
  </message>
  <message name='getJobRequestMessage'>
    <part name='parameters' element='tns:getJobParameters' />
  </message>
  <message name='getJobResponseMessage'>
    <part name='response' element='tns:getJobResponse' />
  </message>
  <message name='getJobsRequestMessage'>
    <part name='parameters' element='tns:getJobsParameters' />
  </message>
  <message name='getJobsResponseMessage'>
    <part name='response' element='tns:getJobsResponse' />
  </message>
  <message name='getObjectRequestMessage'>
    <part name='parameters' element='tns:getObjectParameters' />
  </message>
  <message name='getObjectResponseMessage'>
    <part name='response' element='tns:getObjectResponse' />
  </message>
  <message name='getObjectsRequestMessage'>
    <part name='parameters' element='tns:getObjectsParameters' />
  </message>
  <message name='getObjectsResponseMessage'>
    <part name='response' element='tns:getObjectsResponse' />
  </message>
  <message name='jobsRequestMessage' />
  <message name='jobsResponseMessage'>
    <part name='response' element='tns:jobsResponse' />
  </message>
  <message name='objectDeleteRequestMessage'>
    <part name='parameters' element='tns:objectDeleteParameters' />
  </message>
  <message name='objectDeleteResponseMessage'>
    <part name='response' element='tns:objectDeleteResponse' />
  </message>
  <message name='objectsRequestMessage' />
  <message name='objectsResponseMessage'>
    <part name='response' element='tns:objectsResponse' />
  </message>
  <message name='packagingsRequestMessage' />
  <message name='packagingsResponseMessage'>
    <part name='response' element='tns:packagingsResponse' />
  </message>
  <message name='settingsRequestMessage' />
  <message name='settingsResponseMessage'>
    <part name='response' element='tns:settingsResponse' />
  </message>
  <portType name='lobPortType'>
    <operation name='address'>
      <documentation>retrieves the details of an existing address You need only supply the unique address identifier that was returned upon address creation</documentation>
      <input message='tns:addressRequestMessage' name='addressInput' />
      <output message='tns:addressResponseMessage' name='addressOutput' />
    </operation>
    <operation name='addressDelete'>
      <documentation>permanently deletes an address based on the address ID in the url It cannot be undone</documentation>
      <input message='tns:addressDeleteRequestMessage' name='addressDeleteInput' />
      <output message='tns:addressDeleteResponseMessage' name='addressDeleteOutput' />
    </operation>
    <operation name='addresses'>
      <documentation>to create a new address you create a new address object All of the fields except for address line are required parameters</documentation>
      <input message='tns:addressesRequestMessage' name='addressesInput' />
      <output message='tns:addressesResponseMessage' name='addressesOutput' />
    </operation>
    <operation name='getAddresses'>
      <documentation>returns a list of addresses The objects are returned sorted by creation date with the most recently created addresses appearing first</documentation>
      <input message='tns:getAddressesRequestMessage' name='getAddressesInput' />
      <output message='tns:getAddressesResponseMessage' name='getAddressesOutput' />
    </operation>
    <operation name='getJob'>
      <documentation>retrieves the details of an existing job You need only supply the unique job identifier that was returned upon job creation</documentation>
      <input message='tns:getJobRequestMessage' name='getJobInput' />
      <output message='tns:getJobResponseMessage' name='getJobOutput' />
    </operation>
    <operation name='getJobs'>
      <documentation>returns a list of jobs The jobs are returned sorted by creation date with the most recently created jobs appearing first</documentation>
      <input message='tns:getJobsRequestMessage' name='getJobsInput' />
      <output message='tns:getJobsResponseMessage' name='getJobsOutput' />
    </operation>
    <operation name='getObject'>
      <documentation>retrieves the details of an existing object You need only supply the unique object identifier that was returned upon object creation</documentation>
      <input message='tns:getObjectRequestMessage' name='getObjectInput' />
      <output message='tns:getObjectResponseMessage' name='getObjectOutput' />
    </operation>
    <operation name='getObjects'>
      <documentation>returns a list of objects The objects are returned sorted by creation date with the most recently created objects appearing first</documentation>
      <input message='tns:getObjectsRequestMessage' name='getObjectsInput' />
      <output message='tns:getObjectsResponseMessage' name='getObjectsOutput' />
    </operation>
    <operation name='jobs'>
      <documentation>to submit a print job to Infraprint you create a new job object</documentation>
      <input message='tns:jobsRequestMessage' name='jobsInput' />
      <output message='tns:jobsResponseMessage' name='jobsOutput' />
    </operation>
    <operation name='objectDelete'>
      <documentation>permanently deletes an object It cannot be undone</documentation>
      <input message='tns:objectDeleteRequestMessage' name='objectDeleteInput' />
      <output message='tns:objectDeleteResponseMessage' name='objectDeleteOutput' />
    </operation>
    <operation name='objects'>
      <documentation>objects allow you to store documents and print settings associated with the document The API allows you to create and delete your objects You can retrieve individual objects as well as a list of all your objects</documentation>
      <input message='tns:objectsRequestMessage' name='objectsInput' />
      <output message='tns:objectsResponseMessage' name='objectsOutput' />
    </operation>
    <operation name='packagings'>
      <documentation>returns a list of all currently supported packagings You can use the IDs for jobs to specify the packaging of which your print job will be put into</documentation>
      <input message='tns:packagingsRequestMessage' name='packagingsInput' />
      <output message='tns:packagingsResponseMessage' name='packagingsOutput' />
    </operation>
    <operation name='settings'>
      <documentation>returns a list of all currently supported settings</documentation>
      <input message='tns:settingsRequestMessage' name='settingsInput' />
      <output message='tns:settingsResponseMessage' name='settingsOutput' />
    </operation>
  </portType>
  <binding name='lobBinding' type='tns:lobPortType'>
    <operation name='address'>
      <soap12:operation soapAction='http://address' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addressDelete'>
      <soap12:operation soapAction='http://addressDelete' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addresses'>
      <soap12:operation soapAction='http://addresses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAddresses'>
      <soap12:operation soapAction='http://getAddresses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getJob'>
      <soap12:operation soapAction='http://getJob' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getJobs'>
      <soap12:operation soapAction='http://getJobs' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getObject'>
      <soap12:operation soapAction='http://getObject' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getObjects'>
      <soap12:operation soapAction='http://getObjects' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='jobs'>
      <soap12:operation soapAction='http://jobs' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='objectDelete'>
      <soap12:operation soapAction='http://objectDelete' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='objects'>
      <soap12:operation soapAction='http://objects' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='packagings'>
      <soap12:operation soapAction='http://packagings' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='settings'>
      <soap12:operation soapAction='http://settings' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='lob'>
    <documentation>the Lob API formerly Infraprint is a printing API organized around REST Our API is designed to have predictable resource oriented URLs and uses HTTP response codes to indicate any API errors To send a print job you need to Create an address Create an object an object is the content you will be printing Once you have done this you can send this a job to the printer</documentation>
    <port name='lobPort' binding='tns:lobBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://lob' />
    </port>
  </service>
</definitions>