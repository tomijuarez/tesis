<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/gslbMe/' name='gslbMe' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/gslbMe/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/gslbMe/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/gslbMe/'>
      <xsd:element name='addZoneRecordParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='recordname' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordttl' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordtype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordvalue' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addZoneRecordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='commitGeohostParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='geohostname' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='commitGeohostResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='commitZoneParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='commitZoneResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createZoneParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='contactemail' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='state' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createZoneResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteZoneParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteZoneResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteZoneRecordParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='recordid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteZoneRecordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getGeohostConfigurationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='geohostname' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getGeohostConfigurationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getZoneConfigurationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getZoneConfigurationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getZoneRecordsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getZoneRecordsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='modifyZoneRecordParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='recordid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordname' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordttl' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordtype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='recordvalue' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='modifyZoneRecordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setZoneStateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='state' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='zonename' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setZoneStateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='addZoneRecordRequestMessage'>
    <part name='parameters' element='tns:addZoneRecordParameters' />
  </message>
  <message name='addZoneRecordResponseMessage'>
    <part name='response' element='tns:addZoneRecordResponse' />
  </message>
  <message name='commitGeohostRequestMessage'>
    <part name='parameters' element='tns:commitGeohostParameters' />
  </message>
  <message name='commitGeohostResponseMessage'>
    <part name='response' element='tns:commitGeohostResponse' />
  </message>
  <message name='commitZoneRequestMessage'>
    <part name='parameters' element='tns:commitZoneParameters' />
  </message>
  <message name='commitZoneResponseMessage'>
    <part name='response' element='tns:commitZoneResponse' />
  </message>
  <message name='createZoneRequestMessage'>
    <part name='parameters' element='tns:createZoneParameters' />
  </message>
  <message name='createZoneResponseMessage'>
    <part name='response' element='tns:createZoneResponse' />
  </message>
  <message name='deleteZoneRequestMessage'>
    <part name='parameters' element='tns:deleteZoneParameters' />
  </message>
  <message name='deleteZoneResponseMessage'>
    <part name='response' element='tns:deleteZoneResponse' />
  </message>
  <message name='deleteZoneRecordRequestMessage'>
    <part name='parameters' element='tns:deleteZoneRecordParameters' />
  </message>
  <message name='deleteZoneRecordResponseMessage'>
    <part name='response' element='tns:deleteZoneRecordResponse' />
  </message>
  <message name='getGeohostConfigurationRequestMessage'>
    <part name='parameters' element='tns:getGeohostConfigurationParameters' />
  </message>
  <message name='getGeohostConfigurationResponseMessage'>
    <part name='response' element='tns:getGeohostConfigurationResponse' />
  </message>
  <message name='getZoneConfigurationRequestMessage'>
    <part name='parameters' element='tns:getZoneConfigurationParameters' />
  </message>
  <message name='getZoneConfigurationResponseMessage'>
    <part name='response' element='tns:getZoneConfigurationResponse' />
  </message>
  <message name='getZoneRecordsRequestMessage'>
    <part name='parameters' element='tns:getZoneRecordsParameters' />
  </message>
  <message name='getZoneRecordsResponseMessage'>
    <part name='response' element='tns:getZoneRecordsResponse' />
  </message>
  <message name='modifyZoneRecordRequestMessage'>
    <part name='parameters' element='tns:modifyZoneRecordParameters' />
  </message>
  <message name='modifyZoneRecordResponseMessage'>
    <part name='response' element='tns:modifyZoneRecordResponse' />
  </message>
  <message name='setZoneStateRequestMessage'>
    <part name='parameters' element='tns:setZoneStateParameters' />
  </message>
  <message name='setZoneStateResponseMessage'>
    <part name='response' element='tns:setZoneStateResponse' />
  </message>
  <portType name='gslbMePortType'>
    <operation name='addZoneRecord'>
      <documentation>this API method adds a new record to a zone After adding one or more records to a zone the Commit Zone API method must be called in order to make the change s active</documentation>
      <input message='tns:addZoneRecordRequestMessage' name='addZoneRecordInput' />
      <output message='tns:addZoneRecordResponseMessage' name='addZoneRecordOutput' />
    </operation>
    <operation name='commitGeohost'>
      <documentation>this API method commits pending changing for an existing geohost</documentation>
      <input message='tns:commitGeohostRequestMessage' name='commitGeohostInput' />
      <output message='tns:commitGeohostResponseMessage' name='commitGeohostOutput' />
    </operation>
    <operation name='commitZone'>
      <documentation>this API method commits pending changing for an existing zone Whenever one record RRset is added modified or deleted the change is saved but not active until this Commit Zone method is called</documentation>
      <input message='tns:commitZoneRequestMessage' name='commitZoneInput' />
      <output message='tns:commitZoneResponseMessage' name='commitZoneOutput' />
    </operation>
    <operation name='createZone'>
      <documentation>this API method creates a new zone The user must be allowed enough available zones in order to successfully create a new one Free users can create one zone</documentation>
      <input message='tns:createZoneRequestMessage' name='createZoneInput' />
      <output message='tns:createZoneResponseMessage' name='createZoneOutput' />
    </operation>
    <operation name='deleteZone'>
      <documentation>this API method deletes an existing zone Deleting a zone completely wipes all records geohosts targets and configurations There is currently no undo so this method must be used with care</documentation>
      <input message='tns:deleteZoneRequestMessage' name='deleteZoneInput' />
      <output message='tns:deleteZoneResponseMessage' name='deleteZoneOutput' />
    </operation>
    <operation name='deleteZoneRecord'>
      <documentation>this API method deletes an existing zone record After deleting one or more records the Commit Zone API method must be called in order to make the change s active</documentation>
      <input message='tns:deleteZoneRecordRequestMessage' name='deleteZoneRecordInput' />
      <output message='tns:deleteZoneRecordResponseMessage' name='deleteZoneRecordOutput' />
    </operation>
    <operation name='getGeohostConfiguration'>
      <documentation>this API method fetches a geohost configuration</documentation>
      <input message='tns:getGeohostConfigurationRequestMessage' name='getGeohostConfigurationInput' />
      <output message='tns:getGeohostConfigurationResponseMessage' name='getGeohostConfigurationOutput' />
    </operation>
    <operation name='getZoneConfiguration'>
      <documentation>this API method fetches a zone configuration</documentation>
      <input message='tns:getZoneConfigurationRequestMessage' name='getZoneConfigurationInput' />
      <output message='tns:getZoneConfigurationResponseMessage' name='getZoneConfigurationOutput' />
    </operation>
    <operation name='getZoneRecords'>
      <documentation>this API method fetches all records for a zone</documentation>
      <input message='tns:getZoneRecordsRequestMessage' name='getZoneRecordsInput' />
      <output message='tns:getZoneRecordsResponseMessage' name='getZoneRecordsOutput' />
    </operation>
    <operation name='modifyZoneRecord'>
      <documentation>this API method modifies an existing zone record After modifying one or more records the Commit Zone API method must be called in order to make the change s active</documentation>
      <input message='tns:modifyZoneRecordRequestMessage' name='modifyZoneRecordInput' />
      <output message='tns:modifyZoneRecordResponseMessage' name='modifyZoneRecordOutput' />
    </operation>
    <operation name='setZoneState'>
      <documentation>this API method sets the zone state as either enabled or disabled An enabled zone handles DNS requests while a disabled zone doesn t respond to queries</documentation>
      <input message='tns:setZoneStateRequestMessage' name='setZoneStateInput' />
      <output message='tns:setZoneStateResponseMessage' name='setZoneStateOutput' />
    </operation>
  </portType>
  <binding name='gslbMeBinding' type='tns:gslbMePortType'>
    <operation name='addZoneRecord'>
      <soap12:operation soapAction='http://addZoneRecord' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='commitGeohost'>
      <soap12:operation soapAction='http://commitGeohost' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='commitZone'>
      <soap12:operation soapAction='http://commitZone' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createZone'>
      <soap12:operation soapAction='http://createZone' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteZone'>
      <soap12:operation soapAction='http://deleteZone' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteZoneRecord'>
      <soap12:operation soapAction='http://deleteZoneRecord' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getGeohostConfiguration'>
      <soap12:operation soapAction='http://getGeohostConfiguration' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getZoneConfiguration'>
      <soap12:operation soapAction='http://getZoneConfiguration' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getZoneRecords'>
      <soap12:operation soapAction='http://getZoneRecords' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='modifyZoneRecord'>
      <soap12:operation soapAction='http://modifyZoneRecord' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setZoneState'>
      <soap12:operation soapAction='http://setZoneState' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='gslbMe'>
    <documentation>gSLB me is a cloud based highly reliable DNS and Global Server Load Balancing solution that provides full authoritative DNS services and DNS based geographical traffic balancing failover high availability and geographical routing GSLB me brings you a complete REST based Application Programming Interface to integrate your own applications and cloud enabled infrastructures The REST API is available for free and allows you to manage dynamic DNS orchestration by creating new DNS records every time a new VPS or Amazon EC instance is run automatically add modify and delete DNS records directly from your code without using GSLB me web GUI transparently integrate GSLB me into your own B B and B C services integrate our services with your own front end or backend application update your dynamic DNS records in real time Read the documentation and get started with GSLB me API for your customized provisioning and orchestration</documentation>
    <port name='gslbMePort' binding='tns:gslbMeBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://gslbMe' />
    </port>
  </service>
</definitions>