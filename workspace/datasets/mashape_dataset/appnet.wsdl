<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/appNet/' name='appNet' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/appNet/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/appNet/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/appNet/'>
      <xsd:element name='getCurrentTokenSStreamsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='key' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getCurrentTokenSStreamsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='filter' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='clauses' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='field' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='object_type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='operator' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='match_policy' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='endpoint' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='object_types' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='key' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='min_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='more' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='max_id' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listUserInteractionsWithMeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='event_date' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='objects' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='action' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='users' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                  <xsd:element name='min_id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='more' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='max_id' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='retrieveAllExploreStreamsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                  <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='slug' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='retrieveTheMessagesInAChannelParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='channelid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='retrieveTheMessagesInAChannelResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForAPlaceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='altitude' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='horizontalaccuracy' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='latitude' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='longitude' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='radius' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='removeclosed' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='verticalaccuracy' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForAPlaceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='country_code' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='distance' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='is_open' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='locality' type='xsd:string' minOccurs='0' />
                  <xsd:element name='categories' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='labels' type='xsd:string' maxOccurs='unbounded' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='region' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='factual_id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForChannelsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='order' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForChannelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForPostsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='order' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='query' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForPostsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForUsersParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='searchForUsersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='counts' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='followers' type='xsd:int' minOccurs='0' />
                        <xsd:element name='following' type='xsd:int' minOccurs='0' />
                        <xsd:element name='stars' type='xsd:int' minOccurs='0' />
                        <xsd:element name='posts' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='timezone' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='you_follow' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='entities' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='hashtags' minOccurs='0'>
                                <xsd:complexType>
                                  <xsd:sequence minOccurs='1' maxOccurs='1'>
                                    <xsd:element name='len' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='pos' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                                  </xsd:sequence>
                                </xsd:complexType>
                              </xsd:element>
                              <xsd:element name='links' minOccurs='0'>
                                <xsd:complexType>
                                  <xsd:sequence minOccurs='1' maxOccurs='1'>
                                    <xsd:element name='len' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='pos' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                                  </xsd:sequence>
                                </xsd:complexType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='html' type='xsd:string' minOccurs='0' />
                        <xsd:element name='text' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='avatar_image' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='width' type='xsd:int' minOccurs='0' />
                        <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='height' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='locale' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='you_muted' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='is_muted' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='follows_you' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='cover_image' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='width' type='xsd:int' minOccurs='0' />
                        <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='height' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='is_following' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='is_follower' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='username' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='meta' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='code' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='getCurrentTokenSStreamsRequestMessage'>
    <part name='parameters' element='tns:getCurrentTokenSStreamsParameters' />
  </message>
  <message name='getCurrentTokenSStreamsResponseMessage'>
    <part name='response' element='tns:getCurrentTokenSStreamsResponse' />
  </message>
  <message name='listUserInteractionsWithMeRequestMessage' />
  <message name='listUserInteractionsWithMeResponseMessage'>
    <part name='response' element='tns:listUserInteractionsWithMeResponse' />
  </message>
  <message name='retrieveAllExploreStreamsRequestMessage' />
  <message name='retrieveAllExploreStreamsResponseMessage'>
    <part name='response' element='tns:retrieveAllExploreStreamsResponse' />
  </message>
  <message name='retrieveTheMessagesInAChannelRequestMessage'>
    <part name='parameters' element='tns:retrieveTheMessagesInAChannelParameters' />
  </message>
  <message name='retrieveTheMessagesInAChannelResponseMessage'>
    <part name='response' element='tns:retrieveTheMessagesInAChannelResponse' />
  </message>
  <message name='searchForAPlaceRequestMessage'>
    <part name='parameters' element='tns:searchForAPlaceParameters' />
  </message>
  <message name='searchForAPlaceResponseMessage'>
    <part name='response' element='tns:searchForAPlaceResponse' />
  </message>
  <message name='searchForChannelsRequestMessage'>
    <part name='parameters' element='tns:searchForChannelsParameters' />
  </message>
  <message name='searchForChannelsResponseMessage'>
    <part name='response' element='tns:searchForChannelsResponse' />
  </message>
  <message name='searchForPostsRequestMessage'>
    <part name='parameters' element='tns:searchForPostsParameters' />
  </message>
  <message name='searchForPostsResponseMessage'>
    <part name='response' element='tns:searchForPostsResponse' />
  </message>
  <message name='searchForUsersRequestMessage'>
    <part name='parameters' element='tns:searchForUsersParameters' />
  </message>
  <message name='searchForUsersResponseMessage'>
    <part name='response' element='tns:searchForUsersResponse' />
  </message>
  <portType name='appNetPortType'>
    <operation name='getCurrentTokenSStreams'>
      <documentation>return the Streams for the current token</documentation>
      <input message='tns:getCurrentTokenSStreamsRequestMessage' name='getCurrentTokenSStreamsInput' />
      <output message='tns:getCurrentTokenSStreamsResponseMessage' name='getCurrentTokenSStreamsOutput' />
    </operation>
    <operation name='listUserInteractionsWithMe'>
      <documentation>list all the Interactions other users have had with me</documentation>
      <input message='tns:listUserInteractionsWithMeRequestMessage' name='listUserInteractionsWithMeInput' />
      <output message='tns:listUserInteractionsWithMeResponseMessage' name='listUserInteractionsWithMeOutput' />
    </operation>
    <operation name='retrieveAllExploreStreams'>
      <documentation>retrieve a list of all Explore Streams The list of Explore Streams are dynamic and will sometimes change Please cache them for hours in your app Also please note that this endpoint is not paginated</documentation>
      <input message='tns:retrieveAllExploreStreamsRequestMessage' name='retrieveAllExploreStreamsInput' />
      <output message='tns:retrieveAllExploreStreamsResponseMessage' name='retrieveAllExploreStreamsOutput' />
    </operation>
    <operation name='retrieveTheMessagesInAChannel'>
      <documentation>retrieve a stream of the Messages in a channel</documentation>
      <input message='tns:retrieveTheMessagesInAChannelRequestMessage' name='retrieveTheMessagesInAChannelInput' />
      <output message='tns:retrieveTheMessagesInAChannelResponseMessage' name='retrieveTheMessagesInAChannelOutput' />
    </operation>
    <operation name='searchForAPlace'>
      <documentation>performs a search for nearest places from given latitude and longitude Optionally takes a q string to restrict matches on name like autocomplete for Place names Returns a list of Places sorted by distance or distance string match if q is provided These are the same Place objects as returned by the previous endpoint but will also include a distance property which gives in meters the distance from the search centroid to the Place</documentation>
      <input message='tns:searchForAPlaceRequestMessage' name='searchForAPlaceInput' />
      <output message='tns:searchForAPlaceResponseMessage' name='searchForAPlaceOutput' />
    </operation>
    <operation name='searchForChannels'>
      <documentation>returns Channel objects which match a given search query Because channels have no inherent notion of description or name we take textual data from common channel annotations which contain such fields e g net patter app settings We also allow filtering on specific channel properties such as channel type No matter what query data is supplied the search results will respect channel ACLs and results are limited to non private channels if the requesting access token does not have the messages scope</documentation>
      <input message='tns:searchForChannelsRequestMessage' name='searchForChannelsInput' />
      <output message='tns:searchForChannelsResponseMessage' name='searchForChannelsOutput' />
    </operation>
    <operation name='searchForPosts'>
      <documentation>returns Post objects which match a given search query Searches ordered by id require at least one query or filter to be specified searches ordered by score require at least one query and zero or more filters to be specified Searches require an ordering and at least one search query to be specified and allow for zero or more filters to be added All parameters should be passed in the query string</documentation>
      <input message='tns:searchForPostsRequestMessage' name='searchForPostsInput' />
      <output message='tns:searchForPostsResponseMessage' name='searchForPostsOutput' />
    </operation>
    <operation name='searchForUsers'>
      <documentation>search the App net userbase</documentation>
      <input message='tns:searchForUsersRequestMessage' name='searchForUsersInput' />
      <output message='tns:searchForUsersResponseMessage' name='searchForUsersOutput' />
    </operation>
  </portType>
  <binding name='appNetBinding' type='tns:appNetPortType'>
    <operation name='getCurrentTokenSStreams'>
      <soap12:operation soapAction='http://getCurrentTokenSStreams' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listUserInteractionsWithMe'>
      <soap12:operation soapAction='http://listUserInteractionsWithMe' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='retrieveAllExploreStreams'>
      <soap12:operation soapAction='http://retrieveAllExploreStreams' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='retrieveTheMessagesInAChannel'>
      <soap12:operation soapAction='http://retrieveTheMessagesInAChannel' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='searchForAPlace'>
      <soap12:operation soapAction='http://searchForAPlace' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='searchForChannels'>
      <soap12:operation soapAction='http://searchForChannels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='searchForPosts'>
      <soap12:operation soapAction='http://searchForPosts' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='searchForUsers'>
      <soap12:operation soapAction='http://searchForUsers' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='appNet'>
    <documentation>app net is a subscription based ad free social network and API a home for meaningful interactions and a platform developers can trust We rely on our developers and our developers can rely on us for a robust responsive and transparent platform</documentation>
    <port name='appNetPort' binding='tns:appNetBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://appNet' />
    </port>
  </service>
</definitions>