<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/facemark/' name='facemark' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/facemark/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/facemark/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/facemark/'>
      <xsd:element name='processImageFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='image' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='width' type='xsd:int' minOccurs='0' />
                  <xsd:element name='height' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='faces' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='orientation' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='landmarks' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='x' type='xsd:int' minOccurs='0' />
                        <xsd:element name='y' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='processImageUrlParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='processImageUrlResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='image' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='width' type='xsd:int' minOccurs='0' />
                  <xsd:element name='height' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='faces' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='orientation' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='landmarks' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='x' type='xsd:int' minOccurs='0' />
                        <xsd:element name='y' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='processImageFileRequestMessage' />
  <message name='processImageFileResponseMessage'>
    <part name='response' element='tns:processImageFileResponse' />
  </message>
  <message name='processImageUrlRequestMessage'>
    <part name='parameters' element='tns:processImageUrlParameters' />
  </message>
  <message name='processImageUrlResponseMessage'>
    <part name='response' element='tns:processImageUrlResponse' />
  </message>
  <portType name='facemarkPortType'>
    <operation name='processImageFile'>
      <documentation>returns a JSON object that contains detected facial features for faces on the uploaded image visual demo http apicloud me apis facemark demo</documentation>
      <input message='tns:processImageFileRequestMessage' name='processImageFileInput' />
      <output message='tns:processImageFileResponseMessage' name='processImageFileOutput' />
    </operation>
    <operation name='processImageUrl'>
      <documentation>returns a JSON object that contains detected facial features for faces on the image specified by URL visual demo http apicloud me apis facerect demo</documentation>
      <input message='tns:processImageUrlRequestMessage' name='processImageUrlInput' />
      <output message='tns:processImageUrlResponseMessage' name='processImageUrlOutput' />
    </operation>
  </portType>
  <binding name='facemarkBinding' type='tns:facemarkPortType'>
    <operation name='processImageFile'>
      <soap12:operation soapAction='http://processImageFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='processImageUrl'>
      <soap12:operation soapAction='http://processImageUrl' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='facemark'>
    <documentation>faceMark is a powerful API for facial feature detection It finds points for a frontal face and for a profile one FaceMark detects landmarks for faces on the image specified by URL or uploaded as a file and produces JSON output containing a vector of facial landmarks and orientation for each face found Check out visual demo here http apicloud me apis facemark demo</documentation>
    <port name='facemarkPort' binding='tns:facemarkBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://facemark' />
    </port>
  </service>
</definitions>