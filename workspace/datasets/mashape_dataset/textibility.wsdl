<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/textibility/' name='textibility' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/textibility/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/textibility/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/textibility/'>
      <xsd:element name='compressAPdfFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='convertSvgResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createElectronicBookResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='decodeBarcodeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='page' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='decodeBarcodeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='format' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='detail' type='xsd:anyURI' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='extractTextFromPdfResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='text' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='array' type='xsd:string' maxOccurs='unbounded' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='filterPdfPagesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='generateBarcodeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='generateBarcodeLabelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getThumbnailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='joinPdfFilesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='lockPdfFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='renderBarChartResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='renderGaugeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='renderLineChartResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='unlockPdfFileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='compressAPdfFileRequestMessage' />
  <message name='compressAPdfFileResponseMessage'>
    <part name='response' element='tns:compressAPdfFileResponse' />
  </message>
  <message name='convertSvgRequestMessage' />
  <message name='convertSvgResponseMessage'>
    <part name='response' element='tns:convertSvgResponse' />
  </message>
  <message name='createElectronicBookRequestMessage' />
  <message name='createElectronicBookResponseMessage'>
    <part name='response' element='tns:createElectronicBookResponse' />
  </message>
  <message name='decodeBarcodeRequestMessage'>
    <part name='parameters' element='tns:decodeBarcodeParameters' />
  </message>
  <message name='decodeBarcodeResponseMessage'>
    <part name='response' element='tns:decodeBarcodeResponse' />
  </message>
  <message name='extractTextFromPdfRequestMessage' />
  <message name='extractTextFromPdfResponseMessage'>
    <part name='response' element='tns:extractTextFromPdfResponse' />
  </message>
  <message name='filterPdfPagesRequestMessage' />
  <message name='filterPdfPagesResponseMessage'>
    <part name='response' element='tns:filterPdfPagesResponse' />
  </message>
  <message name='generateBarcodeRequestMessage' />
  <message name='generateBarcodeResponseMessage'>
    <part name='response' element='tns:generateBarcodeResponse' />
  </message>
  <message name='generateBarcodeLabelsRequestMessage' />
  <message name='generateBarcodeLabelsResponseMessage'>
    <part name='response' element='tns:generateBarcodeLabelsResponse' />
  </message>
  <message name='getThumbnailsRequestMessage' />
  <message name='getThumbnailsResponseMessage'>
    <part name='response' element='tns:getThumbnailsResponse' />
  </message>
  <message name='joinPdfFilesRequestMessage' />
  <message name='joinPdfFilesResponseMessage'>
    <part name='response' element='tns:joinPdfFilesResponse' />
  </message>
  <message name='lockPdfFileRequestMessage' />
  <message name='lockPdfFileResponseMessage'>
    <part name='response' element='tns:lockPdfFileResponse' />
  </message>
  <message name='renderBarChartRequestMessage' />
  <message name='renderBarChartResponseMessage'>
    <part name='response' element='tns:renderBarChartResponse' />
  </message>
  <message name='renderGaugeRequestMessage' />
  <message name='renderGaugeResponseMessage'>
    <part name='response' element='tns:renderGaugeResponse' />
  </message>
  <message name='renderLineChartRequestMessage' />
  <message name='renderLineChartResponseMessage'>
    <part name='response' element='tns:renderLineChartResponse' />
  </message>
  <message name='unlockPdfFileRequestMessage' />
  <message name='unlockPdfFileResponseMessage'>
    <part name='response' element='tns:unlockPdfFileResponse' />
  </message>
  <portType name='textibilityPortType'>
    <operation name='compressAPdfFile'>
      <documentation>reduce the size of scanned PDFs by shrinking image resolutions</documentation>
      <input message='tns:compressAPdfFileRequestMessage' name='compressAPdfFileInput' />
      <output message='tns:compressAPdfFileResponseMessage' name='compressAPdfFileOutput' />
    </operation>
    <operation name='convertSvg'>
      <documentation>converts an SVG document into a bitmap PNG JPEG GIF or a PDF file</documentation>
      <input message='tns:convertSvgRequestMessage' name='convertSvgInput' />
      <output message='tns:convertSvgResponseMessage' name='convertSvgOutput' />
    </operation>
    <operation name='createElectronicBook'>
      <documentation>creates an electronic book in either EPub or Kindle mobi format</documentation>
      <input message='tns:createElectronicBookRequestMessage' name='createElectronicBookInput' />
      <output message='tns:createElectronicBookResponseMessage' name='createElectronicBookOutput' />
    </operation>
    <operation name='decodeBarcode'>
      <documentation>decodes the supplied barcode from an PNG GIF JPEG image or a PDF file and returns the barcode data If decoding a PDF file an optional starting page number can be added to the end of the URL to specify which page to start searching for a barcode on if not specified the search begins on page by default</documentation>
      <input message='tns:decodeBarcodeRequestMessage' name='decodeBarcodeInput' />
      <output message='tns:decodeBarcodeResponseMessage' name='decodeBarcodeOutput' />
    </operation>
    <operation name='extractTextFromPdf'>
      <documentation>returns the text in the selected PDF file separated by page and display line</documentation>
      <input message='tns:extractTextFromPdfRequestMessage' name='extractTextFromPdfInput' />
      <output message='tns:extractTextFromPdfResponseMessage' name='extractTextFromPdfOutput' />
    </operation>
    <operation name='filterPdfPages'>
      <documentation>removes one or more pages from the specified PDF file</documentation>
      <input message='tns:filterPdfPagesRequestMessage' name='filterPdfPagesInput' />
      <output message='tns:filterPdfPagesResponseMessage' name='filterPdfPagesOutput' />
    </operation>
    <operation name='generateBarcode'>
      <documentation>generates a barcode from specified content and returns it as a PNG GIF JPEG image or a PDF file</documentation>
      <input message='tns:generateBarcodeRequestMessage' name='generateBarcodeInput' />
      <output message='tns:generateBarcodeResponseMessage' name='generateBarcodeOutput' />
    </operation>
    <operation name='generateBarcodeLabels'>
      <documentation>generates printable labels and returns the labels as a PDF file</documentation>
      <input message='tns:generateBarcodeLabelsRequestMessage' name='generateBarcodeLabelsInput' />
      <output message='tns:generateBarcodeLabelsResponseMessage' name='generateBarcodeLabelsOutput' />
    </operation>
    <operation name='getThumbnails'>
      <documentation>obtain one or more thumbnail images representing the pages of a PDF file If a single page is requested it will be returned as a PNG image If multiple pages are requested then a ZIP file will be returned with the Content Type header of the response set to application zip and each image within the zip file will be named with the page number for example png png etc</documentation>
      <input message='tns:getThumbnailsRequestMessage' name='getThumbnailsInput' />
      <output message='tns:getThumbnailsResponseMessage' name='getThumbnailsOutput' />
    </operation>
    <operation name='joinPdfFiles'>
      <documentation>joins or more PDF files into a single PDF file</documentation>
      <input message='tns:joinPdfFilesRequestMessage' name='joinPdfFilesInput' />
      <output message='tns:joinPdfFilesResponseMessage' name='joinPdfFilesOutput' />
    </operation>
    <operation name='lockPdfFile'>
      <documentation>adds password encryption and access permissions to a specific file Currently only supports RC encryption</documentation>
      <input message='tns:lockPdfFileRequestMessage' name='lockPdfFileInput' />
      <output message='tns:lockPdfFileResponseMessage' name='lockPdfFileOutput' />
    </operation>
    <operation name='renderBarChart'>
      <documentation>draws a simple bar chart based on the g raphael library and return a PNG or PDF version of the chart</documentation>
      <input message='tns:renderBarChartRequestMessage' name='renderBarChartInput' />
      <output message='tns:renderBarChartResponseMessage' name='renderBarChartOutput' />
    </operation>
    <operation name='renderGauge'>
      <documentation>creates a gauge chart and returns a PNG or PDF version of the chart</documentation>
      <input message='tns:renderGaugeRequestMessage' name='renderGaugeInput' />
      <output message='tns:renderGaugeResponseMessage' name='renderGaugeOutput' />
    </operation>
    <operation name='renderLineChart'>
      <documentation>draws a simple line chart based on the g raphael library and and return a PNG or PDF version of the chart</documentation>
      <input message='tns:renderLineChartRequestMessage' name='renderLineChartInput' />
      <output message='tns:renderLineChartResponseMessage' name='renderLineChartOutput' />
    </operation>
    <operation name='unlockPdfFile'>
      <documentation>removes all password encryption and access permissions from a PDF file Currently only supports RC encryption</documentation>
      <input message='tns:unlockPdfFileRequestMessage' name='unlockPdfFileInput' />
      <output message='tns:unlockPdfFileResponseMessage' name='unlockPdfFileOutput' />
    </operation>
  </portType>
  <binding name='textibilityBinding' type='tns:textibilityPortType'>
    <operation name='compressAPdfFile'>
      <soap12:operation soapAction='http://compressAPdfFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='convertSvg'>
      <soap12:operation soapAction='http://convertSvg' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createElectronicBook'>
      <soap12:operation soapAction='http://createElectronicBook' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='decodeBarcode'>
      <soap12:operation soapAction='http://decodeBarcode' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='extractTextFromPdf'>
      <soap12:operation soapAction='http://extractTextFromPdf' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='filterPdfPages'>
      <soap12:operation soapAction='http://filterPdfPages' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='generateBarcode'>
      <soap12:operation soapAction='http://generateBarcode' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='generateBarcodeLabels'>
      <soap12:operation soapAction='http://generateBarcodeLabels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getThumbnails'>
      <soap12:operation soapAction='http://getThumbnails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='joinPdfFiles'>
      <soap12:operation soapAction='http://joinPdfFiles' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='lockPdfFile'>
      <soap12:operation soapAction='http://lockPdfFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='renderBarChart'>
      <soap12:operation soapAction='http://renderBarChart' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='renderGauge'>
      <soap12:operation soapAction='http://renderGauge' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='renderLineChart'>
      <soap12:operation soapAction='http://renderLineChart' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='unlockPdfFile'>
      <soap12:operation soapAction='http://unlockPdfFile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='textibility'>
    <documentation>textibility provides a simple REST API for extracting information from images and documents in a number of formats and generating images and documents from structured data With a simple clean HTTP interface and some clever processing we can quickly and easily unlock information captured in photographs and file uploads A couple of examples supported by the API Decode a barcode from a photograph Generating a barcode for a product UPC a boarding pass PDF or to point to a URL or describe a contact QR Generate an EPub or Kindle compatible electronic book Generate static charts</documentation>
    <port name='textibilityPort' binding='tns:textibilityBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://textibility' />
    </port>
  </service>
</definitions>