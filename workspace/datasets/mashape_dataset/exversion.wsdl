<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/exversion/' name='exversion' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/exversion/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/exversion/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/exversion/'>
      <xsd:element name='getDatasetDatasetParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='dataset' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='key' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='lobbyistfirstname' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getDatasetDatasetResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='lobbyist_first_name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='_id' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='lobbyist_last_name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='filing_year' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getMetadataDatasetParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='dataset' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='key' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getMetadataDatasetResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='sourceURL' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='sourceDate' type='xsd:string' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='forkchanges' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                  <xsd:element name='sourceAuthor' type='xsd:string' minOccurs='0' />
                  <xsd:element name='dataset' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='uploadedBy' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='sourceContact' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSearchParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='sourceURL' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='sourceDate' type='xsd:string' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='forkchanges' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                  <xsd:element name='sourceAuthor' type='xsd:string' minOccurs='0' />
                  <xsd:element name='dataset' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='uploadedBy' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='sourceContact' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postDatasetCreateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='sourceURL' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='sourceDate' type='xsd:string' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='columns' type='xsd:string' minOccurs='0' />
                  <xsd:element name='forkchanges' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='description' type='xsd:string' minOccurs='0' />
                  <xsd:element name='sourceAuthor' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='dataset' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='uploadedBy' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='sourceContact' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postDatasetEditResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='test' type='xsd:int' minOccurs='0' />
                  <xsd:element name='gender' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='age' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='postDatasetPushResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='body' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='inserted' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='test' type='xsd:int' minOccurs='0' />
                        <xsd:element name='gender' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='age' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='getDatasetDatasetRequestMessage'>
    <part name='parameters' element='tns:getDatasetDatasetParameters' />
  </message>
  <message name='getDatasetDatasetResponseMessage'>
    <part name='response' element='tns:getDatasetDatasetResponse' />
  </message>
  <message name='getMetadataDatasetRequestMessage'>
    <part name='parameters' element='tns:getMetadataDatasetParameters' />
  </message>
  <message name='getMetadataDatasetResponseMessage'>
    <part name='response' element='tns:getMetadataDatasetResponse' />
  </message>
  <message name='getSearchRequestMessage'>
    <part name='parameters' element='tns:getSearchParameters' />
  </message>
  <message name='getSearchResponseMessage'>
    <part name='response' element='tns:getSearchResponse' />
  </message>
  <message name='postDatasetCreateRequestMessage' />
  <message name='postDatasetCreateResponseMessage'>
    <part name='response' element='tns:postDatasetCreateResponse' />
  </message>
  <message name='postDatasetEditRequestMessage' />
  <message name='postDatasetEditResponseMessage'>
    <part name='response' element='tns:postDatasetEditResponse' />
  </message>
  <message name='postDatasetPushRequestMessage' />
  <message name='postDatasetPushResponseMessage'>
    <part name='response' element='tns:postDatasetPushResponse' />
  </message>
  <portType name='exversionPortType'>
    <operation name='getDatasetDataset'>
      <documentation>runs a query on the selected dataset and returns the results Consult the dataset s listing for information on columns</documentation>
      <input message='tns:getDatasetDatasetRequestMessage' name='getDatasetDatasetInput' />
      <output message='tns:getDatasetDatasetResponseMessage' name='getDatasetDatasetOutput' />
    </operation>
    <operation name='getMetadataDataset'>
      <documentation>returns the metadata about a selected dataset including ids for the parent datasets if applicable</documentation>
      <input message='tns:getMetadataDatasetRequestMessage' name='getMetadataDatasetInput' />
      <output message='tns:getMetadataDatasetResponseMessage' name='getMetadataDatasetOutput' />
    </operation>
    <operation name='getSearch'>
      <documentation>search for data through the API No API Key is required for this call</documentation>
      <input message='tns:getSearchRequestMessage' name='getSearchInput' />
      <output message='tns:getSearchResponseMessage' name='getSearchOutput' />
    </operation>
    <operation name='postDatasetCreate'>
      <documentation>creates a new dataset from parameters supplied Org should be the id number of the relevant organization if applicable Private should be either to keep the dataset private or to leave it public All other parameters are strings following the same conventions of the upload form on Exversion</documentation>
      <input message='tns:postDatasetCreateRequestMessage' name='postDatasetCreateInput' />
      <output message='tns:postDatasetCreateResponseMessage' name='postDatasetCreateOutput' />
    </operation>
    <operation name='postDatasetEdit'>
      <documentation>edit specific data points Requires the id of the specific data point which is part of the information returned by any dataset query This is intended to fixes errors mistakes corruption or inconsistencies in the data not to update existing data points with new information All changes are tracked and can be reverted through the web interface</documentation>
      <input message='tns:postDatasetEditRequestMessage' name='postDatasetEditInput' />
      <output message='tns:postDatasetEditResponseMessage' name='postDatasetEditOutput' />
    </operation>
    <operation name='postDatasetPush'>
      <documentation>adds new data to an existing dataset Controls for duplicate information by remapping rows of existing identical information Missing Values In order to ensure the best possible query results Exversion normalizes pushed data to conform to the dataset s existing schema If the dataset is empty a schema is created from the first row submitted through the API For that reason please make sure there are no missing values empty strings are acceptable The API will reject any new data that contains parameters not listed in the schema</documentation>
      <input message='tns:postDatasetPushRequestMessage' name='postDatasetPushInput' />
      <output message='tns:postDatasetPushResponseMessage' name='postDatasetPushOutput' />
    </operation>
  </portType>
  <binding name='exversionBinding' type='tns:exversionPortType'>
    <operation name='getDatasetDataset'>
      <soap12:operation soapAction='http://getDatasetDataset' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getMetadataDataset'>
      <soap12:operation soapAction='http://getMetadataDataset' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getSearch'>
      <soap12:operation soapAction='http://getSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postDatasetCreate'>
      <soap12:operation soapAction='http://postDatasetCreate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postDatasetEdit'>
      <soap12:operation soapAction='http://postDatasetEdit' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='postDatasetPush'>
      <soap12:operation soapAction='http://postDatasetPush' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='exversion'>
    <documentation>eASILY DEVELOP WITH DATA Search over datasets consume them through one simple API or upload your own Collaborate publish share or version control it with colleagues and the community</documentation>
    <port name='exversionPort' binding='tns:exversionBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://exversion' />
    </port>
  </service>
</definitions>