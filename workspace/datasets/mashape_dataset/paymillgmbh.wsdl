<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/paymillGmbh/' name='paymillGmbh' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/paymillGmbh/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/paymillGmbh/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/paymillGmbh/'>
      <xsd:element name='clientDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='clientDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewClientResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewOfferResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewSubscriptionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createNewUrlOrEmailWebhookResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createPaymentWithTokenOrClientResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createPreauthorizationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createTransactionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='exportClientListParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='creditcard' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='email' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='exportClientListResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listClientsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='creditcard' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='email' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listClientsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listOffersParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='amount' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='interval' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='trialperioddays' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listOffersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listPaymentsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listPreauthorizationsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listRefundsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='amount' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='client' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='transaction' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listRefundsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listSubscriptionsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='canceledat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offer' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listSubscriptionsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listTransactionsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listWebhooksParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='createdat' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='email' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='order' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listWebhooksResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='offerDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='offerDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='paymentDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='paymentDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='preauthorizationDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='preauthorizationDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='refundDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='refundDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='refundTransactionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeClientParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeClientResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeOfferParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeOfferResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removePaymentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removePaymentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removePreauthorizationsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removePreauthorizationsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeSubscriptionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeSubscriptionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeWebhookParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='removeWebhookResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='subscriptionDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='subscriptionDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transactionDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='transactionDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateClientParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateClientResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateOfferParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateOfferResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateSubscriptionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateSubscriptionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateWebhookParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateWebhookResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='webhookDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='webhookDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='clientDetailsRequestMessage'>
    <part name='parameters' element='tns:clientDetailsParameters' />
  </message>
  <message name='clientDetailsResponseMessage'>
    <part name='response' element='tns:clientDetailsResponse' />
  </message>
  <message name='createNewClientRequestMessage' />
  <message name='createNewClientResponseMessage'>
    <part name='response' element='tns:createNewClientResponse' />
  </message>
  <message name='createNewOfferRequestMessage' />
  <message name='createNewOfferResponseMessage'>
    <part name='response' element='tns:createNewOfferResponse' />
  </message>
  <message name='createNewSubscriptionRequestMessage' />
  <message name='createNewSubscriptionResponseMessage'>
    <part name='response' element='tns:createNewSubscriptionResponse' />
  </message>
  <message name='createNewUrlOrEmailWebhookRequestMessage' />
  <message name='createNewUrlOrEmailWebhookResponseMessage'>
    <part name='response' element='tns:createNewUrlOrEmailWebhookResponse' />
  </message>
  <message name='createPaymentWithTokenOrClientRequestMessage' />
  <message name='createPaymentWithTokenOrClientResponseMessage'>
    <part name='response' element='tns:createPaymentWithTokenOrClientResponse' />
  </message>
  <message name='createPreauthorizationRequestMessage' />
  <message name='createPreauthorizationResponseMessage'>
    <part name='response' element='tns:createPreauthorizationResponse' />
  </message>
  <message name='createTransactionRequestMessage' />
  <message name='createTransactionResponseMessage'>
    <part name='response' element='tns:createTransactionResponse' />
  </message>
  <message name='exportClientListRequestMessage'>
    <part name='parameters' element='tns:exportClientListParameters' />
  </message>
  <message name='exportClientListResponseMessage'>
    <part name='response' element='tns:exportClientListResponse' />
  </message>
  <message name='listClientsRequestMessage'>
    <part name='parameters' element='tns:listClientsParameters' />
  </message>
  <message name='listClientsResponseMessage'>
    <part name='response' element='tns:listClientsResponse' />
  </message>
  <message name='listOffersRequestMessage'>
    <part name='parameters' element='tns:listOffersParameters' />
  </message>
  <message name='listOffersResponseMessage'>
    <part name='response' element='tns:listOffersResponse' />
  </message>
  <message name='listPaymentsRequestMessage' />
  <message name='listPaymentsResponseMessage'>
    <part name='response' element='tns:listPaymentsResponse' />
  </message>
  <message name='listPreauthorizationsRequestMessage' />
  <message name='listPreauthorizationsResponseMessage'>
    <part name='response' element='tns:listPreauthorizationsResponse' />
  </message>
  <message name='listRefundsRequestMessage'>
    <part name='parameters' element='tns:listRefundsParameters' />
  </message>
  <message name='listRefundsResponseMessage'>
    <part name='response' element='tns:listRefundsResponse' />
  </message>
  <message name='listSubscriptionsRequestMessage'>
    <part name='parameters' element='tns:listSubscriptionsParameters' />
  </message>
  <message name='listSubscriptionsResponseMessage'>
    <part name='response' element='tns:listSubscriptionsResponse' />
  </message>
  <message name='listTransactionsRequestMessage' />
  <message name='listTransactionsResponseMessage'>
    <part name='response' element='tns:listTransactionsResponse' />
  </message>
  <message name='listWebhooksRequestMessage'>
    <part name='parameters' element='tns:listWebhooksParameters' />
  </message>
  <message name='listWebhooksResponseMessage'>
    <part name='response' element='tns:listWebhooksResponse' />
  </message>
  <message name='offerDetailsRequestMessage'>
    <part name='parameters' element='tns:offerDetailsParameters' />
  </message>
  <message name='offerDetailsResponseMessage'>
    <part name='response' element='tns:offerDetailsResponse' />
  </message>
  <message name='paymentDetailsRequestMessage'>
    <part name='parameters' element='tns:paymentDetailsParameters' />
  </message>
  <message name='paymentDetailsResponseMessage'>
    <part name='response' element='tns:paymentDetailsResponse' />
  </message>
  <message name='preauthorizationDetailsRequestMessage'>
    <part name='parameters' element='tns:preauthorizationDetailsParameters' />
  </message>
  <message name='preauthorizationDetailsResponseMessage'>
    <part name='response' element='tns:preauthorizationDetailsResponse' />
  </message>
  <message name='refundDetailsRequestMessage'>
    <part name='parameters' element='tns:refundDetailsParameters' />
  </message>
  <message name='refundDetailsResponseMessage'>
    <part name='response' element='tns:refundDetailsResponse' />
  </message>
  <message name='refundTransactionRequestMessage' />
  <message name='refundTransactionResponseMessage'>
    <part name='response' element='tns:refundTransactionResponse' />
  </message>
  <message name='removeClientRequestMessage'>
    <part name='parameters' element='tns:removeClientParameters' />
  </message>
  <message name='removeClientResponseMessage'>
    <part name='response' element='tns:removeClientResponse' />
  </message>
  <message name='removeOfferRequestMessage'>
    <part name='parameters' element='tns:removeOfferParameters' />
  </message>
  <message name='removeOfferResponseMessage'>
    <part name='response' element='tns:removeOfferResponse' />
  </message>
  <message name='removePaymentRequestMessage'>
    <part name='parameters' element='tns:removePaymentParameters' />
  </message>
  <message name='removePaymentResponseMessage'>
    <part name='response' element='tns:removePaymentResponse' />
  </message>
  <message name='removePreauthorizationsRequestMessage'>
    <part name='parameters' element='tns:removePreauthorizationsParameters' />
  </message>
  <message name='removePreauthorizationsResponseMessage'>
    <part name='response' element='tns:removePreauthorizationsResponse' />
  </message>
  <message name='removeSubscriptionRequestMessage'>
    <part name='parameters' element='tns:removeSubscriptionParameters' />
  </message>
  <message name='removeSubscriptionResponseMessage'>
    <part name='response' element='tns:removeSubscriptionResponse' />
  </message>
  <message name='removeWebhookRequestMessage'>
    <part name='parameters' element='tns:removeWebhookParameters' />
  </message>
  <message name='removeWebhookResponseMessage'>
    <part name='response' element='tns:removeWebhookResponse' />
  </message>
  <message name='subscriptionDetailsRequestMessage'>
    <part name='parameters' element='tns:subscriptionDetailsParameters' />
  </message>
  <message name='subscriptionDetailsResponseMessage'>
    <part name='response' element='tns:subscriptionDetailsResponse' />
  </message>
  <message name='transactionDetailsRequestMessage'>
    <part name='parameters' element='tns:transactionDetailsParameters' />
  </message>
  <message name='transactionDetailsResponseMessage'>
    <part name='response' element='tns:transactionDetailsResponse' />
  </message>
  <message name='updateClientRequestMessage'>
    <part name='parameters' element='tns:updateClientParameters' />
  </message>
  <message name='updateClientResponseMessage'>
    <part name='response' element='tns:updateClientResponse' />
  </message>
  <message name='updateOfferRequestMessage'>
    <part name='parameters' element='tns:updateOfferParameters' />
  </message>
  <message name='updateOfferResponseMessage'>
    <part name='response' element='tns:updateOfferResponse' />
  </message>
  <message name='updateSubscriptionRequestMessage'>
    <part name='parameters' element='tns:updateSubscriptionParameters' />
  </message>
  <message name='updateSubscriptionResponseMessage'>
    <part name='response' element='tns:updateSubscriptionResponse' />
  </message>
  <message name='updateWebhookRequestMessage'>
    <part name='parameters' element='tns:updateWebhookParameters' />
  </message>
  <message name='updateWebhookResponseMessage'>
    <part name='response' element='tns:updateWebhookResponse' />
  </message>
  <message name='webhookDetailsRequestMessage'>
    <part name='parameters' element='tns:webhookDetailsParameters' />
  </message>
  <message name='webhookDetailsResponseMessage'>
    <part name='response' element='tns:webhookDetailsResponse' />
  </message>
  <portType name='paymillGmbhPortType'>
    <operation name='clientDetails'>
      <documentation>to get the details of an existing client you ll need to supply the client ID The client ID is returned by creating a client</documentation>
      <input message='tns:clientDetailsRequestMessage' name='clientDetailsInput' />
      <output message='tns:clientDetailsResponseMessage' name='clientDetailsOutput' />
    </operation>
    <operation name='createNewClient'>
      <documentation>this function creates a client object</documentation>
      <input message='tns:createNewClientRequestMessage' name='createNewClientInput' />
      <output message='tns:createNewClientResponseMessage' name='createNewClientOutput' />
    </operation>
    <operation name='createNewOffer'>
      <documentation>with this call you can create an offer via the API You can also create an offer with the merchant cockpit</documentation>
      <input message='tns:createNewOfferRequestMessage' name='createNewOfferInput' />
      <output message='tns:createNewOfferResponseMessage' name='createNewOfferOutput' />
    </operation>
    <operation name='createNewSubscription'>
      <documentation>this function creates a subscription between a client and an offer A client can have several subscriptions to different offers but only one subscription to the same offer The clients is charged for each billing interval entered</documentation>
      <input message='tns:createNewSubscriptionRequestMessage' name='createNewSubscriptionInput' />
      <output message='tns:createNewSubscriptionResponseMessage' name='createNewSubscriptionOutput' />
    </operation>
    <operation name='createNewUrlOrEmailWebhook'>
      <documentation>with this call you can create a webhook to a url via the API</documentation>
      <input message='tns:createNewUrlOrEmailWebhookRequestMessage' name='createNewUrlOrEmailWebhookInput' />
      <output message='tns:createNewUrlOrEmailWebhookResponseMessage' name='createNewUrlOrEmailWebhookOutput' />
    </operation>
    <operation name='createPaymentWithTokenOrClient'>
      <documentation>creates a credit card payment from a given token if you re providing the client property the payment will be created and subsequently be added to the client</documentation>
      <input message='tns:createPaymentWithTokenOrClientRequestMessage' name='createPaymentWithTokenOrClientInput' />
      <output message='tns:createPaymentWithTokenOrClientResponseMessage' name='createPaymentWithTokenOrClientOutput' />
    </operation>
    <operation name='createPreauthorization'>
      <documentation>use either a token or an existing payment to authorize the given amount</documentation>
      <input message='tns:createPreauthorizationRequestMessage' name='createPreauthorizationInput' />
      <output message='tns:createPreauthorizationResponseMessage' name='createPreauthorizationOutput' />
    </operation>
    <operation name='createTransaction'>
      <documentation>you have to create at least either a token or a payment object before you can execute a transaction You get back a response object indicating whether a transaction was successful or not Note The transaction will not be charged at the bank if the test keys are implemented in your code Please use only the test credit cards mentioned in the documentation</documentation>
      <input message='tns:createTransactionRequestMessage' name='createTransactionInput' />
      <output message='tns:createTransactionResponseMessage' name='createTransactionOutput' />
    </operation>
    <operation name='exportClientList'>
      <documentation>this function returns CSV seperated by semicolons encapsulated by double quotes with a list of clients The following parameters can be used</documentation>
      <input message='tns:exportClientListRequestMessage' name='exportClientListInput' />
      <output message='tns:exportClientListResponseMessage' name='exportClientListOutput' />
    </operation>
    <operation name='listClients'>
      <documentation></documentation>
      <input message='tns:listClientsRequestMessage' name='listClientsInput' />
      <output message='tns:listClientsResponseMessage' name='listClientsOutput' />
    </operation>
    <operation name='listOffers'>
      <documentation>this function returns a JSON object with a list of offers In which order this list are returned depends on the optional parameter order The following parameters can be used</documentation>
      <input message='tns:listOffersRequestMessage' name='listOffersInput' />
      <output message='tns:listOffersResponseMessage' name='listOffersOutput' />
    </operation>
    <operation name='listPayments'>
      <documentation>returns a list of all payment objects</documentation>
      <input message='tns:listPaymentsRequestMessage' name='listPaymentsInput' />
      <output message='tns:listPaymentsResponseMessage' name='listPaymentsOutput' />
    </operation>
    <operation name='listPreauthorizations'>
      <documentation>this function returns a JSON object with a list of preauthorizations In which order this list is returned depends on the optional parameter order count offset created at</documentation>
      <input message='tns:listPreauthorizationsRequestMessage' name='listPreauthorizationsInput' />
      <output message='tns:listPreauthorizationsResponseMessage' name='listPreauthorizationsOutput' />
    </operation>
    <operation name='listRefunds'>
      <documentation>this function returns a list of existing transactions In which order this list is returned depends on the optional parameter order The following parameters can be used</documentation>
      <input message='tns:listRefundsRequestMessage' name='listRefundsInput' />
      <output message='tns:listRefundsResponseMessage' name='listRefundsOutput' />
    </operation>
    <operation name='listSubscriptions'>
      <documentation>this function returns a JSON object with a list of subscriptions In which order this list is returned depends on the optional parameter order The following parameters can be used</documentation>
      <input message='tns:listSubscriptionsRequestMessage' name='listSubscriptionsInput' />
      <output message='tns:listSubscriptionsResponseMessage' name='listSubscriptionsOutput' />
    </operation>
    <operation name='listTransactions'>
      <documentation>this function returns a JSON object with a list of transactions In which order this list is returned depends on the optional parameter order count offset created at</documentation>
      <input message='tns:listTransactionsRequestMessage' name='listTransactionsInput' />
      <output message='tns:listTransactionsResponseMessage' name='listTransactionsOutput' />
    </operation>
    <operation name='listWebhooks'>
      <documentation>this function returns a JSON object with a list of webhooks In which order this list is returned depends on the optional parameter order The following parameters can be used</documentation>
      <input message='tns:listWebhooksRequestMessage' name='listWebhooksInput' />
      <output message='tns:listWebhooksResponseMessage' name='listWebhooksOutput' />
    </operation>
    <operation name='offerDetails'>
      <documentation>getting detailed information about an offer requested with the offer ID</documentation>
      <input message='tns:offerDetailsRequestMessage' name='offerDetailsInput' />
      <output message='tns:offerDetailsResponseMessage' name='offerDetailsOutput' />
    </operation>
    <operation name='paymentDetails'>
      <documentation>returns data of a specific payment</documentation>
      <input message='tns:paymentDetailsRequestMessage' name='paymentDetailsInput' />
      <output message='tns:paymentDetailsResponseMessage' name='paymentDetailsOutput' />
    </operation>
    <operation name='preauthorizationDetails'>
      <documentation>returns data of a specific preauthorization</documentation>
      <input message='tns:preauthorizationDetailsRequestMessage' name='preauthorizationDetailsInput' />
      <output message='tns:preauthorizationDetailsResponseMessage' name='preauthorizationDetailsOutput' />
    </operation>
    <operation name='refundDetails'>
      <documentation>returns detailed informations of a specific refund</documentation>
      <input message='tns:refundDetailsRequestMessage' name='refundDetailsInput' />
      <output message='tns:refundDetailsResponseMessage' name='refundDetailsOutput' />
    </operation>
    <operation name='refundTransaction'>
      <documentation>this function refunds a transaction that has been created previously and was refunded in parts or wasn t refunded at all The inserted amount will be refunded to the credit card direct debit of the original transaction There will be some fees for the merchant for every refund</documentation>
      <input message='tns:refundTransactionRequestMessage' name='refundTransactionInput' />
      <output message='tns:refundTransactionResponseMessage' name='refundTransactionOutput' />
    </operation>
    <operation name='removeClient'>
      <documentation>this function deletes a client but your transactions aren t deleted</documentation>
      <input message='tns:removeClientRequestMessage' name='removeClientInput' />
      <output message='tns:removeClientResponseMessage' name='removeClientOutput' />
    </operation>
    <operation name='removeOffer'>
      <documentation>you only can delete an offer if no client is subscribed to this offer</documentation>
      <input message='tns:removeOfferRequestMessage' name='removeOfferInput' />
      <output message='tns:removeOfferResponseMessage' name='removeOfferOutput' />
    </operation>
    <operation name='removePayment'>
      <documentation></documentation>
      <input message='tns:removePaymentRequestMessage' name='removePaymentInput' />
      <output message='tns:removePaymentResponseMessage' name='removePaymentOutput' />
    </operation>
    <operation name='removePreauthorizations'>
      <documentation>this function deletes a preauthorization</documentation>
      <input message='tns:removePreauthorizationsRequestMessage' name='removePreauthorizationsInput' />
      <output message='tns:removePreauthorizationsResponseMessage' name='removePreauthorizationsOutput' />
    </operation>
    <operation name='removeSubscription'>
      <documentation>this function removes an existing subscription If you set the attribute cancel at period end parameter to the value true the subscription will remain active until the end of the period The subscription will not be renewed again If the value is set to false it is directly terminated but pending transactions will still be charged</documentation>
      <input message='tns:removeSubscriptionRequestMessage' name='removeSubscriptionInput' />
      <output message='tns:removeSubscriptionResponseMessage' name='removeSubscriptionOutput' />
    </operation>
    <operation name='removeWebhook'>
      <documentation>all pending calls to a webhook are deleted as well as soon as you delete the webhook itself</documentation>
      <input message='tns:removeWebhookRequestMessage' name='removeWebhookInput' />
      <output message='tns:removeWebhookResponseMessage' name='removeWebhookOutput' />
    </operation>
    <operation name='subscriptionDetails'>
      <documentation></documentation>
      <input message='tns:subscriptionDetailsRequestMessage' name='subscriptionDetailsInput' />
      <output message='tns:subscriptionDetailsResponseMessage' name='subscriptionDetailsOutput' />
    </operation>
    <operation name='transactionDetails'>
      <documentation>to receive the details of an existing transaction call the unique transaction ID You can find the ID in the response of the previous request The return is a refund object with the information of the used payment client and transaction attributes</documentation>
      <input message='tns:transactionDetailsRequestMessage' name='transactionDetailsInput' />
      <output message='tns:transactionDetailsResponseMessage' name='transactionDetailsOutput' />
    </operation>
    <operation name='updateClient'>
      <documentation>this function updates the data of a client To change only a specific attribute you can set this attribute in the update request All other attributes that shouldn t be edited aren t inserted You can only edit the description email and credit card The subscription can t be changed by updating the client data This has to be done in the subscription call</documentation>
      <input message='tns:updateClientRequestMessage' name='updateClientInput' />
      <output message='tns:updateClientResponseMessage' name='updateClientOutput' />
    </operation>
    <operation name='updateOffer'>
      <documentation>updates the offer Only the name can be changed all other attributes cannot be edited</documentation>
      <input message='tns:updateOfferRequestMessage' name='updateOfferInput' />
      <output message='tns:updateOfferResponseMessage' name='updateOfferOutput' />
    </operation>
    <operation name='updateSubscription'>
      <documentation>this function updates the subscription of a client You can change e g the cancel at period end attribute to terminate a subscription at a special point of time Or you can assign another offer subscription offer new offer id</documentation>
      <input message='tns:updateSubscriptionRequestMessage' name='updateSubscriptionInput' />
      <output message='tns:updateSubscriptionResponseMessage' name='updateSubscriptionOutput' />
    </operation>
    <operation name='updateWebhook'>
      <documentation>updates the webhook You can change the url email and the event types</documentation>
      <input message='tns:updateWebhookRequestMessage' name='updateWebhookInput' />
      <output message='tns:updateWebhookResponseMessage' name='updateWebhookOutput' />
    </operation>
    <operation name='webhookDetails'>
      <documentation>getting detailed information about a webhook requested with the webhook id</documentation>
      <input message='tns:webhookDetailsRequestMessage' name='webhookDetailsInput' />
      <output message='tns:webhookDetailsResponseMessage' name='webhookDetailsOutput' />
    </operation>
  </portType>
  <binding name='paymillGmbhBinding' type='tns:paymillGmbhPortType'>
    <operation name='clientDetails'>
      <soap12:operation soapAction='http://clientDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewClient'>
      <soap12:operation soapAction='http://createNewClient' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewOffer'>
      <soap12:operation soapAction='http://createNewOffer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewSubscription'>
      <soap12:operation soapAction='http://createNewSubscription' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createNewUrlOrEmailWebhook'>
      <soap12:operation soapAction='http://createNewUrlOrEmailWebhook' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createPaymentWithTokenOrClient'>
      <soap12:operation soapAction='http://createPaymentWithTokenOrClient' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createPreauthorization'>
      <soap12:operation soapAction='http://createPreauthorization' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createTransaction'>
      <soap12:operation soapAction='http://createTransaction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='exportClientList'>
      <soap12:operation soapAction='http://exportClientList' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listClients'>
      <soap12:operation soapAction='http://listClients' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listOffers'>
      <soap12:operation soapAction='http://listOffers' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listPayments'>
      <soap12:operation soapAction='http://listPayments' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listPreauthorizations'>
      <soap12:operation soapAction='http://listPreauthorizations' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listRefunds'>
      <soap12:operation soapAction='http://listRefunds' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listSubscriptions'>
      <soap12:operation soapAction='http://listSubscriptions' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listTransactions'>
      <soap12:operation soapAction='http://listTransactions' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listWebhooks'>
      <soap12:operation soapAction='http://listWebhooks' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='offerDetails'>
      <soap12:operation soapAction='http://offerDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='paymentDetails'>
      <soap12:operation soapAction='http://paymentDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='preauthorizationDetails'>
      <soap12:operation soapAction='http://preauthorizationDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='refundDetails'>
      <soap12:operation soapAction='http://refundDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='refundTransaction'>
      <soap12:operation soapAction='http://refundTransaction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removeClient'>
      <soap12:operation soapAction='http://removeClient' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removeOffer'>
      <soap12:operation soapAction='http://removeOffer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removePayment'>
      <soap12:operation soapAction='http://removePayment' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removePreauthorizations'>
      <soap12:operation soapAction='http://removePreauthorizations' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removeSubscription'>
      <soap12:operation soapAction='http://removeSubscription' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='removeWebhook'>
      <soap12:operation soapAction='http://removeWebhook' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='subscriptionDetails'>
      <soap12:operation soapAction='http://subscriptionDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='transactionDetails'>
      <soap12:operation soapAction='http://transactionDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateClient'>
      <soap12:operation soapAction='http://updateClient' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateOffer'>
      <soap12:operation soapAction='http://updateOffer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateSubscription'>
      <soap12:operation soapAction='http://updateSubscription' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateWebhook'>
      <soap12:operation soapAction='http://updateWebhook' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='webhookDetails'>
      <soap12:operation soapAction='http://webhookDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='paymillGmbh'>
    <documentation>Payments made easy Secure REST API Full integration with your website Simple pricing Accept multiple currencies Fast and local support Fast account activation</documentation>
    <port name='paymillGmbhPort' binding='tns:paymillGmbhBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://paymillGmbh' />
    </port>
  </service>
</definitions>