<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/topicTagging/' name='topicTagging' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/topicTagging/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/topicTagging/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/topicTagging/'>
      <xsd:element name='generateGetParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='generateGetResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result_msg' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='author' type='xsd:string' minOccurs='0' />
            <xsd:element name='topic' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='system' type='xsd:int' minOccurs='0' />
                  <xsd:element name='biology' type='xsd:int' minOccurs='0' />
                  <xsd:element name='software' type='xsd:int' minOccurs='0' />
                  <xsd:element name='data' type='xsd:int' minOccurs='0' />
                  <xsd:element name='computer_science' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='machine' type='xsd:int' minOccurs='0' />
                  <xsd:element name='technology' type='xsd:int' minOccurs='0' />
                  <xsd:element name='engineering' type='xsd:int' minOccurs='0' />
                  <xsd:element name='knowledge' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='result_code' type='xsd:int' minOccurs='0' />
            <xsd:element name='keyword' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='compute' type='xsd:int' minOccurs='0' />
                  <xsd:element name='computer' type='xsd:int' minOccurs='0' />
                  <xsd:element name='study' type='xsd:int' minOccurs='0' />
                  <xsd:element name='gene' type='xsd:int' minOccurs='0' />
                  <xsd:element name='science' type='xsd:int' minOccurs='0' />
                  <xsd:element name='alternate' type='xsd:int' minOccurs='0' />
                  <xsd:element name='biological' type='xsd:int' minOccurs='0' />
                  <xsd:element name='information' type='xsd:int' minOccurs='0' />
                  <xsd:element name='cell' type='xsd:int' minOccurs='0' />
                  <xsd:element name='structure' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='version' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='generatePostResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result_msg' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='author' type='xsd:string' minOccurs='0' />
            <xsd:element name='topic' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='system' type='xsd:int' minOccurs='0' />
                  <xsd:element name='biology' type='xsd:int' minOccurs='0' />
                  <xsd:element name='software' type='xsd:int' minOccurs='0' />
                  <xsd:element name='data' type='xsd:int' minOccurs='0' />
                  <xsd:element name='computer_science' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='machine' type='xsd:int' minOccurs='0' />
                  <xsd:element name='technology' type='xsd:int' minOccurs='0' />
                  <xsd:element name='engineering' type='xsd:int' minOccurs='0' />
                  <xsd:element name='knowledge' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='result_code' type='xsd:int' minOccurs='0' />
            <xsd:element name='keyword' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='compute' type='xsd:int' minOccurs='0' />
                  <xsd:element name='computer' type='xsd:int' minOccurs='0' />
                  <xsd:element name='study' type='xsd:int' minOccurs='0' />
                  <xsd:element name='gene' type='xsd:int' minOccurs='0' />
                  <xsd:element name='science' type='xsd:int' minOccurs='0' />
                  <xsd:element name='alternate' type='xsd:int' minOccurs='0' />
                  <xsd:element name='biological' type='xsd:int' minOccurs='0' />
                  <xsd:element name='information' type='xsd:int' minOccurs='0' />
                  <xsd:element name='cell' type='xsd:int' minOccurs='0' />
                  <xsd:element name='structure' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='version' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='generateGetRequestMessage'>
    <part name='parameters' element='tns:generateGetParameters' />
  </message>
  <message name='generateGetResponseMessage'>
    <part name='response' element='tns:generateGetResponse' />
  </message>
  <message name='generatePostRequestMessage' />
  <message name='generatePostResponseMessage'>
    <part name='response' element='tns:generatePostResponse' />
  </message>
  <portType name='topicTaggingPortType'>
    <operation name='generateGet'>
      <documentation>detect and generate human like topics to the given text</documentation>
      <input message='tns:generateGetRequestMessage' name='generateGetInput' />
      <output message='tns:generateGetResponseMessage' name='generateGetOutput' />
    </operation>
    <operation name='generatePost'>
      <documentation>detect and generate human like topics to the given text</documentation>
      <input message='tns:generatePostRequestMessage' name='generatePostInput' />
      <output message='tns:generatePostResponseMessage' name='generatePostOutput' />
    </operation>
  </portType>
  <binding name='topicTaggingBinding' type='tns:topicTaggingPortType'>
    <operation name='generateGet'>
      <soap12:operation soapAction='http://generateGet' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='generatePost'>
      <soap12:operation soapAction='http://generatePost' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='topicTagging'>
    <documentation>automatically generate topics and keywords for articles and blogs</documentation>
    <port name='topicTaggingPort' binding='tns:topicTaggingBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://topicTagging' />
    </port>
  </service>
</definitions>