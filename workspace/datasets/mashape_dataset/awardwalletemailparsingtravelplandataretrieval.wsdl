<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/awardwalletEmailParsingTravelPlanDataRetrieval/' name='awardwalletEmailParsingTravelPlanDataRetrieval' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/awardwalletEmailParsingTravelPlanDataRetrieval/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/awardwalletEmailParsingTravelPlanDataRetrieval/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/awardwalletEmailParsingTravelPlanDataRetrieval/'>
      <xsd:element name='parseemailParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='synchronous' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='parseemailResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='fromProvider' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='providerCode' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userData' type='xsd:string' minOccurs='0' />
            <xsd:element name='itineraries' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='providerDetails' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='confirmationNumber' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='code' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='travelers' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='fullName' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='segments' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='bookingClass' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='arrival' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='localDateTime' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='address' minOccurs='0'>
                                <xsd:complexType>
                                  <xsd:sequence minOccurs='1' maxOccurs='1'>
                                    <xsd:element name='lng' type='xsd:decimal' minOccurs='0' />
                                    <xsd:element name='city' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='stateName' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='timezone' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='postalCode' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='text' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='countryName' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='airportCode' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='addressLine' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='lat' type='xsd:decimal' minOccurs='0' />
                                  </xsd:sequence>
                                </xsd:complexType>
                              </xsd:element>
                              <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='airportCode' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='cabin' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='departure' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='localDateTime' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='address' minOccurs='0'>
                                <xsd:complexType>
                                  <xsd:sequence minOccurs='1' maxOccurs='1'>
                                    <xsd:element name='lng' type='xsd:decimal' minOccurs='0' />
                                    <xsd:element name='city' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='stateName' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='timezone' type='xsd:int' minOccurs='0' />
                                    <xsd:element name='text' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='countryName' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='airportCode' type='xsd:normalizedString' minOccurs='0' />
                                    <xsd:element name='addressLine' type='xsd:string' minOccurs='0' />
                                    <xsd:element name='lat' type='xsd:decimal' minOccurs='0' />
                                  </xsd:sequence>
                                </xsd:complexType>
                              </xsd:element>
                              <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='airportCode' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='seats' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='airlineName' type='xsd:string' minOccurs='0' />
                        <xsd:element name='flightNumber' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='email' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='info' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='subject' type='xsd:string' minOccurs='0' />
                  <xsd:element name='from' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='to' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='parseemailRequestMessage'>
    <part name='parameters' element='tns:parseemailParameters' />
  </message>
  <message name='parseemailResponseMessage'>
    <part name='response' element='tns:parseemailResponse' />
  </message>
  <portType name='awardwalletEmailParsingTravelPlanDataRetrievalPortType'>
    <operation name='parseemail'>
      <documentation>parse itinerary and loyalty data information from email</documentation>
      <input message='tns:parseemailRequestMessage' name='parseemailInput' />
      <output message='tns:parseemailResponseMessage' name='parseemailOutput' />
    </operation>
  </portType>
  <binding name='awardwalletEmailParsingTravelPlanDataRetrievalBinding' type='tns:awardwalletEmailParsingTravelPlanDataRetrievalPortType'>
    <operation name='parseemail'>
      <soap12:operation soapAction='http://parseemail' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='awardwalletEmailParsingTravelPlanDataRetrieval'>
    <documentation>our email parsing API is designed to retrieve travel itineraries from an email So we can receive a raw email with some type of itinerary such a hotel reservation of flight reservation we will extract all the relevant information and return it in a</documentation>
    <port name='awardwalletEmailParsingTravelPlanDataRetrievalPort' binding='tns:awardwalletEmailParsingTravelPlanDataRetrievalBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://awardwalletEmailParsingTravelPlanDataRetrieval' />
    </port>
  </service>
</definitions>