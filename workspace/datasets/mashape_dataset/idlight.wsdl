<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/idlight/' name='idlight' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/idlight/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/idlight/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/idlight/'>
      <xsd:element name='profileLookUpParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='cb' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='profileLookUpResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='emails' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='addresses' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='poBox' type='xsd:string' minOccurs='0' />
                  <xsd:element name='country' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='code' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='postalCode' type='xsd:string' minOccurs='0' />
                  <xsd:element name='locality' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='extendedAddress' type='xsd:string' minOccurs='0' />
                  <xsd:element name='streetAddresses' type='xsd:string' maxOccurs='unbounded' />
                  <xsd:element name='region' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='code' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='notes' type='xsd:string' minOccurs='0' />
            <xsd:element name='sources' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='rel' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='gender' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='name' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='middle' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='last' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='first' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='full' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='organizations' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='unit' type='xsd:string' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='phones' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='number' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='links' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='rel' type='xsd:string' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='nicknames' type='xsd:string' minOccurs='0' />
            <xsd:element name='photos' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='profileLookUpRequestMessage'>
    <part name='parameters' element='tns:profileLookUpParameters' />
  </message>
  <message name='profileLookUpResponseMessage'>
    <part name='response' element='tns:profileLookUpResponse' />
  </message>
  <portType name='idlightPortType'>
    <operation name='profileLookUp'>
      <documentation>look up a public profile with a search term that is either an email an HTTP S URL or a Twitter handle like idlightapp Returns an application json representation of the profile Use the HTTP header Accept application xml for the XML representation or Accept application poco json and Accept application poco xml for the Portable Contact formats</documentation>
      <input message='tns:profileLookUpRequestMessage' name='profileLookUpInput' />
      <output message='tns:profileLookUpResponseMessage' name='profileLookUpOutput' />
    </operation>
  </portType>
  <binding name='idlightBinding' type='tns:idlightPortType'>
    <operation name='profileLookUp'>
      <soap12:operation soapAction='http://profileLookUp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='idlight'>
    <documentation>public identity lookup service IDlight uses established and emerging standards like Webfinger XRD and hCard to retrieve public profiles and render them under a unified format either proprietary to IDlight or compliant to Portable Contacts XML aficionados can find the WADL here http api idlight net wadl xml The support forum is there http support idlight net</documentation>
    <port name='idlightPort' binding='tns:idlightBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://idlight' />
    </port>
  </service>
</definitions>