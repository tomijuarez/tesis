<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/geokoala/' name='geokoala' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/geokoala/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/geokoala/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/geokoala/'>
      <xsd:element name='createEventsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createEventsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='features' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='geometry' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='coordinates' type='xsd:decimal' maxOccurs='unbounded' />
                        <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='properties' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='dateTime' type='xsd:string' minOccurs='0' />
                        <xsd:element name='inclination' type='xsd:int' minOccurs='0' />
                        <xsd:element name='thumbnail' type='xsd:string' minOccurs='0' />
                        <xsd:element name='address' type='xsd:string' minOccurs='0' />
                        <xsd:element name='distance' type='xsd:int' minOccurs='0' />
                        <xsd:element name='description' type='xsd:int' maxOccurs='unbounded' />
                        <xsd:element name='azimuth' type='xsd:int' minOccurs='0' />
                        <xsd:element name='uuid' type='xsd:string' minOccurs='0' />
                        <xsd:element name='url' type='xsd:string' minOccurs='0' />
                        <xsd:element name='geoDistance' type='xsd:int' minOccurs='0' />
                        <xsd:element name='attachment' type='xsd:string' minOccurs='0' />
                        <xsd:element name='phone' type='xsd:string' minOccurs='0' />
                        <xsd:element name='appKey' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAnEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAnEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deletesAllEventsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deletesAllEventsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAccountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='snippet' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='icon' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='indexKey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='description' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='logo' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='styleUrl' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='username' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAnEventParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='format' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAnEventResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getEventsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='altitude' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='enddate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='format' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='ignoreotherparams' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='latitude' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='longitude' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='maxnumberofpois' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='pagenum' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='pagesize' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='radius' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='startdate' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getEventsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='features' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='geometry' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='coordinates' type='xsd:decimal' maxOccurs='unbounded' />
                        <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='properties' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='dateTime' type='xsd:string' minOccurs='0' />
                        <xsd:element name='inclination' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='thumbnail' type='xsd:string' minOccurs='0' />
                        <xsd:element name='address' type='xsd:string' minOccurs='0' />
                        <xsd:element name='distance' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='description' type='xsd:int' maxOccurs='unbounded' />
                        <xsd:element name='azimuth' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='uuid' type='xsd:string' minOccurs='0' />
                        <xsd:element name='url' type='xsd:string' minOccurs='0' />
                        <xsd:element name='geoDistance' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='attachment' type='xsd:string' minOccurs='0' />
                        <xsd:element name='phone' type='xsd:string' minOccurs='0' />
                        <xsd:element name='appKey' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTrackRouteEventsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='enddate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='format' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='startdate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='uuid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTrackRouteEventsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getYourAppkeyResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='appKey' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='username' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAccountParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appkey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAccountResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='snippet' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='icon' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='indexKey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='description' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='logo' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='styleUrl' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='username' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='createEventsRequestMessage'>
    <part name='parameters' element='tns:createEventsParameters' />
  </message>
  <message name='createEventsResponseMessage'>
    <part name='response' element='tns:createEventsResponse' />
  </message>
  <message name='deleteAnEventRequestMessage'>
    <part name='parameters' element='tns:deleteAnEventParameters' />
  </message>
  <message name='deleteAnEventResponseMessage'>
    <part name='response' element='tns:deleteAnEventResponse' />
  </message>
  <message name='deletesAllEventsRequestMessage'>
    <part name='parameters' element='tns:deletesAllEventsParameters' />
  </message>
  <message name='deletesAllEventsResponseMessage'>
    <part name='response' element='tns:deletesAllEventsResponse' />
  </message>
  <message name='getAccountRequestMessage' />
  <message name='getAccountResponseMessage'>
    <part name='response' element='tns:getAccountResponse' />
  </message>
  <message name='getAnEventRequestMessage'>
    <part name='parameters' element='tns:getAnEventParameters' />
  </message>
  <message name='getAnEventResponseMessage'>
    <part name='response' element='tns:getAnEventResponse' />
  </message>
  <message name='getEventsRequestMessage'>
    <part name='parameters' element='tns:getEventsParameters' />
  </message>
  <message name='getEventsResponseMessage'>
    <part name='response' element='tns:getEventsResponse' />
  </message>
  <message name='getTrackRouteEventsRequestMessage'>
    <part name='parameters' element='tns:getTrackRouteEventsParameters' />
  </message>
  <message name='getTrackRouteEventsResponseMessage'>
    <part name='response' element='tns:getTrackRouteEventsResponse' />
  </message>
  <message name='getYourAppkeyRequestMessage' />
  <message name='getYourAppkeyResponseMessage'>
    <part name='response' element='tns:getYourAppkeyResponse' />
  </message>
  <message name='updateAccountRequestMessage'>
    <part name='parameters' element='tns:updateAccountParameters' />
  </message>
  <message name='updateAccountResponseMessage'>
    <part name='response' element='tns:updateAccountResponse' />
  </message>
  <portType name='geokoalaPortType'>
    <operation name='createEvents'>
      <documentation>post an Event using GeoJson FeatureCollection Type</documentation>
      <input message='tns:createEventsRequestMessage' name='createEventsInput' />
      <output message='tns:createEventsResponseMessage' name='createEventsOutput' />
    </operation>
    <operation name='deleteAnEvent'>
      <documentation></documentation>
      <input message='tns:deleteAnEventRequestMessage' name='deleteAnEventInput' />
      <output message='tns:deleteAnEventResponseMessage' name='deleteAnEventOutput' />
    </operation>
    <operation name='deletesAllEvents'>
      <documentation></documentation>
      <input message='tns:deletesAllEventsRequestMessage' name='deletesAllEventsInput' />
      <output message='tns:deletesAllEventsResponseMessage' name='deletesAllEventsOutput' />
    </operation>
    <operation name='getAccount'>
      <documentation>get all accounts for the authenticated user</documentation>
      <input message='tns:getAccountRequestMessage' name='getAccountInput' />
      <output message='tns:getAccountResponseMessage' name='getAccountOutput' />
    </operation>
    <operation name='getAnEvent'>
      <documentation>get an event by id</documentation>
      <input message='tns:getAnEventRequestMessage' name='getAnEventInput' />
      <output message='tns:getAnEventResponseMessage' name='getAnEventOutput' />
    </operation>
    <operation name='getEvents'>
      <documentation></documentation>
      <input message='tns:getEventsRequestMessage' name='getEventsInput' />
      <output message='tns:getEventsResponseMessage' name='getEventsOutput' />
    </operation>
    <operation name='getTrackRouteEvents'>
      <documentation></documentation>
      <input message='tns:getTrackRouteEventsRequestMessage' name='getTrackRouteEventsInput' />
      <output message='tns:getTrackRouteEventsResponseMessage' name='getTrackRouteEventsOutput' />
    </operation>
    <operation name='getYourAppkey'>
      <documentation>obtain an AppKey to use Please remember the password if you forget your password you must delete Account and get a new one</documentation>
      <input message='tns:getYourAppkeyRequestMessage' name='getYourAppkeyInput' />
      <output message='tns:getYourAppkeyResponseMessage' name='getYourAppkeyOutput' />
    </operation>
    <operation name='updateAccount'>
      <documentation>this PUT accepts a single JSON representation of an Account</documentation>
      <input message='tns:updateAccountRequestMessage' name='updateAccountInput' />
      <output message='tns:updateAccountResponseMessage' name='updateAccountOutput' />
    </operation>
  </portType>
  <binding name='geokoalaBinding' type='tns:geokoalaPortType'>
    <operation name='createEvents'>
      <soap12:operation soapAction='http://createEvents' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAnEvent'>
      <soap12:operation soapAction='http://deleteAnEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deletesAllEvents'>
      <soap12:operation soapAction='http://deletesAllEvents' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAccount'>
      <soap12:operation soapAction='http://getAccount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAnEvent'>
      <soap12:operation soapAction='http://getAnEvent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getEvents'>
      <soap12:operation soapAction='http://getEvents' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTrackRouteEvents'>
      <soap12:operation soapAction='http://getTrackRouteEvents' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getYourAppkey'>
      <soap12:operation soapAction='http://getYourAppkey' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateAccount'>
      <soap12:operation soapAction='http://updateAccount' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='geokoala'>
    <documentation>publish to Augmented Reality browsers and major Geo Clients GoogleEarth Google Maps GPX clients Our HTTP Responses can be returned in KML GeoJson ARML Wikitude Mixare GPX track route by simply switching a query parameter on a GET Request We store in MongoDB for Speed Scale Its free its awesome try it out and spread the word</documentation>
    <port name='geokoalaPort' binding='tns:geokoalaBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://geokoala' />
    </port>
  </service>
</definitions>