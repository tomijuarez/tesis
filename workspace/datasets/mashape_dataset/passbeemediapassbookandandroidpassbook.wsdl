<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/passbeemediaPassbookAndAndroidPassbook/' name='passbeemediaPassbookAndAndroidPassbook' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/passbeemediaPassbookAndAndroidPassbook/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/passbeemediaPassbookAndAndroidPassbook/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/passbeemediaPassbookAndAndroidPassbook/'>
      <xsd:element name='createpassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='shortUrl' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='shortUrlUpdate' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createwalletticketParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createwalletticketResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='code' type='xsd:int' minOccurs='0' />
            <xsd:element name='description' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='ticketId' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='gcmdeletepassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='serialNumber' type='xsd:int' minOccurs='0' />
            <xsd:element name='registrationId' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='passTypeIdentifier' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='gcmregisterpassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='serialNumber' type='xsd:int' minOccurs='0' />
            <xsd:element name='registrationId' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='passTypeIdentifier' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUpdatedPassParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='passtypeidentifier' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='serialno' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUpdatedPassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpassParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='passuid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpassstaticsbypassidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='Added' type='xsd:int' minOccurs='0' />
            <xsd:element name='Views' type='xsd:int' minOccurs='0' />
            <xsd:element name='Deleted' type='xsd:int' minOccurs='0' />
            <xsd:element name='PassId' type='xsd:int' minOccurs='0' />
            <xsd:element name='Shared' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpassstaticsbyuidParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='fromdate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='todate' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpassstaticsbyuidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpasstemplateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='templateid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpasstemplateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='Timezone' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='AlternativeText' type='xsd:int' minOccurs='0' />
            <xsd:element name='DataColor' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='NeedPassword' type='xsd:int' minOccurs='0' />
            <xsd:element name='thumb' type='xsd:string' minOccurs='0' />
            <xsd:element name='OrgName' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='UpdatePassword' type='xsd:string' minOccurs='0' />
            <xsd:element name='UserEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='SerialType' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='EncodingFormat' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='Desciption' type='xsd:string' minOccurs='0' />
            <xsd:element name='PassItems' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='IsDataChange' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='IsLabelChange' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='LabelValue' type='xsd:string' minOccurs='0' />
                  <xsd:element name='DataValue' type='xsd:string' minOccurs='0' />
                  <xsd:element name='Currency' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='ItemType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='LabelType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='PassData' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='DataType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='ItemName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='ItemNotification' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='QuantityRestriction' type='xsd:int' minOccurs='0' />
            <xsd:element name='TemplateName' type='xsd:string' minOccurs='0' />
            <xsd:element name='savePass' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='LabelColor' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='PassType' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='QuantityRestrictionNumber' type='xsd:int' minOccurs='0' />
            <xsd:element name='Background' type='xsd:string' minOccurs='0' />
            <xsd:element name='Locations' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='altitude' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='relevantText' type='xsd:string' minOccurs='0' />
                  <xsd:element name='address' type='xsd:string' minOccurs='0' />
                  <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='LogoText' type='xsd:string' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='BarcodeEncodedText' type='xsd:int' minOccurs='0' />
            <xsd:element name='IssuePassword' type='xsd:string' minOccurs='0' />
            <xsd:element name='Logo' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='Strip' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='SerialNumber' type='xsd:int' minOccurs='0' />
            <xsd:element name='BarcodeMessageType' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='StopDate' type='xsd:string' minOccurs='0' />
            <xsd:element name='LockDate' type='xsd:string' minOccurs='0' />
            <xsd:element name='DateRestriction' type='xsd:int' minOccurs='0' />
            <xsd:element name='Icon' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='LinkType' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='BarcodeType' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='NeedUpdatePassword' type='xsd:int' minOccurs='0' />
            <xsd:element name='BackgroundColor' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='Certificate' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpasstemplatebyuidParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getpasstemplatebyuidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getshareimageParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='serialnumber' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getshareimageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getupdatedserailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='devicelibraryidentifier' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='passtypeidentifier' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='regis' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getupdatedserailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lastUpdated' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='serialNumbers' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserbyemailParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='basencodedemail' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserbyemailResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='firstname' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='password' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='apikey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userphone' type='xsd:int' minOccurs='0' />
            <xsd:element name='billingPlan' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='isActive' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userId' type='xsd:int' minOccurs='0' />
            <xsd:element name='lastname' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserbyuidParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserbyuidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='firstname' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='password' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='apikey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userphone' type='xsd:int' minOccurs='0' />
            <xsd:element name='billingPlan' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='isActive' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userId' type='xsd:int' minOccurs='0' />
            <xsd:element name='lastname' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserpassesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='from' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='to' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserpassesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserpasstemplatesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserpasstemplatesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='templates' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='templateName' type='xsd:string' minOccurs='0' />
                  <xsd:element name='templateId' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserwalletticketsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getuserwalletticketsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='tickets' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getwalletticketParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='ticketid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getwalletticketResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loginuserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='basencodedemail' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='password' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loginuserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='firstname' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='password' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='apikey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userphone' type='xsd:int' minOccurs='0' />
            <xsd:element name='billingPlan' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='isActive' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userId' type='xsd:int' minOccurs='0' />
            <xsd:element name='lastname' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registerDeviceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='devicelibraryidentifier' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='devices' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='passtypeidentifier' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='regis' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='serialnumber' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='version' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registerDeviceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registeruserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='basencodedemail' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registeruserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='firstname' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='password' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='apikey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userphone' type='xsd:int' minOccurs='0' />
            <xsd:element name='billingPlan' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='isActive' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userId' type='xsd:int' minOccurs='0' />
            <xsd:element name='lastname' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updatePassItemsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uid' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='passId' type='xsd:int' minOccurs='0' />
            <xsd:element name='items' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='itemId' type='xsd:int' minOccurs='0' />
                  <xsd:element name='label' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateexpiredcouponsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='Version' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='_Build' type='xsd:int' minOccurs='0' />
                  <xsd:element name='_Minor' type='xsd:int' minOccurs='0' />
                  <xsd:element name='_Major' type='xsd:int' minOccurs='0' />
                  <xsd:element name='_Revision' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='Content' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='RequestMessage' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='ReasonPhrase' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='StatusCode' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateuserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='userid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateuserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='firstname' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='password' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='apikey' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userphone' type='xsd:int' minOccurs='0' />
            <xsd:element name='billingPlan' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userEmail' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='isActive' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='message' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='userId' type='xsd:int' minOccurs='0' />
            <xsd:element name='lastname' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='createpassRequestMessage' />
  <message name='createpassResponseMessage'>
    <part name='response' element='tns:createpassResponse' />
  </message>
  <message name='createwalletticketRequestMessage'>
    <part name='parameters' element='tns:createwalletticketParameters' />
  </message>
  <message name='createwalletticketResponseMessage'>
    <part name='response' element='tns:createwalletticketResponse' />
  </message>
  <message name='gcmdeletepassRequestMessage' />
  <message name='gcmdeletepassResponseMessage'>
    <part name='response' element='tns:gcmdeletepassResponse' />
  </message>
  <message name='gcmregisterpassRequestMessage' />
  <message name='gcmregisterpassResponseMessage'>
    <part name='response' element='tns:gcmregisterpassResponse' />
  </message>
  <message name='getUpdatedPassRequestMessage'>
    <part name='parameters' element='tns:getUpdatedPassParameters' />
  </message>
  <message name='getUpdatedPassResponseMessage'>
    <part name='response' element='tns:getUpdatedPassResponse' />
  </message>
  <message name='getpassRequestMessage'>
    <part name='parameters' element='tns:getpassParameters' />
  </message>
  <message name='getpassResponseMessage'>
    <part name='response' element='tns:getpassResponse' />
  </message>
  <message name='getpassstaticsbypassidRequestMessage' />
  <message name='getpassstaticsbypassidResponseMessage'>
    <part name='response' element='tns:getpassstaticsbypassidResponse' />
  </message>
  <message name='getpassstaticsbyuidRequestMessage'>
    <part name='parameters' element='tns:getpassstaticsbyuidParameters' />
  </message>
  <message name='getpassstaticsbyuidResponseMessage'>
    <part name='response' element='tns:getpassstaticsbyuidResponse' />
  </message>
  <message name='getpasstemplateRequestMessage'>
    <part name='parameters' element='tns:getpasstemplateParameters' />
  </message>
  <message name='getpasstemplateResponseMessage'>
    <part name='response' element='tns:getpasstemplateResponse' />
  </message>
  <message name='getpasstemplatebyuidRequestMessage'>
    <part name='parameters' element='tns:getpasstemplatebyuidParameters' />
  </message>
  <message name='getpasstemplatebyuidResponseMessage'>
    <part name='response' element='tns:getpasstemplatebyuidResponse' />
  </message>
  <message name='getshareimageRequestMessage'>
    <part name='parameters' element='tns:getshareimageParameters' />
  </message>
  <message name='getshareimageResponseMessage'>
    <part name='response' element='tns:getshareimageResponse' />
  </message>
  <message name='getupdatedserailsRequestMessage'>
    <part name='parameters' element='tns:getupdatedserailsParameters' />
  </message>
  <message name='getupdatedserailsResponseMessage'>
    <part name='response' element='tns:getupdatedserailsResponse' />
  </message>
  <message name='getuserbyemailRequestMessage'>
    <part name='parameters' element='tns:getuserbyemailParameters' />
  </message>
  <message name='getuserbyemailResponseMessage'>
    <part name='response' element='tns:getuserbyemailResponse' />
  </message>
  <message name='getuserbyuidRequestMessage'>
    <part name='parameters' element='tns:getuserbyuidParameters' />
  </message>
  <message name='getuserbyuidResponseMessage'>
    <part name='response' element='tns:getuserbyuidResponse' />
  </message>
  <message name='getuserpassesRequestMessage'>
    <part name='parameters' element='tns:getuserpassesParameters' />
  </message>
  <message name='getuserpassesResponseMessage'>
    <part name='response' element='tns:getuserpassesResponse' />
  </message>
  <message name='getuserpasstemplatesRequestMessage'>
    <part name='parameters' element='tns:getuserpasstemplatesParameters' />
  </message>
  <message name='getuserpasstemplatesResponseMessage'>
    <part name='response' element='tns:getuserpasstemplatesResponse' />
  </message>
  <message name='getuserwalletticketsRequestMessage'>
    <part name='parameters' element='tns:getuserwalletticketsParameters' />
  </message>
  <message name='getuserwalletticketsResponseMessage'>
    <part name='response' element='tns:getuserwalletticketsResponse' />
  </message>
  <message name='getwalletticketRequestMessage'>
    <part name='parameters' element='tns:getwalletticketParameters' />
  </message>
  <message name='getwalletticketResponseMessage'>
    <part name='response' element='tns:getwalletticketResponse' />
  </message>
  <message name='loginuserRequestMessage'>
    <part name='parameters' element='tns:loginuserParameters' />
  </message>
  <message name='loginuserResponseMessage'>
    <part name='response' element='tns:loginuserResponse' />
  </message>
  <message name='registerDeviceRequestMessage'>
    <part name='parameters' element='tns:registerDeviceParameters' />
  </message>
  <message name='registerDeviceResponseMessage'>
    <part name='response' element='tns:registerDeviceResponse' />
  </message>
  <message name='registeruserRequestMessage'>
    <part name='parameters' element='tns:registeruserParameters' />
  </message>
  <message name='registeruserResponseMessage'>
    <part name='response' element='tns:registeruserResponse' />
  </message>
  <message name='updatePassItemsRequestMessage' />
  <message name='updatePassItemsResponseMessage'>
    <part name='response' element='tns:updatePassItemsResponse' />
  </message>
  <message name='updateexpiredcouponsRequestMessage' />
  <message name='updateexpiredcouponsResponseMessage'>
    <part name='response' element='tns:updateexpiredcouponsResponse' />
  </message>
  <message name='updateuserRequestMessage'>
    <part name='parameters' element='tns:updateuserParameters' />
  </message>
  <message name='updateuserResponseMessage'>
    <part name='response' element='tns:updateuserResponse' />
  </message>
  <portType name='passbeemediaPassbookAndAndroidPassbookPortType'>
    <operation name='createpass'>
      <documentation>creating Passbook Pass</documentation>
      <input message='tns:createpassRequestMessage' name='createpassInput' />
      <output message='tns:createpassResponseMessage' name='createpassOutput' />
    </operation>
    <operation name='createwalletticket'>
      <documentation>create Wallet Ticket</documentation>
      <input message='tns:createwalletticketRequestMessage' name='createwalletticketInput' />
      <output message='tns:createwalletticketResponseMessage' name='createwalletticketOutput' />
    </operation>
    <operation name='gcmdeletepass'>
      <documentation>marking Pass as deleted for given RegistrationId and SerialNumber</documentation>
      <input message='tns:gcmdeletepassRequestMessage' name='gcmdeletepassInput' />
      <output message='tns:gcmdeletepassResponseMessage' name='gcmdeletepassOutput' />
    </operation>
    <operation name='gcmregisterpass'>
      <documentation>register Pass from Android device using RegistrationId and SerialNumber</documentation>
      <input message='tns:gcmregisterpassRequestMessage' name='gcmregisterpassInput' />
      <output message='tns:gcmregisterpassResponseMessage' name='gcmregisterpassOutput' />
    </operation>
    <operation name='getUpdatedPass'>
      <documentation>this api methods sends back the updated pass to device</documentation>
      <input message='tns:getUpdatedPassRequestMessage' name='getUpdatedPassInput' />
      <output message='tns:getUpdatedPassResponseMessage' name='getUpdatedPassOutput' />
    </operation>
    <operation name='getpass'>
      <documentation>generating User Passbook Pass file by Id</documentation>
      <input message='tns:getpassRequestMessage' name='getpassInput' />
      <output message='tns:getpassResponseMessage' name='getpassOutput' />
    </operation>
    <operation name='getpassstaticsbypassid'>
      <documentation>it will give pass statics by PassId</documentation>
      <input message='tns:getpassstaticsbypassidRequestMessage' name='getpassstaticsbypassidInput' />
      <output message='tns:getpassstaticsbypassidResponseMessage' name='getpassstaticsbypassidOutput' />
    </operation>
    <operation name='getpassstaticsbyuid'>
      <documentation>fetching User Pass Statics</documentation>
      <input message='tns:getpassstaticsbyuidRequestMessage' name='getpassstaticsbyuidInput' />
      <output message='tns:getpassstaticsbyuidResponseMessage' name='getpassstaticsbyuidOutput' />
    </operation>
    <operation name='getpasstemplate'>
      <documentation>retrieving Pass Template by Template Id</documentation>
      <input message='tns:getpasstemplateRequestMessage' name='getpasstemplateInput' />
      <output message='tns:getpasstemplateResponseMessage' name='getpasstemplateOutput' />
    </operation>
    <operation name='getpasstemplatebyuid'>
      <documentation>get Pass Template details by UID</documentation>
      <input message='tns:getpasstemplatebyuidRequestMessage' name='getpasstemplatebyuidInput' />
      <output message='tns:getpasstemplatebyuidResponseMessage' name='getpasstemplatebyuidOutput' />
    </operation>
    <operation name='getshareimage'>
      <documentation>generating PassView image</documentation>
      <input message='tns:getshareimageRequestMessage' name='getshareimageInput' />
      <output message='tns:getshareimageResponseMessage' name='getshareimageOutput' />
    </operation>
    <operation name='getupdatedserails'>
      <documentation>this api calls return updated serial numbers to device</documentation>
      <input message='tns:getupdatedserailsRequestMessage' name='getupdatedserailsInput' />
      <output message='tns:getupdatedserailsResponseMessage' name='getupdatedserailsOutput' />
    </operation>
    <operation name='getuserbyemail'>
      <documentation>getting Passbookbee User Details by Email</documentation>
      <input message='tns:getuserbyemailRequestMessage' name='getuserbyemailInput' />
      <output message='tns:getuserbyemailResponseMessage' name='getuserbyemailOutput' />
    </operation>
    <operation name='getuserbyuid'>
      <documentation>getting Passbookbee User Details by Id</documentation>
      <input message='tns:getuserbyuidRequestMessage' name='getuserbyuidInput' />
      <output message='tns:getuserbyuidResponseMessage' name='getuserbyuidOutput' />
    </operation>
    <operation name='getuserpasses'>
      <documentation>get all passes by api key</documentation>
      <input message='tns:getuserpassesRequestMessage' name='getuserpassesInput' />
      <output message='tns:getuserpassesResponseMessage' name='getuserpassesOutput' />
    </operation>
    <operation name='getuserpasstemplates'>
      <documentation>retrieving User Pass Templates</documentation>
      <input message='tns:getuserpasstemplatesRequestMessage' name='getuserpasstemplatesInput' />
      <output message='tns:getuserpasstemplatesResponseMessage' name='getuserpasstemplatesOutput' />
    </operation>
    <operation name='getuserwallettickets'>
      <documentation>retrieving User Samsung Wallet Ticket Ids</documentation>
      <input message='tns:getuserwalletticketsRequestMessage' name='getuserwalletticketsInput' />
      <output message='tns:getuserwalletticketsResponseMessage' name='getuserwalletticketsOutput' />
    </operation>
    <operation name='getwalletticket'>
      <documentation>generating User Passbook Pass file by Id</documentation>
      <input message='tns:getwalletticketRequestMessage' name='getwalletticketInput' />
      <output message='tns:getwalletticketResponseMessage' name='getwalletticketOutput' />
    </operation>
    <operation name='loginuser'>
      <documentation>login Passbookbee User</documentation>
      <input message='tns:loginuserRequestMessage' name='loginuserInput' />
      <output message='tns:loginuserResponseMessage' name='loginuserOutput' />
    </operation>
    <operation name='registerDevice'>
      <documentation>this service will be called by device when pass is being added into passbook</documentation>
      <input message='tns:registerDeviceRequestMessage' name='registerDeviceInput' />
      <output message='tns:registerDeviceResponseMessage' name='registerDeviceOutput' />
    </operation>
    <operation name='registeruser'>
      <documentation>register Passbookbee Users</documentation>
      <input message='tns:registeruserRequestMessage' name='registeruserInput' />
      <output message='tns:registeruserResponseMessage' name='registeruserOutput' />
    </operation>
    <operation name='updatePassItems'>
      <documentation>for Updating pass items and this method will send push notifications</documentation>
      <input message='tns:updatePassItemsRequestMessage' name='updatePassItemsInput' />
      <output message='tns:updatePassItemsResponseMessage' name='updatePassItemsOutput' />
    </operation>
    <operation name='updateexpiredcoupons'>
      <documentation>this will be called by Scheduler for updating expired coupons</documentation>
      <input message='tns:updateexpiredcouponsRequestMessage' name='updateexpiredcouponsInput' />
      <output message='tns:updateexpiredcouponsResponseMessage' name='updateexpiredcouponsOutput' />
    </operation>
    <operation name='updateuser'>
      <documentation>updating Passbookbee User Detail</documentation>
      <input message='tns:updateuserRequestMessage' name='updateuserInput' />
      <output message='tns:updateuserResponseMessage' name='updateuserOutput' />
    </operation>
  </portType>
  <binding name='passbeemediaPassbookAndAndroidPassbookBinding' type='tns:passbeemediaPassbookAndAndroidPassbookPortType'>
    <operation name='createpass'>
      <soap12:operation soapAction='http://createpass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createwalletticket'>
      <soap12:operation soapAction='http://createwalletticket' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='gcmdeletepass'>
      <soap12:operation soapAction='http://gcmdeletepass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='gcmregisterpass'>
      <soap12:operation soapAction='http://gcmregisterpass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUpdatedPass'>
      <soap12:operation soapAction='http://getUpdatedPass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getpass'>
      <soap12:operation soapAction='http://getpass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getpassstaticsbypassid'>
      <soap12:operation soapAction='http://getpassstaticsbypassid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getpassstaticsbyuid'>
      <soap12:operation soapAction='http://getpassstaticsbyuid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getpasstemplate'>
      <soap12:operation soapAction='http://getpasstemplate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getpasstemplatebyuid'>
      <soap12:operation soapAction='http://getpasstemplatebyuid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getshareimage'>
      <soap12:operation soapAction='http://getshareimage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getupdatedserails'>
      <soap12:operation soapAction='http://getupdatedserails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getuserbyemail'>
      <soap12:operation soapAction='http://getuserbyemail' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getuserbyuid'>
      <soap12:operation soapAction='http://getuserbyuid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getuserpasses'>
      <soap12:operation soapAction='http://getuserpasses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getuserpasstemplates'>
      <soap12:operation soapAction='http://getuserpasstemplates' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getuserwallettickets'>
      <soap12:operation soapAction='http://getuserwallettickets' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getwalletticket'>
      <soap12:operation soapAction='http://getwalletticket' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='loginuser'>
      <soap12:operation soapAction='http://loginuser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='registerDevice'>
      <soap12:operation soapAction='http://registerDevice' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='registeruser'>
      <soap12:operation soapAction='http://registeruser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updatePassItems'>
      <soap12:operation soapAction='http://updatePassItems' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateexpiredcoupons'>
      <soap12:operation soapAction='http://updateexpiredcoupons' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateuser'>
      <soap12:operation soapAction='http://updateuser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='passbeemediaPassbookAndAndroidPassbook'>
    <documentation>pass Bee Media API is for developers that need to use our api to get going quickly to create apple passbook and android passbook passes</documentation>
    <port name='passbeemediaPassbookAndAndroidPassbookPort' binding='tns:passbeemediaPassbookAndAndroidPassbookBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://passbeemediaPassbookAndAndroidPassbook' />
    </port>
  </service>
</definitions>