<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/duplicateContentChecking/' name='duplicateContentChecking' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/duplicateContentChecking/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/duplicateContentChecking/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/duplicateContentChecking/'>
      <xsd:element name='fileCheckRequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPlagiarismPercentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getPlagiarismPercentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getResultWithQuotesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getResultWithQuotesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getResultsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getResultsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='requestTheStatusOfYourCheckParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='requestTheStatusOfYourCheckResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textCheckRequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='links' type='xsd:anyURI' maxOccurs='unbounded' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='urlCheckRequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='fileCheckRequestRequestMessage' />
  <message name='fileCheckRequestResponseMessage'>
    <part name='response' element='tns:fileCheckRequestResponse' />
  </message>
  <message name='getPlagiarismPercentRequestMessage'>
    <part name='parameters' element='tns:getPlagiarismPercentParameters' />
  </message>
  <message name='getPlagiarismPercentResponseMessage'>
    <part name='response' element='tns:getPlagiarismPercentResponse' />
  </message>
  <message name='getResultWithQuotesRequestMessage'>
    <part name='parameters' element='tns:getResultWithQuotesParameters' />
  </message>
  <message name='getResultWithQuotesResponseMessage'>
    <part name='response' element='tns:getResultWithQuotesResponse' />
  </message>
  <message name='getResultsRequestMessage'>
    <part name='parameters' element='tns:getResultsParameters' />
  </message>
  <message name='getResultsResponseMessage'>
    <part name='response' element='tns:getResultsResponse' />
  </message>
  <message name='requestTheStatusOfYourCheckRequestMessage'>
    <part name='parameters' element='tns:requestTheStatusOfYourCheckParameters' />
  </message>
  <message name='requestTheStatusOfYourCheckResponseMessage'>
    <part name='response' element='tns:requestTheStatusOfYourCheckResponse' />
  </message>
  <message name='textCheckRequestRequestMessage' />
  <message name='textCheckRequestResponseMessage'>
    <part name='response' element='tns:textCheckRequestResponse' />
  </message>
  <message name='urlCheckRequestRequestMessage' />
  <message name='urlCheckRequestResponseMessage'>
    <part name='response' element='tns:urlCheckRequestResponse' />
  </message>
  <portType name='duplicateContentCheckingPortType'>
    <operation name='fileCheckRequest'>
      <documentation>to send text files for checking use addFileForChecking method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:fileCheckRequestRequestMessage' name='fileCheckRequestInput' />
      <output message='tns:fileCheckRequestResponseMessage' name='fileCheckRequestOutput' />
    </operation>
    <operation name='getPlagiarismPercent'>
      <documentation>to get the percentage of the duplicate content use getPlagiarismPercent method</documentation>
      <input message='tns:getPlagiarismPercentRequestMessage' name='getPlagiarismPercentInput' />
      <output message='tns:getPlagiarismPercentResponseMessage' name='getPlagiarismPercentOutput' />
    </operation>
    <operation name='getResultWithQuotes'>
      <documentation>to get the checking results with the quotations from search engines use getResultWithQuotes method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:getResultWithQuotesRequestMessage' name='getResultWithQuotesInput' />
      <output message='tns:getResultWithQuotesResponseMessage' name='getResultWithQuotesOutput' />
    </operation>
    <operation name='getResults'>
      <documentation>to get the result report of duplicate content checking request use getResult method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:getResultsRequestMessage' name='getResultsInput' />
      <output message='tns:getResultsResponseMessage' name='getResultsOutput' />
    </operation>
    <operation name='requestTheStatusOfYourCheck'>
      <documentation>to get the checking status for particular text use getTextStatus method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:requestTheStatusOfYourCheckRequestMessage' name='requestTheStatusOfYourCheckInput' />
      <output message='tns:requestTheStatusOfYourCheckResponseMessage' name='requestTheStatusOfYourCheckOutput' />
    </operation>
    <operation name='textCheckRequest'>
      <documentation>to send texts for checking use addTextForChecking method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:textCheckRequestRequestMessage' name='textCheckRequestInput' />
      <output message='tns:textCheckRequestResponseMessage' name='textCheckRequestOutput' />
    </operation>
    <operation name='urlCheckRequest'>
      <documentation>to send the URL for checking use addURLForChecking method See more at http www plagspotter com api sthash uU QX cy dpuf</documentation>
      <input message='tns:urlCheckRequestRequestMessage' name='urlCheckRequestInput' />
      <output message='tns:urlCheckRequestResponseMessage' name='urlCheckRequestOutput' />
    </operation>
  </portType>
  <binding name='duplicateContentCheckingBinding' type='tns:duplicateContentCheckingPortType'>
    <operation name='fileCheckRequest'>
      <soap12:operation soapAction='http://fileCheckRequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getPlagiarismPercent'>
      <soap12:operation soapAction='http://getPlagiarismPercent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getResultWithQuotes'>
      <soap12:operation soapAction='http://getResultWithQuotes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getResults'>
      <soap12:operation soapAction='http://getResults' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='requestTheStatusOfYourCheck'>
      <soap12:operation soapAction='http://requestTheStatusOfYourCheck' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='textCheckRequest'>
      <soap12:operation soapAction='http://textCheckRequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='urlCheckRequest'>
      <soap12:operation soapAction='http://urlCheckRequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='duplicateContentChecking'>
    <documentation>plagSpotter API allows to check online and offline content for plagiarism or duplication</documentation>
    <port name='duplicateContentCheckingPort' binding='tns:duplicateContentCheckingBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://duplicateContentChecking' />
    </port>
  </service>
</definitions>