<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/waynaut/' name='waynaut' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/waynaut/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/waynaut/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/waynaut/'>
      <xsd:element name='connectedParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectedResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='connected' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectedWithinRangeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='range' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectedWithinRangeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='connected' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectedWithinRangeAtAGivenTimeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='millis' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='range' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='connectedWithinRangeAtAGivenTimeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='connected' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='latb' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lngb' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='arrivalnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='duration' type='xsd:int' minOccurs='0' />
            <xsd:element name='startcity' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='arrivalcity' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='cost' type='xsd:int' minOccurs='0' />
            <xsd:element name='route' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='prettyprice' type='xsd:string' minOccurs='0' />
                  <xsd:element name='connectionname' type='xsd:string' minOccurs='0' />
                  <xsd:element name='minLink' type='xsd:string' minOccurs='0' />
                  <xsd:element name='starttime' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='avgLink' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='arrivalnodename' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='duration' type='xsd:int' minOccurs='0' />
                  <xsd:element name='startcity' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='co2emission' type='xsd:int' minOccurs='0' />
                  <xsd:element name='nextday' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='arrivalcity' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='nodes' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='id_city' type='xsd:int' minOccurs='0' />
                        <xsd:element name='id_region' type='xsd:int' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='intercity' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='alternateRoute' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='price' type='xsd:int' minOccurs='0' />
                  <xsd:element name='arrivaltime' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='startnodename' type='xsd:string' minOccurs='0' />
                  <xsd:element name='company' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='co2' type='xsd:int' minOccurs='0' />
            <xsd:element name='arrivaltime' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='startnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='starttime' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteWithCheapFastBarParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='bar' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='latb' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lngb' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteWithCheapFastBarResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='arrivalnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='duration' type='xsd:int' minOccurs='0' />
            <xsd:element name='startcity' type='xsd:string' minOccurs='0' />
            <xsd:element name='arrivalcity' type='xsd:string' minOccurs='0' />
            <xsd:element name='cost' type='xsd:int' minOccurs='0' />
            <xsd:element name='route' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='co2' type='xsd:int' minOccurs='0' />
            <xsd:element name='arrivaltime' type='xsd:string' minOccurs='0' />
            <xsd:element name='startnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='starttime' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteWithCheapFastBarAndDepartureTimeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='bar' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lata' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='latb' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lnga' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='lngb' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='millis' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getrouteWithCheapFastBarAndDepartureTimeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='arrivalnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='duration' type='xsd:int' minOccurs='0' />
            <xsd:element name='startcity' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='arrivalcity' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='cost' type='xsd:int' minOccurs='0' />
            <xsd:element name='route' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='prettyprice' type='xsd:string' minOccurs='0' />
                  <xsd:element name='connectionname' type='xsd:string' minOccurs='0' />
                  <xsd:element name='minLink' type='xsd:string' minOccurs='0' />
                  <xsd:element name='starttime' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='avgLink' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='arrivalnodename' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='duration' type='xsd:int' minOccurs='0' />
                  <xsd:element name='startcity' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='co2emission' type='xsd:int' minOccurs='0' />
                  <xsd:element name='nextday' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='arrivalcity' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='nodes' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='id_city' type='xsd:int' minOccurs='0' />
                        <xsd:element name='id_region' type='xsd:int' minOccurs='0' />
                        <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                        <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='intercity' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='alternateRoute' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='price' type='xsd:int' minOccurs='0' />
                  <xsd:element name='arrivaltime' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='startnodename' type='xsd:string' minOccurs='0' />
                  <xsd:element name='company' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='id' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='co2' type='xsd:int' minOccurs='0' />
            <xsd:element name='arrivaltime' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='startnodename' type='xsd:string' minOccurs='0' />
            <xsd:element name='starttime' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='connectedRequestMessage'>
    <part name='parameters' element='tns:connectedParameters' />
  </message>
  <message name='connectedResponseMessage'>
    <part name='response' element='tns:connectedResponse' />
  </message>
  <message name='connectedWithinRangeRequestMessage'>
    <part name='parameters' element='tns:connectedWithinRangeParameters' />
  </message>
  <message name='connectedWithinRangeResponseMessage'>
    <part name='response' element='tns:connectedWithinRangeResponse' />
  </message>
  <message name='connectedWithinRangeAtAGivenTimeRequestMessage'>
    <part name='parameters' element='tns:connectedWithinRangeAtAGivenTimeParameters' />
  </message>
  <message name='connectedWithinRangeAtAGivenTimeResponseMessage'>
    <part name='response' element='tns:connectedWithinRangeAtAGivenTimeResponse' />
  </message>
  <message name='getrouteRequestMessage'>
    <part name='parameters' element='tns:getrouteParameters' />
  </message>
  <message name='getrouteResponseMessage'>
    <part name='response' element='tns:getrouteResponse' />
  </message>
  <message name='getrouteWithCheapFastBarRequestMessage'>
    <part name='parameters' element='tns:getrouteWithCheapFastBarParameters' />
  </message>
  <message name='getrouteWithCheapFastBarResponseMessage'>
    <part name='response' element='tns:getrouteWithCheapFastBarResponse' />
  </message>
  <message name='getrouteWithCheapFastBarAndDepartureTimeRequestMessage'>
    <part name='parameters' element='tns:getrouteWithCheapFastBarAndDepartureTimeParameters' />
  </message>
  <message name='getrouteWithCheapFastBarAndDepartureTimeResponseMessage'>
    <part name='response' element='tns:getrouteWithCheapFastBarAndDepartureTimeResponse' />
  </message>
  <portType name='waynautPortType'>
    <operation name='connected'>
      <documentation>this API call tells you if a point lat lng is covered by our database I e if there is at least one way of transport passing nearby the given point default distance is m default hour is now these parameters can be specified</documentation>
      <input message='tns:connectedRequestMessage' name='connectedInput' />
      <output message='tns:connectedResponseMessage' name='connectedOutput' />
    </operation>
    <operation name='connectedWithinRange'>
      <documentation>find if a point lat lng is covered by our transportation system withing a range of range meters</documentation>
      <input message='tns:connectedWithinRangeRequestMessage' name='connectedWithinRangeInput' />
      <output message='tns:connectedWithinRangeResponseMessage' name='connectedWithinRangeOutput' />
    </operation>
    <operation name='connectedWithinRangeAtAGivenTime'>
      <documentation>find if our system has a transportation mean passing within range meters from the given point lat lng at about the given time in milliseconds millis unix epoch time</documentation>
      <input message='tns:connectedWithinRangeAtAGivenTimeRequestMessage' name='connectedWithinRangeAtAGivenTimeInput' />
      <output message='tns:connectedWithinRangeAtAGivenTimeResponseMessage' name='connectedWithinRangeAtAGivenTimeOutput' />
    </operation>
    <operation name='getroute'>
      <documentation>returns a trip plan between the given coordinates departing now There are many optional parameters to tune the departure time and trip preferences</documentation>
      <input message='tns:getrouteRequestMessage' name='getrouteInput' />
      <output message='tns:getrouteResponseMessage' name='getrouteOutput' />
    </operation>
    <operation name='getrouteWithCheapFastBar'>
      <documentation>retrieve a multi modal route between two points using a cheap fast bar preference The bar expresses a measure of value for the time of the traveler will look for a cheap trip will look for a fast and expansive trip</documentation>
      <input message='tns:getrouteWithCheapFastBarRequestMessage' name='getrouteWithCheapFastBarInput' />
      <output message='tns:getrouteWithCheapFastBarResponseMessage' name='getrouteWithCheapFastBarOutput' />
    </operation>
    <operation name='getrouteWithCheapFastBarAndDepartureTime'>
      <documentation>retrieve a route between the given points departing at a time specified as UNIX epoch and with cheap bar or fast bar preference</documentation>
      <input message='tns:getrouteWithCheapFastBarAndDepartureTimeRequestMessage' name='getrouteWithCheapFastBarAndDepartureTimeInput' />
      <output message='tns:getrouteWithCheapFastBarAndDepartureTimeResponseMessage' name='getrouteWithCheapFastBarAndDepartureTimeOutput' />
    </operation>
  </portType>
  <binding name='waynautBinding' type='tns:waynautPortType'>
    <operation name='connected'>
      <soap12:operation soapAction='http://connected' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='connectedWithinRange'>
      <soap12:operation soapAction='http://connectedWithinRange' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='connectedWithinRangeAtAGivenTime'>
      <soap12:operation soapAction='http://connectedWithinRangeAtAGivenTime' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getroute'>
      <soap12:operation soapAction='http://getroute' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getrouteWithCheapFastBar'>
      <soap12:operation soapAction='http://getrouteWithCheapFastBar' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getrouteWithCheapFastBarAndDepartureTime'>
      <soap12:operation soapAction='http://getrouteWithCheapFastBarAndDepartureTime' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='waynaut'>
    <documentation>multimodal Directions as a Service Traditional and innovative means of transportation together in one API We allow every website or app to show their users the best way to get where they need by combining the traditional means of transport such as bus metro or taxi with the most innovative ones like carpooling ridesharing or carsharing</documentation>
    <port name='waynautPort' binding='tns:waynautBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://waynaut' />
    </port>
  </service>
</definitions>