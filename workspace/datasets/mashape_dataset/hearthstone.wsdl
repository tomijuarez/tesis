<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/hearthstone/' name='hearthstone' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/hearthstone/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/hearthstone/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/hearthstone/'>
      <xsd:element name='allCardsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='allCardsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardBacksParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardBacksResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardSearchParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='name' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardSetParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='set' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardSetResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByClassParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='class' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByClassResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByFactionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='faction' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByFactionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByQualityParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='quality' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByQualityResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByRaceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='race' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByRaceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByTypeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='attack' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='cost' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='durability' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='health' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cardsByTypeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='infoParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='infoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='patch' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='types' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='locales' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='sets' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='races' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='classes' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='qualities' type='xsd:normalizedString' maxOccurs='unbounded' />
            <xsd:element name='factions' type='xsd:normalizedString' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singleCardParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='collectible' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='name' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singleCardResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='img' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='cost' type='xsd:int' minOccurs='0' />
                  <xsd:element name='collectible' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='race' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='artist' type='xsd:string' minOccurs='0' />
                  <xsd:element name='health' type='xsd:int' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='locale' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='flavor' type='xsd:string' minOccurs='0' />
                  <xsd:element name='elite' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='cardSet' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='attack' type='xsd:int' minOccurs='0' />
                  <xsd:element name='cardId' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='faction' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='imgGold' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='text' type='xsd:string' minOccurs='0' />
                  <xsd:element name='rarity' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='allCardsRequestMessage'>
    <part name='parameters' element='tns:allCardsParameters' />
  </message>
  <message name='allCardsResponseMessage'>
    <part name='response' element='tns:allCardsResponse' />
  </message>
  <message name='cardBacksRequestMessage'>
    <part name='parameters' element='tns:cardBacksParameters' />
  </message>
  <message name='cardBacksResponseMessage'>
    <part name='response' element='tns:cardBacksResponse' />
  </message>
  <message name='cardSearchRequestMessage'>
    <part name='parameters' element='tns:cardSearchParameters' />
  </message>
  <message name='cardSearchResponseMessage'>
    <part name='response' element='tns:cardSearchResponse' />
  </message>
  <message name='cardSetRequestMessage'>
    <part name='parameters' element='tns:cardSetParameters' />
  </message>
  <message name='cardSetResponseMessage'>
    <part name='response' element='tns:cardSetResponse' />
  </message>
  <message name='cardsByClassRequestMessage'>
    <part name='parameters' element='tns:cardsByClassParameters' />
  </message>
  <message name='cardsByClassResponseMessage'>
    <part name='response' element='tns:cardsByClassResponse' />
  </message>
  <message name='cardsByFactionRequestMessage'>
    <part name='parameters' element='tns:cardsByFactionParameters' />
  </message>
  <message name='cardsByFactionResponseMessage'>
    <part name='response' element='tns:cardsByFactionResponse' />
  </message>
  <message name='cardsByQualityRequestMessage'>
    <part name='parameters' element='tns:cardsByQualityParameters' />
  </message>
  <message name='cardsByQualityResponseMessage'>
    <part name='response' element='tns:cardsByQualityResponse' />
  </message>
  <message name='cardsByRaceRequestMessage'>
    <part name='parameters' element='tns:cardsByRaceParameters' />
  </message>
  <message name='cardsByRaceResponseMessage'>
    <part name='response' element='tns:cardsByRaceResponse' />
  </message>
  <message name='cardsByTypeRequestMessage'>
    <part name='parameters' element='tns:cardsByTypeParameters' />
  </message>
  <message name='cardsByTypeResponseMessage'>
    <part name='response' element='tns:cardsByTypeResponse' />
  </message>
  <message name='infoRequestMessage'>
    <part name='parameters' element='tns:infoParameters' />
  </message>
  <message name='infoResponseMessage'>
    <part name='response' element='tns:infoResponse' />
  </message>
  <message name='singleCardRequestMessage'>
    <part name='parameters' element='tns:singleCardParameters' />
  </message>
  <message name='singleCardResponseMessage'>
    <part name='response' element='tns:singleCardResponse' />
  </message>
  <portType name='hearthstonePortType'>
    <operation name='allCards'>
      <documentation>returns all available Hearthstone cards including non collectible cards</documentation>
      <input message='tns:allCardsRequestMessage' name='allCardsInput' />
      <output message='tns:allCardsResponseMessage' name='allCardsOutput' />
    </operation>
    <operation name='cardBacks'>
      <documentation>returns a list of all the card backs</documentation>
      <input message='tns:cardBacksRequestMessage' name='cardBacksInput' />
      <output message='tns:cardBacksResponseMessage' name='cardBacksOutput' />
    </operation>
    <operation name='cardSearch'>
      <documentation>returns cards by partial name</documentation>
      <input message='tns:cardSearchRequestMessage' name='cardSearchInput' />
      <output message='tns:cardSearchResponseMessage' name='cardSearchOutput' />
    </operation>
    <operation name='cardSet'>
      <documentation>returns all cards in a set Example values Blackrock Mountain Classic</documentation>
      <input message='tns:cardSetRequestMessage' name='cardSetInput' />
      <output message='tns:cardSetResponseMessage' name='cardSetOutput' />
    </operation>
    <operation name='cardsByClass'>
      <documentation>returns all the cards of a class Example values Mage Paladin</documentation>
      <input message='tns:cardsByClassRequestMessage' name='cardsByClassInput' />
      <output message='tns:cardsByClassResponseMessage' name='cardsByClassOutput' />
    </operation>
    <operation name='cardsByFaction'>
      <documentation>returns all the cards of a certain faction Example values Horde Neutral</documentation>
      <input message='tns:cardsByFactionRequestMessage' name='cardsByFactionInput' />
      <output message='tns:cardsByFactionResponseMessage' name='cardsByFactionOutput' />
    </operation>
    <operation name='cardsByQuality'>
      <documentation>returns all the cards of a certain quality Example values Legendary Common</documentation>
      <input message='tns:cardsByQualityRequestMessage' name='cardsByQualityInput' />
      <output message='tns:cardsByQualityResponseMessage' name='cardsByQualityOutput' />
    </operation>
    <operation name='cardsByRace'>
      <documentation>returns all the cards of a certain race Example values Mech Murloc</documentation>
      <input message='tns:cardsByRaceRequestMessage' name='cardsByRaceInput' />
      <output message='tns:cardsByRaceResponseMessage' name='cardsByRaceOutput' />
    </operation>
    <operation name='cardsByType'>
      <documentation>returns all the cards of a certain type Example values Spell Weapon</documentation>
      <input message='tns:cardsByTypeRequestMessage' name='cardsByTypeInput' />
      <output message='tns:cardsByTypeResponseMessage' name='cardsByTypeOutput' />
    </operation>
    <operation name='info'>
      <documentation>returns a list of current patch classes sets types factions qualities races and locales</documentation>
      <input message='tns:infoRequestMessage' name='infoInput' />
      <output message='tns:infoResponseMessage' name='infoOutput' />
    </operation>
    <operation name='singleCard'>
      <documentation>returns card by name or ID This may return more then one card if they share the same name Loatheb returns both the card and the boss</documentation>
      <input message='tns:singleCardRequestMessage' name='singleCardInput' />
      <output message='tns:singleCardResponseMessage' name='singleCardOutput' />
    </operation>
  </portType>
  <binding name='hearthstoneBinding' type='tns:hearthstonePortType'>
    <operation name='allCards'>
      <soap12:operation soapAction='http://allCards' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardBacks'>
      <soap12:operation soapAction='http://cardBacks' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardSearch'>
      <soap12:operation soapAction='http://cardSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardSet'>
      <soap12:operation soapAction='http://cardSet' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardsByClass'>
      <soap12:operation soapAction='http://cardsByClass' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardsByFaction'>
      <soap12:operation soapAction='http://cardsByFaction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardsByQuality'>
      <soap12:operation soapAction='http://cardsByQuality' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardsByRace'>
      <soap12:operation soapAction='http://cardsByRace' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cardsByType'>
      <soap12:operation soapAction='http://cardsByType' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='info'>
      <soap12:operation soapAction='http://info' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='singleCard'>
      <soap12:operation soapAction='http://singleCard' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='hearthstone'>
    <documentation>this API provides up to date Hearthstone data pulled directly from the game</documentation>
    <port name='hearthstonePort' binding='tns:hearthstoneBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://hearthstone' />
    </port>
  </service>
</definitions>