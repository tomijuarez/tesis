<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/mlAnalyzer/' name='mlAnalyzer' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/mlAnalyzer/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/mlAnalyzer/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/mlAnalyzer/'>
      <xsd:element name='adultContentAnalyzerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='adultContentAnalyzerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='articleSummarizerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='size' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='articleSummarizerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='articleSummarizerPostResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='contentClassifierParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='contentClassifierResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageDetectorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageDetectorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='locationExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='locationExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='country' type='xsd:string' minOccurs='0' />
                  <xsd:element name='city' type='xsd:string' minOccurs='0' />
                  <xsd:element name='latitude' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='timeZone' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='region' type='xsd:string' minOccurs='0' />
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='longitude' type='xsd:decimal' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namesExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namesExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalyzerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalyzerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='stocksSymbolsExtractorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callback' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='stocksSymbolsExtractorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='symbol' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='exchange' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='adultContentAnalyzerRequestMessage'>
    <part name='parameters' element='tns:adultContentAnalyzerParameters' />
  </message>
  <message name='adultContentAnalyzerResponseMessage'>
    <part name='response' element='tns:adultContentAnalyzerResponse' />
  </message>
  <message name='articleSummarizerRequestMessage'>
    <part name='parameters' element='tns:articleSummarizerParameters' />
  </message>
  <message name='articleSummarizerResponseMessage'>
    <part name='response' element='tns:articleSummarizerResponse' />
  </message>
  <message name='articleSummarizerPostRequestMessage' />
  <message name='articleSummarizerPostResponseMessage'>
    <part name='response' element='tns:articleSummarizerPostResponse' />
  </message>
  <message name='contentClassifierRequestMessage'>
    <part name='parameters' element='tns:contentClassifierParameters' />
  </message>
  <message name='contentClassifierResponseMessage'>
    <part name='response' element='tns:contentClassifierResponse' />
  </message>
  <message name='languageDetectorRequestMessage'>
    <part name='parameters' element='tns:languageDetectorParameters' />
  </message>
  <message name='languageDetectorResponseMessage'>
    <part name='response' element='tns:languageDetectorResponse' />
  </message>
  <message name='locationExtractorRequestMessage'>
    <part name='parameters' element='tns:locationExtractorParameters' />
  </message>
  <message name='locationExtractorResponseMessage'>
    <part name='response' element='tns:locationExtractorResponse' />
  </message>
  <message name='namesExtractorRequestMessage'>
    <part name='parameters' element='tns:namesExtractorParameters' />
  </message>
  <message name='namesExtractorResponseMessage'>
    <part name='response' element='tns:namesExtractorResponse' />
  </message>
  <message name='sentimentAnalyzerRequestMessage'>
    <part name='parameters' element='tns:sentimentAnalyzerParameters' />
  </message>
  <message name='sentimentAnalyzerResponseMessage'>
    <part name='response' element='tns:sentimentAnalyzerResponse' />
  </message>
  <message name='stocksSymbolsExtractorRequestMessage'>
    <part name='parameters' element='tns:stocksSymbolsExtractorParameters' />
  </message>
  <message name='stocksSymbolsExtractorResponseMessage'>
    <part name='response' element='tns:stocksSymbolsExtractorResponse' />
  </message>
  <portType name='mlAnalyzerPortType'>
    <operation name='adultContentAnalyzer'>
      <documentation>analyze a block of text for adult content English only</documentation>
      <input message='tns:adultContentAnalyzerRequestMessage' name='adultContentAnalyzerInput' />
      <output message='tns:adultContentAnalyzerResponseMessage' name='adultContentAnalyzerOutput' />
    </operation>
    <operation name='articleSummarizer'>
      <documentation>summarize the sentences in articles</documentation>
      <input message='tns:articleSummarizerRequestMessage' name='articleSummarizerInput' />
      <output message='tns:articleSummarizerResponseMessage' name='articleSummarizerOutput' />
    </operation>
    <operation name='articleSummarizerPost'>
      <documentation>summarize the sentences in articles</documentation>
      <input message='tns:articleSummarizerPostRequestMessage' name='articleSummarizerPostInput' />
      <output message='tns:articleSummarizerPostResponseMessage' name='articleSummarizerPostOutput' />
    </operation>
    <operation name='contentClassifier'>
      <documentation>classify a text block into a category English only</documentation>
      <input message='tns:contentClassifierRequestMessage' name='contentClassifierInput' />
      <output message='tns:contentClassifierResponseMessage' name='contentClassifierOutput' />
    </operation>
    <operation name='languageDetector'>
      <documentation>analyze the text language</documentation>
      <input message='tns:languageDetectorRequestMessage' name='languageDetectorInput' />
      <output message='tns:languageDetectorResponseMessage' name='languageDetectorOutput' />
    </operation>
    <operation name='locationExtractor'>
      <documentation>extract locations from a text block</documentation>
      <input message='tns:locationExtractorRequestMessage' name='locationExtractorInput' />
      <output message='tns:locationExtractorResponseMessage' name='locationExtractorOutput' />
    </operation>
    <operation name='namesExtractor'>
      <documentation>extract Names from a text block</documentation>
      <input message='tns:namesExtractorRequestMessage' name='namesExtractorInput' />
      <output message='tns:namesExtractorResponseMessage' name='namesExtractorOutput' />
    </operation>
    <operation name='sentimentAnalyzer'>
      <documentation>analyze a text block for sentiment English only</documentation>
      <input message='tns:sentimentAnalyzerRequestMessage' name='sentimentAnalyzerInput' />
      <output message='tns:sentimentAnalyzerResponseMessage' name='sentimentAnalyzerOutput' />
    </operation>
    <operation name='stocksSymbolsExtractor'>
      <documentation>extract stock symbols companies from a text block</documentation>
      <input message='tns:stocksSymbolsExtractorRequestMessage' name='stocksSymbolsExtractorInput' />
      <output message='tns:stocksSymbolsExtractorResponseMessage' name='stocksSymbolsExtractorOutput' />
    </operation>
  </portType>
  <binding name='mlAnalyzerBinding' type='tns:mlAnalyzerPortType'>
    <operation name='adultContentAnalyzer'>
      <soap12:operation soapAction='http://adultContentAnalyzer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='articleSummarizer'>
      <soap12:operation soapAction='http://articleSummarizer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='articleSummarizerPost'>
      <soap12:operation soapAction='http://articleSummarizerPost' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='contentClassifier'>
      <soap12:operation soapAction='http://contentClassifier' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='languageDetector'>
      <soap12:operation soapAction='http://languageDetector' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='locationExtractor'>
      <soap12:operation soapAction='http://locationExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='namesExtractor'>
      <soap12:operation soapAction='http://namesExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sentimentAnalyzer'>
      <soap12:operation soapAction='http://sentimentAnalyzer' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='stocksSymbolsExtractor'>
      <soap12:operation soapAction='http://stocksSymbolsExtractor' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='mlAnalyzer'>
    <documentation>text Classification Article Summarization Sentiment Analysis Stock symbol extraction Person Names Extractor Language Detection Locations Extractor Adult content Analyzer</documentation>
    <port name='mlAnalyzerPort' binding='tns:mlAnalyzerBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://mlAnalyzer' />
    </port>
  </service>
</definitions>