<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/textAnalysis/' name='textAnalysis' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/textAnalysis/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/textAnalysis/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/textAnalysis/'>
      <xsd:element name='articleExtractionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='bestimage' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='articleExtractionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='uuid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchSubmitResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='classificationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='language' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='classificationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='conceptExtractionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='language' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='conceptExtractionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='entityExtractionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='entityExtractionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='hashtagSuggestionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='language' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='hashtagSuggestionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageDetectionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='languageDetectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='microformatsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='microformatsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='relatedParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='phrase' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='relatedResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalysisParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='mode' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sentimentAnalysisResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='summarizationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='mode' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='sentencesnumber' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='sentencespercentage' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='text' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='title' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='summarizationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='articleExtractionRequestMessage'>
    <part name='parameters' element='tns:articleExtractionParameters' />
  </message>
  <message name='articleExtractionResponseMessage'>
    <part name='response' element='tns:articleExtractionResponse' />
  </message>
  <message name='batchStatusRequestMessage'>
    <part name='parameters' element='tns:batchStatusParameters' />
  </message>
  <message name='batchStatusResponseMessage'>
    <part name='response' element='tns:batchStatusResponse' />
  </message>
  <message name='batchSubmitRequestMessage' />
  <message name='batchSubmitResponseMessage'>
    <part name='response' element='tns:batchSubmitResponse' />
  </message>
  <message name='classificationRequestMessage'>
    <part name='parameters' element='tns:classificationParameters' />
  </message>
  <message name='classificationResponseMessage'>
    <part name='response' element='tns:classificationResponse' />
  </message>
  <message name='conceptExtractionRequestMessage'>
    <part name='parameters' element='tns:conceptExtractionParameters' />
  </message>
  <message name='conceptExtractionResponseMessage'>
    <part name='response' element='tns:conceptExtractionResponse' />
  </message>
  <message name='entityExtractionRequestMessage'>
    <part name='parameters' element='tns:entityExtractionParameters' />
  </message>
  <message name='entityExtractionResponseMessage'>
    <part name='response' element='tns:entityExtractionResponse' />
  </message>
  <message name='hashtagSuggestionRequestMessage'>
    <part name='parameters' element='tns:hashtagSuggestionParameters' />
  </message>
  <message name='hashtagSuggestionResponseMessage'>
    <part name='response' element='tns:hashtagSuggestionResponse' />
  </message>
  <message name='languageDetectionRequestMessage'>
    <part name='parameters' element='tns:languageDetectionParameters' />
  </message>
  <message name='languageDetectionResponseMessage'>
    <part name='response' element='tns:languageDetectionResponse' />
  </message>
  <message name='microformatsRequestMessage'>
    <part name='parameters' element='tns:microformatsParameters' />
  </message>
  <message name='microformatsResponseMessage'>
    <part name='response' element='tns:microformatsResponse' />
  </message>
  <message name='relatedRequestMessage'>
    <part name='parameters' element='tns:relatedParameters' />
  </message>
  <message name='relatedResponseMessage'>
    <part name='response' element='tns:relatedResponse' />
  </message>
  <message name='sentimentAnalysisRequestMessage'>
    <part name='parameters' element='tns:sentimentAnalysisParameters' />
  </message>
  <message name='sentimentAnalysisResponseMessage'>
    <part name='response' element='tns:sentimentAnalysisResponse' />
  </message>
  <message name='summarizationRequestMessage'>
    <part name='parameters' element='tns:summarizationParameters' />
  </message>
  <message name='summarizationResponseMessage'>
    <part name='response' element='tns:summarizationResponse' />
  </message>
  <portType name='textAnalysisPortType'>
    <operation name='articleExtraction'>
      <documentation>extracts the main body of article including embedded media such as images videos from an URL and removes all the surrounding clutter</documentation>
      <input message='tns:articleExtractionRequestMessage' name='articleExtractionInput' />
      <output message='tns:articleExtractionResponseMessage' name='articleExtractionOutput' />
    </operation>
    <operation name='batchStatus'>
      <documentation>tracking the progress and status of a batch job</documentation>
      <input message='tns:batchStatusRequestMessage' name='batchStatusInput' />
      <output message='tns:batchStatusResponseMessage' name='batchStatusOutput' />
    </operation>
    <operation name='batchSubmit'>
      <documentation>accepts and queues a job for batch processing</documentation>
      <input message='tns:batchSubmitRequestMessage' name='batchSubmitInput' />
      <output message='tns:batchSubmitResponseMessage' name='batchSubmitOutput' />
    </operation>
    <operation name='classification'>
      <documentation>classifies a piece of text according to IPTC NewsCode standard into more than categories</documentation>
      <input message='tns:classificationRequestMessage' name='classificationInput' />
      <output message='tns:classificationResponseMessage' name='classificationOutput' />
    </operation>
    <operation name='conceptExtraction'>
      <documentation>extracts named entities mentioned in a document disambiguates and cross links them to DBPedia and Linked Data entities along with their semantic types including DBPedia and schema org</documentation>
      <input message='tns:conceptExtractionRequestMessage' name='conceptExtractionInput' />
      <output message='tns:conceptExtractionResponseMessage' name='conceptExtractionOutput' />
    </operation>
    <operation name='entityExtraction'>
      <documentation>extracts named entities people organizations and locations and values URLs emails telephone numbers currency amounts and percentages mentioned in a body of text</documentation>
      <input message='tns:entityExtractionRequestMessage' name='entityExtractionInput' />
      <output message='tns:entityExtractionResponseMessage' name='entityExtractionOutput' />
    </operation>
    <operation name='hashtagSuggestion'>
      <documentation>suggests hashtags describing the document</documentation>
      <input message='tns:hashtagSuggestionRequestMessage' name='hashtagSuggestionInput' />
      <output message='tns:hashtagSuggestionResponseMessage' name='hashtagSuggestionOutput' />
    </operation>
    <operation name='languageDetection'>
      <documentation>detects the main language a document is written in and returns it in ISO format from among different languages</documentation>
      <input message='tns:languageDetectionRequestMessage' name='languageDetectionInput' />
      <output message='tns:languageDetectionResponseMessage' name='languageDetectionOutput' />
    </operation>
    <operation name='microformats'>
      <documentation>extracts Microformats from URL</documentation>
      <input message='tns:microformatsRequestMessage' name='microformatsInput' />
      <output message='tns:microformatsResponseMessage' name='microformatsOutput' />
    </operation>
    <operation name='related'>
      <documentation>returns phrases related to the provided unigram or bigram</documentation>
      <input message='tns:relatedRequestMessage' name='relatedInput' />
      <output message='tns:relatedResponseMessage' name='relatedOutput' />
    </operation>
    <operation name='sentimentAnalysis'>
      <documentation>detects sentiment of a document in terms of polarity positive or negative and subjectivity subjective or objective</documentation>
      <input message='tns:sentimentAnalysisRequestMessage' name='sentimentAnalysisInput' />
      <output message='tns:sentimentAnalysisResponseMessage' name='sentimentAnalysisOutput' />
    </operation>
    <operation name='summarization'>
      <documentation>summarizes an article into a few key sentences</documentation>
      <input message='tns:summarizationRequestMessage' name='summarizationInput' />
      <output message='tns:summarizationResponseMessage' name='summarizationOutput' />
    </operation>
  </portType>
  <binding name='textAnalysisBinding' type='tns:textAnalysisPortType'>
    <operation name='articleExtraction'>
      <soap12:operation soapAction='http://articleExtraction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchStatus'>
      <soap12:operation soapAction='http://batchStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchSubmit'>
      <soap12:operation soapAction='http://batchSubmit' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='classification'>
      <soap12:operation soapAction='http://classification' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='conceptExtraction'>
      <soap12:operation soapAction='http://conceptExtraction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='entityExtraction'>
      <soap12:operation soapAction='http://entityExtraction' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='hashtagSuggestion'>
      <soap12:operation soapAction='http://hashtagSuggestion' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='languageDetection'>
      <soap12:operation soapAction='http://languageDetection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='microformats'>
      <soap12:operation soapAction='http://microformats' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='related'>
      <soap12:operation soapAction='http://related' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sentimentAnalysis'>
      <soap12:operation soapAction='http://sentimentAnalysis' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='summarization'>
      <soap12:operation soapAction='http://summarization' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='textAnalysis'>
    <documentation>aYLIEN Text API is a package of Natural Language Processing Information Retrieval and Machine Learning tools that allow developers to extract meaning and insights from documents with ease</documentation>
    <port name='textAnalysisPort' binding='tns:textAnalysisBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://textAnalysis' />
    </port>
  </service>
</definitions>