<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/appsbuilder/' name='appsbuilder' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/appsbuilder/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/appsbuilder/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/appsbuilder/'>
      <xsd:element name='addApnCertificateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addApnCertificateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addCertificateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addCertificateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addWebRedirectToMobileParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addWebRedirectToMobileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addEditFeedItemParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='addEditFeedItemResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='assignAppToUserParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='assignAppToUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='buildAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='buildAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='checkFeedUrlParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='checkFeedUrlResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cloneAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='cloneAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='createFeedResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppLayoutoptionValueParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppLayoutoptionValueResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppStyleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteAppStyleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteCertificateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteCertificateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteFeedParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteFeedResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteFeedItemParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='itemid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteFeedItemResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='disableAppAuthParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='disableAppAuthResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='editFeedParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='editFeedResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enableAppAuthParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enableAppAuthResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enableCustomAppAuthParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enableCustomAppAuthResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAdvStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAdvStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='inmobi' type='xsd:string' minOccurs='0' />
            <xsd:element name='inmobi_verification' type='xsd:string' minOccurs='0' />
            <xsd:element name='mobfox' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='neomobile' type='xsd:string' minOccurs='0' />
            <xsd:element name='custom' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='active' type='xsd:int' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='admob' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='adsense' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getApnCertificateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getApnCertificateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppContentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppContentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='layout' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='descrizione' type='xsd:string' minOccurs='0' />
            <xsd:element name='img' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='nome' type='xsd:string' minOccurs='0' />
            <xsd:element name='cell' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='text_bgalpha' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='overlay' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='text_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='imgsize' type='xsd:int' maxOccurs='unbounded' />
                  <xsd:element name='text_valign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='img_style' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='cell_valign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='bgcolor' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='text_position' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='img_halign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='bgalpha' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='img_valign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='text_align' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='pageoption' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='auth' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='logouturl' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='registerurl' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='loginurl' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='checkurl' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='message' type='xsd:string' minOccurs='0' />
                        <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='disabled' type='xsd:boolean' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='layoutoption' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='rotate' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='hideDescription' type='xsd:int' minOccurs='0' />
                  <xsd:element name='ipadautoopen' type='xsd:int' minOccurs='0' />
                  <xsd:element name='nrows' type='xsd:int' minOccurs='0' />
                  <xsd:element name='scroll' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='valign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='win8' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='icon_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='page_layout' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='bgimg' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='home_layout' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='banners' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='portrait' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='width' type='xsd:int' minOccurs='0' />
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='landscape' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='width' type='xsd:int' minOccurs='0' />
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='cell_margin' type='xsd:int' maxOccurs='unbounded' />
                  <xsd:element name='autoopen' type='xsd:int' minOccurs='0' />
                  <xsd:element name='hideTitle' type='xsd:int' minOccurs='0' />
                  <xsd:element name='row_height' type='xsd:int' minOccurs='0' />
                  <xsd:element name='width' type='xsd:int' minOccurs='0' />
                  <xsd:element name='colorscheme' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='row_even_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_odd_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='col_even_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_odd_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='row_even_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='row_odd_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='row_odd_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_even_bgalpha' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='halign' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='child' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='option' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='add' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='txt' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='img' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='backbtn_for_webview' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='cache' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='urltype' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='subtype' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='values' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:string' minOccurs='0' />
                        <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='open' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppInfosParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='app_icon' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='titolo' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='keywords' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='url_support' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='splash_image' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='dns' type='xsd:string' minOccurs='0' />
            <xsd:element name='language' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='bundle_apple' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='email_support' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='descrizione' type='xsd:string' minOccurs='0' />
            <xsd:element name='public' type='xsd:int' minOccurs='0' />
            <xsd:element name='bundle_android' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='phone' type='xsd:int' minOccurs='0' />
            <xsd:element name='privacy_url' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='user' type='xsd:int' minOccurs='0' />
            <xsd:element name='google_verification' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='updated' type='xsd:string' minOccurs='0' />
            <xsd:element name='infos' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppLayoutParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppLayoutResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='layout' type='xsd:string' minOccurs='0' />
            <xsd:element name='layoutoption' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='rotate' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='hideDescription' type='xsd:int' minOccurs='0' />
                  <xsd:element name='ipadautoopen' type='xsd:int' minOccurs='0' />
                  <xsd:element name='nrows' type='xsd:int' minOccurs='0' />
                  <xsd:element name='scroll' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='valign' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='win8' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='icon_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='page_layout' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='bgimg' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='home_layout' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='banners' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='portrait' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='width' type='xsd:int' minOccurs='0' />
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='landscape' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='width' type='xsd:int' minOccurs='0' />
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='cell_margin' type='xsd:int' maxOccurs='unbounded' />
                  <xsd:element name='autoopen' type='xsd:int' minOccurs='0' />
                  <xsd:element name='hideTitle' type='xsd:int' minOccurs='0' />
                  <xsd:element name='row_height' type='xsd:int' minOccurs='0' />
                  <xsd:element name='width' type='xsd:int' minOccurs='0' />
                  <xsd:element name='colorscheme' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='row_even_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_odd_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='col_even_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_odd_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='row_even_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='row_odd_bgalpha' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='row_odd_bgcolor' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='col_even_bgalpha' type='xsd:decimal' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='halign' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppQualityParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppQualityResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppStyleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAppStyleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='header2_480_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_back_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_bb10_portrait' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_landscape_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_bgcolor' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_bb10_portrait' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_font_android' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_bgcolor' type='xsd:string' minOccurs='0' />
            <xsd:element name='footer_share_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_title_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='header2_title_font_android' type='xsd:string' minOccurs='0' />
            <xsd:element name='defaultimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='header2_768_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_ipad_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_title_color' type='xsd:string' minOccurs='0' />
            <xsd:element name='footer_prev_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_ipad2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_portrait_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_ipad2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_desc_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='header2_568_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_bgcolor' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='cat_desc_font' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_desc_font_android' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_option_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='feed_desc_font_windows' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_320_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_portrait_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_bb10_landscape' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_font' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_font_apple' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_title_font_apple' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_font_windows' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_desc_font_apple' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_landscape_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_color' type='xsd:string' minOccurs='0' />
            <xsd:element name='footer_next_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_font_apple' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_title_font_windows' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='feed_desc_font' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_desc_font_android' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_704_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_font' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_320_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_ipad_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_bgcolor' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='cat_desc_color' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_568_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_landscape2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg2_menu_portrait2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_color' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_menu_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_title_font_android' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_768_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_update_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='footer_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_portrait2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='bg_menu_landscape2_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_title_font' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_1024_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_480_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='bg2_menu_bb10_landscape' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_credits_img' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_title_font_windows' type='xsd:string' minOccurs='0' />
            <xsd:element name='feed_desc_color' type='xsd:string' minOccurs='0' />
            <xsd:element name='header_704_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_desc_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='footer_alpha' type='xsd:int' minOccurs='0' />
            <xsd:element name='cat_desc_font_windows' type='xsd:string' minOccurs='0' />
            <xsd:element name='header2_1024_bgimg' type='xsd:string' minOccurs='0' />
            <xsd:element name='cat_desc_font_apple' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getCertificateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='element' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getCertificateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedContentJsonParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedContentJsonResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feed' type='xsd:int' minOccurs='0' />
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='thumb' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='latitude' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='link' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='index' type='xsd:int' minOccurs='0' />
            <xsd:element name='active' type='xsd:int' minOccurs='0' />
            <xsd:element name='description' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='title' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='longitude' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedContentXmlParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedContentXmlResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedInfosParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='feedid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='last' type='xsd:int' minOccurs='0' />
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='orderby' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='user' type='xsd:int' minOccurs='0' />
            <xsd:element name='order' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedSpecificationsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedSpecificationsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedTypesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFeedsInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='last' type='xsd:int' minOccurs='0' />
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='orderby' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='user' type='xsd:int' minOccurs='0' />
            <xsd:element name='order' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFormResultsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='formid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getFormResultsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getLastBuildingInfosParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='iddevice' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getLastBuildingInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getNextBuildIdParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getNextBuildIdResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSentMessagesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='limit' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSentMessagesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='message' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getThemesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserAppsInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='app_icon' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='titolo' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='keywords' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='url_support' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='data' type='xsd:string' minOccurs='0' />
            <xsd:element name='splash_image' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='dns' type='xsd:string' minOccurs='0' />
            <xsd:element name='language' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='bundle_apple' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='email_support' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='descrizione' type='xsd:string' minOccurs='0' />
            <xsd:element name='public' type='xsd:int' minOccurs='0' />
            <xsd:element name='bundle_android' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='phone' type='xsd:int' minOccurs='0' />
            <xsd:element name='privacy_url' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='user' type='xsd:int' minOccurs='0' />
            <xsd:element name='google_verification' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='updated' type='xsd:string' minOccurs='0' />
            <xsd:element name='infos' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getUserThemesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='isBuildingAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='device' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='isBuildingAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loginAppsbuilderUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loginUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='logoutAppsbuilderUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='logoutUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registerAppsbuilderUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='registerUserResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='replaceAppStyleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='replaceAppStyleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sendMessageParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='sendMessageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAdvStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='enable' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAdvStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAdvValuesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAdvValuesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppContentParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppContentResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppExpireTimeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppExpiredParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppExpiredResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutoptionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutoptionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutoptionValuesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='option' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppLayoutoptionValuesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppPaidParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppPaidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppRotationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='state' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppRotationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppStyleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppStyleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppThemeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='appid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setAppThemeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setBuildOptionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='setBuildOptionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAppInfosParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='updateAppInfosResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='upgradeAppParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='upgradeAppResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='addApnCertificateRequestMessage'>
    <part name='parameters' element='tns:addApnCertificateParameters' />
  </message>
  <message name='addApnCertificateResponseMessage'>
    <part name='response' element='tns:addApnCertificateResponse' />
  </message>
  <message name='addCertificateRequestMessage'>
    <part name='parameters' element='tns:addCertificateParameters' />
  </message>
  <message name='addCertificateResponseMessage'>
    <part name='response' element='tns:addCertificateResponse' />
  </message>
  <message name='addWebRedirectToMobileRequestMessage'>
    <part name='parameters' element='tns:addWebRedirectToMobileParameters' />
  </message>
  <message name='addWebRedirectToMobileResponseMessage'>
    <part name='response' element='tns:addWebRedirectToMobileResponse' />
  </message>
  <message name='addEditFeedItemRequestMessage'>
    <part name='parameters' element='tns:addEditFeedItemParameters' />
  </message>
  <message name='addEditFeedItemResponseMessage'>
    <part name='response' element='tns:addEditFeedItemResponse' />
  </message>
  <message name='assignAppToUserRequestMessage'>
    <part name='parameters' element='tns:assignAppToUserParameters' />
  </message>
  <message name='assignAppToUserResponseMessage'>
    <part name='response' element='tns:assignAppToUserResponse' />
  </message>
  <message name='buildAppRequestMessage'>
    <part name='parameters' element='tns:buildAppParameters' />
  </message>
  <message name='buildAppResponseMessage'>
    <part name='response' element='tns:buildAppResponse' />
  </message>
  <message name='checkFeedUrlRequestMessage'>
    <part name='parameters' element='tns:checkFeedUrlParameters' />
  </message>
  <message name='checkFeedUrlResponseMessage'>
    <part name='response' element='tns:checkFeedUrlResponse' />
  </message>
  <message name='cloneAppRequestMessage'>
    <part name='parameters' element='tns:cloneAppParameters' />
  </message>
  <message name='cloneAppResponseMessage'>
    <part name='response' element='tns:cloneAppResponse' />
  </message>
  <message name='createAppRequestMessage' />
  <message name='createAppResponseMessage'>
    <part name='response' element='tns:createAppResponse' />
  </message>
  <message name='createFeedRequestMessage' />
  <message name='createFeedResponseMessage'>
    <part name='response' element='tns:createFeedResponse' />
  </message>
  <message name='deleteAppRequestMessage'>
    <part name='parameters' element='tns:deleteAppParameters' />
  </message>
  <message name='deleteAppResponseMessage'>
    <part name='response' element='tns:deleteAppResponse' />
  </message>
  <message name='deleteAppLayoutoptionValueRequestMessage'>
    <part name='parameters' element='tns:deleteAppLayoutoptionValueParameters' />
  </message>
  <message name='deleteAppLayoutoptionValueResponseMessage'>
    <part name='response' element='tns:deleteAppLayoutoptionValueResponse' />
  </message>
  <message name='deleteAppStyleRequestMessage'>
    <part name='parameters' element='tns:deleteAppStyleParameters' />
  </message>
  <message name='deleteAppStyleResponseMessage'>
    <part name='response' element='tns:deleteAppStyleResponse' />
  </message>
  <message name='deleteCertificateRequestMessage'>
    <part name='parameters' element='tns:deleteCertificateParameters' />
  </message>
  <message name='deleteCertificateResponseMessage'>
    <part name='response' element='tns:deleteCertificateResponse' />
  </message>
  <message name='deleteFeedRequestMessage'>
    <part name='parameters' element='tns:deleteFeedParameters' />
  </message>
  <message name='deleteFeedResponseMessage'>
    <part name='response' element='tns:deleteFeedResponse' />
  </message>
  <message name='deleteFeedItemRequestMessage'>
    <part name='parameters' element='tns:deleteFeedItemParameters' />
  </message>
  <message name='deleteFeedItemResponseMessage'>
    <part name='response' element='tns:deleteFeedItemResponse' />
  </message>
  <message name='disableAppAuthRequestMessage'>
    <part name='parameters' element='tns:disableAppAuthParameters' />
  </message>
  <message name='disableAppAuthResponseMessage'>
    <part name='response' element='tns:disableAppAuthResponse' />
  </message>
  <message name='editFeedRequestMessage'>
    <part name='parameters' element='tns:editFeedParameters' />
  </message>
  <message name='editFeedResponseMessage'>
    <part name='response' element='tns:editFeedResponse' />
  </message>
  <message name='enableAppAuthRequestMessage'>
    <part name='parameters' element='tns:enableAppAuthParameters' />
  </message>
  <message name='enableAppAuthResponseMessage'>
    <part name='response' element='tns:enableAppAuthResponse' />
  </message>
  <message name='enableCustomAppAuthRequestMessage'>
    <part name='parameters' element='tns:enableCustomAppAuthParameters' />
  </message>
  <message name='enableCustomAppAuthResponseMessage'>
    <part name='response' element='tns:enableCustomAppAuthResponse' />
  </message>
  <message name='getAdvStatusRequestMessage'>
    <part name='parameters' element='tns:getAdvStatusParameters' />
  </message>
  <message name='getAdvStatusResponseMessage'>
    <part name='response' element='tns:getAdvStatusResponse' />
  </message>
  <message name='getApnCertificateRequestMessage'>
    <part name='parameters' element='tns:getApnCertificateParameters' />
  </message>
  <message name='getApnCertificateResponseMessage'>
    <part name='response' element='tns:getApnCertificateResponse' />
  </message>
  <message name='getAppRequestMessage'>
    <part name='parameters' element='tns:getAppParameters' />
  </message>
  <message name='getAppResponseMessage'>
    <part name='response' element='tns:getAppResponse' />
  </message>
  <message name='getAppContentRequestMessage'>
    <part name='parameters' element='tns:getAppContentParameters' />
  </message>
  <message name='getAppContentResponseMessage'>
    <part name='response' element='tns:getAppContentResponse' />
  </message>
  <message name='getAppInfosRequestMessage'>
    <part name='parameters' element='tns:getAppInfosParameters' />
  </message>
  <message name='getAppInfosResponseMessage'>
    <part name='response' element='tns:getAppInfosResponse' />
  </message>
  <message name='getAppLayoutRequestMessage'>
    <part name='parameters' element='tns:getAppLayoutParameters' />
  </message>
  <message name='getAppLayoutResponseMessage'>
    <part name='response' element='tns:getAppLayoutResponse' />
  </message>
  <message name='getAppQualityRequestMessage'>
    <part name='parameters' element='tns:getAppQualityParameters' />
  </message>
  <message name='getAppQualityResponseMessage'>
    <part name='response' element='tns:getAppQualityResponse' />
  </message>
  <message name='getAppStyleRequestMessage'>
    <part name='parameters' element='tns:getAppStyleParameters' />
  </message>
  <message name='getAppStyleResponseMessage'>
    <part name='response' element='tns:getAppStyleResponse' />
  </message>
  <message name='getCertificateRequestMessage'>
    <part name='parameters' element='tns:getCertificateParameters' />
  </message>
  <message name='getCertificateResponseMessage'>
    <part name='response' element='tns:getCertificateResponse' />
  </message>
  <message name='getFeedContentJsonRequestMessage'>
    <part name='parameters' element='tns:getFeedContentJsonParameters' />
  </message>
  <message name='getFeedContentJsonResponseMessage'>
    <part name='response' element='tns:getFeedContentJsonResponse' />
  </message>
  <message name='getFeedContentXmlRequestMessage'>
    <part name='parameters' element='tns:getFeedContentXmlParameters' />
  </message>
  <message name='getFeedContentXmlResponseMessage'>
    <part name='response' element='tns:getFeedContentXmlResponse' />
  </message>
  <message name='getFeedInfosRequestMessage'>
    <part name='parameters' element='tns:getFeedInfosParameters' />
  </message>
  <message name='getFeedInfosResponseMessage'>
    <part name='response' element='tns:getFeedInfosResponse' />
  </message>
  <message name='getFeedSpecificationsRequestMessage'>
    <part name='parameters' element='tns:getFeedSpecificationsParameters' />
  </message>
  <message name='getFeedSpecificationsResponseMessage'>
    <part name='response' element='tns:getFeedSpecificationsResponse' />
  </message>
  <message name='getFeedTypesRequestMessage' />
  <message name='getFeedTypesResponseMessage'>
    <part name='response' element='tns:getFeedTypesResponse' />
  </message>
  <message name='getFeedsInfosRequestMessage' />
  <message name='getFeedsInfosResponseMessage'>
    <part name='response' element='tns:getFeedsInfosResponse' />
  </message>
  <message name='getFormResultsRequestMessage'>
    <part name='parameters' element='tns:getFormResultsParameters' />
  </message>
  <message name='getFormResultsResponseMessage'>
    <part name='response' element='tns:getFormResultsResponse' />
  </message>
  <message name='getLastBuildingInfosRequestMessage'>
    <part name='parameters' element='tns:getLastBuildingInfosParameters' />
  </message>
  <message name='getLastBuildingInfosResponseMessage'>
    <part name='response' element='tns:getLastBuildingInfosResponse' />
  </message>
  <message name='getNextBuildIdRequestMessage'>
    <part name='parameters' element='tns:getNextBuildIdParameters' />
  </message>
  <message name='getNextBuildIdResponseMessage'>
    <part name='response' element='tns:getNextBuildIdResponse' />
  </message>
  <message name='getSentMessagesRequestMessage'>
    <part name='parameters' element='tns:getSentMessagesParameters' />
  </message>
  <message name='getSentMessagesResponseMessage'>
    <part name='response' element='tns:getSentMessagesResponse' />
  </message>
  <message name='getThemesRequestMessage' />
  <message name='getThemesResponseMessage'>
    <part name='response' element='tns:getThemesResponse' />
  </message>
  <message name='getUserAppsInfosRequestMessage' />
  <message name='getUserAppsInfosResponseMessage'>
    <part name='response' element='tns:getUserAppsInfosResponse' />
  </message>
  <message name='getUserThemesRequestMessage' />
  <message name='getUserThemesResponseMessage'>
    <part name='response' element='tns:getUserThemesResponse' />
  </message>
  <message name='isBuildingAppRequestMessage'>
    <part name='parameters' element='tns:isBuildingAppParameters' />
  </message>
  <message name='isBuildingAppResponseMessage'>
    <part name='response' element='tns:isBuildingAppResponse' />
  </message>
  <message name='loginAppsbuilderUserRequestMessage' />
  <message name='loginAppsbuilderUserResponseMessage'>
    <part name='response' element='tns:loginAppsbuilderUserResponse' />
  </message>
  <message name='loginUserRequestMessage' />
  <message name='loginUserResponseMessage'>
    <part name='response' element='tns:loginUserResponse' />
  </message>
  <message name='logoutAppsbuilderUserRequestMessage' />
  <message name='logoutAppsbuilderUserResponseMessage'>
    <part name='response' element='tns:logoutAppsbuilderUserResponse' />
  </message>
  <message name='logoutUserRequestMessage' />
  <message name='logoutUserResponseMessage'>
    <part name='response' element='tns:logoutUserResponse' />
  </message>
  <message name='registerAppsbuilderUserRequestMessage' />
  <message name='registerAppsbuilderUserResponseMessage'>
    <part name='response' element='tns:registerAppsbuilderUserResponse' />
  </message>
  <message name='registerUserRequestMessage' />
  <message name='registerUserResponseMessage'>
    <part name='response' element='tns:registerUserResponse' />
  </message>
  <message name='replaceAppStyleRequestMessage'>
    <part name='parameters' element='tns:replaceAppStyleParameters' />
  </message>
  <message name='replaceAppStyleResponseMessage'>
    <part name='response' element='tns:replaceAppStyleResponse' />
  </message>
  <message name='sendMessageRequestMessage'>
    <part name='parameters' element='tns:sendMessageParameters' />
  </message>
  <message name='sendMessageResponseMessage'>
    <part name='response' element='tns:sendMessageResponse' />
  </message>
  <message name='setAdvStatusRequestMessage'>
    <part name='parameters' element='tns:setAdvStatusParameters' />
  </message>
  <message name='setAdvStatusResponseMessage'>
    <part name='response' element='tns:setAdvStatusResponse' />
  </message>
  <message name='setAdvValuesRequestMessage'>
    <part name='parameters' element='tns:setAdvValuesParameters' />
  </message>
  <message name='setAdvValuesResponseMessage'>
    <part name='response' element='tns:setAdvValuesResponse' />
  </message>
  <message name='setAppContentRequestMessage'>
    <part name='parameters' element='tns:setAppContentParameters' />
  </message>
  <message name='setAppContentResponseMessage'>
    <part name='response' element='tns:setAppContentResponse' />
  </message>
  <message name='setAppExpireTimeRequestMessage' />
  <message name='setAppExpireTimeResponseMessage'>
    <part name='response' element='tns:setAppExpireTimeResponse' />
  </message>
  <message name='setAppExpiredRequestMessage'>
    <part name='parameters' element='tns:setAppExpiredParameters' />
  </message>
  <message name='setAppExpiredResponseMessage'>
    <part name='response' element='tns:setAppExpiredResponse' />
  </message>
  <message name='setAppLayoutRequestMessage'>
    <part name='parameters' element='tns:setAppLayoutParameters' />
  </message>
  <message name='setAppLayoutResponseMessage'>
    <part name='response' element='tns:setAppLayoutResponse' />
  </message>
  <message name='setAppLayoutoptionRequestMessage'>
    <part name='parameters' element='tns:setAppLayoutoptionParameters' />
  </message>
  <message name='setAppLayoutoptionResponseMessage'>
    <part name='response' element='tns:setAppLayoutoptionResponse' />
  </message>
  <message name='setAppLayoutoptionValuesRequestMessage'>
    <part name='parameters' element='tns:setAppLayoutoptionValuesParameters' />
  </message>
  <message name='setAppLayoutoptionValuesResponseMessage'>
    <part name='response' element='tns:setAppLayoutoptionValuesResponse' />
  </message>
  <message name='setAppPaidRequestMessage'>
    <part name='parameters' element='tns:setAppPaidParameters' />
  </message>
  <message name='setAppPaidResponseMessage'>
    <part name='response' element='tns:setAppPaidResponse' />
  </message>
  <message name='setAppRotationRequestMessage'>
    <part name='parameters' element='tns:setAppRotationParameters' />
  </message>
  <message name='setAppRotationResponseMessage'>
    <part name='response' element='tns:setAppRotationResponse' />
  </message>
  <message name='setAppStyleRequestMessage'>
    <part name='parameters' element='tns:setAppStyleParameters' />
  </message>
  <message name='setAppStyleResponseMessage'>
    <part name='response' element='tns:setAppStyleResponse' />
  </message>
  <message name='setAppThemeRequestMessage'>
    <part name='parameters' element='tns:setAppThemeParameters' />
  </message>
  <message name='setAppThemeResponseMessage'>
    <part name='response' element='tns:setAppThemeResponse' />
  </message>
  <message name='setBuildOptionRequestMessage'>
    <part name='parameters' element='tns:setBuildOptionParameters' />
  </message>
  <message name='setBuildOptionResponseMessage'>
    <part name='response' element='tns:setBuildOptionResponse' />
  </message>
  <message name='updateAppInfosRequestMessage'>
    <part name='parameters' element='tns:updateAppInfosParameters' />
  </message>
  <message name='updateAppInfosResponseMessage'>
    <part name='response' element='tns:updateAppInfosResponse' />
  </message>
  <message name='upgradeAppRequestMessage'>
    <part name='parameters' element='tns:upgradeAppParameters' />
  </message>
  <message name='upgradeAppResponseMessage'>
    <part name='response' element='tns:upgradeAppResponse' />
  </message>
  <portType name='appsbuilderPortType'>
    <operation name='addApnCertificate'>
      <documentation>allows an existing user to upload an Apple Push Notification Certificate for one of his apps</documentation>
      <input message='tns:addApnCertificateRequestMessage' name='addApnCertificateInput' />
      <output message='tns:addApnCertificateResponseMessage' name='addApnCertificateOutput' />
    </operation>
    <operation name='addCertificate'>
      <documentation>allows an existing user to upload iOS and Android certificates and keys required to compile a specific app package</documentation>
      <input message='tns:addCertificateRequestMessage' name='addCertificateInput' />
      <output message='tns:addCertificateResponseMessage' name='addCertificateOutput' />
    </operation>
    <operation name='addWebRedirectToMobile'>
      <documentation>allows an existing user to set up for one of his apps a redirect script that can be used on a website to display a clickable message to visitors if a native version of the app is available based on their device OS The script will be available at the following URL http www apps builder com libs redirect id</documentation>
      <input message='tns:addWebRedirectToMobileRequestMessage' name='addWebRedirectToMobileInput' />
      <output message='tns:addWebRedirectToMobileResponseMessage' name='addWebRedirectToMobileOutput' />
    </operation>
    <operation name='addEditFeedItem'>
      <documentation>allows an existing user to add or edit an item for one of his feeds Returns the index of the newly created or edited item More accurate informations can be found here https appsbuilder atlassian net wiki display res Feed Types</documentation>
      <input message='tns:addEditFeedItemRequestMessage' name='addEditFeedItemInput' />
      <output message='tns:addEditFeedItemResponseMessage' name='addEditFeedItemOutput' />
    </operation>
    <operation name='assignAppToUser'>
      <documentation>allows a CMS admin superuser to assign an app to a user</documentation>
      <input message='tns:assignAppToUserRequestMessage' name='assignAppToUserInput' />
      <output message='tns:assignAppToUserResponseMessage' name='assignAppToUserOutput' />
    </operation>
    <operation name='buildApp'>
      <documentation>allows an existing user to compile and create the package of one of his apps for a specific device type Returns a JSON with the position of the app in the building queue on success or an error message for e g in case the app has already been inserted in the queue The Is Building function should be used to test building procedure completion</documentation>
      <input message='tns:buildAppRequestMessage' name='buildAppInput' />
      <output message='tns:buildAppResponseMessage' name='buildAppOutput' />
    </operation>
    <operation name='checkFeedUrl'>
      <documentation>returns all the available feed contents from the passed URL</documentation>
      <input message='tns:checkFeedUrlRequestMessage' name='checkFeedUrlInput' />
      <output message='tns:checkFeedUrlResponseMessage' name='checkFeedUrlOutput' />
    </operation>
    <operation name='cloneApp'>
      <documentation>allows an existing user to clone one of his apps Returns the newly created app ID or false</documentation>
      <input message='tns:cloneAppRequestMessage' name='cloneAppInput' />
      <output message='tns:cloneAppResponseMessage' name='cloneAppOutput' />
    </operation>
    <operation name='createApp'>
      <documentation>allows an existing user to create a new app Returns the newly created app ID or false</documentation>
      <input message='tns:createAppRequestMessage' name='createAppInput' />
      <output message='tns:createAppResponseMessage' name='createAppOutput' />
    </operation>
    <operation name='createFeed'>
      <documentation>allows an existing user to create a new feed Returns the ID of the newly created feed or an error message</documentation>
      <input message='tns:createFeedRequestMessage' name='createFeedInput' />
      <output message='tns:createFeedResponseMessage' name='createFeedOutput' />
    </operation>
    <operation name='deleteApp'>
      <documentation>allows an existing user to delete one of his apps Returns false in case of error</documentation>
      <input message='tns:deleteAppRequestMessage' name='deleteAppInput' />
      <output message='tns:deleteAppResponseMessage' name='deleteAppOutput' />
    </operation>
    <operation name='deleteAppLayoutoptionValue'>
      <documentation>allows an existing user to remove an app first page layoutoption value</documentation>
      <input message='tns:deleteAppLayoutoptionValueRequestMessage' name='deleteAppLayoutoptionValueInput' />
      <output message='tns:deleteAppLayoutoptionValueResponseMessage' name='deleteAppLayoutoptionValueOutput' />
    </operation>
    <operation name='deleteAppStyle'>
      <documentation>allows an existing user to delete one of his apps style options</documentation>
      <input message='tns:deleteAppStyleRequestMessage' name='deleteAppStyleInput' />
      <output message='tns:deleteAppStyleResponseMessage' name='deleteAppStyleOutput' />
    </operation>
    <operation name='deleteCertificate'>
      <documentation>allows an existing user to remove his uploaded iOS and Android certificates and keys for a specific app</documentation>
      <input message='tns:deleteCertificateRequestMessage' name='deleteCertificateInput' />
      <output message='tns:deleteCertificateResponseMessage' name='deleteCertificateOutput' />
    </operation>
    <operation name='deleteFeed'>
      <documentation>allows an existing user to delete one of his feeds Returns on success</documentation>
      <input message='tns:deleteFeedRequestMessage' name='deleteFeedInput' />
      <output message='tns:deleteFeedResponseMessage' name='deleteFeedOutput' />
    </operation>
    <operation name='deleteFeedItem'>
      <documentation>allows an existing user to delete an item for one of his feeds</documentation>
      <input message='tns:deleteFeedItemRequestMessage' name='deleteFeedItemInput' />
      <output message='tns:deleteFeedItemResponseMessage' name='deleteFeedItemOutput' />
    </operation>
    <operation name='disableAppAuth'>
      <documentation>allows an existing user to turn off access control on one of his apps</documentation>
      <input message='tns:disableAppAuthRequestMessage' name='disableAppAuthInput' />
      <output message='tns:disableAppAuthResponseMessage' name='disableAppAuthOutput' />
    </operation>
    <operation name='editFeed'>
      <documentation>allows an existing user to edit one of his feeds</documentation>
      <input message='tns:editFeedRequestMessage' name='editFeedInput' />
      <output message='tns:editFeedResponseMessage' name='editFeedOutput' />
    </operation>
    <operation name='enableAppAuth'>
      <documentation>allows an existing user to turn on an access control on one of his apps</documentation>
      <input message='tns:enableAppAuthRequestMessage' name='enableAppAuthInput' />
      <output message='tns:enableAppAuthResponseMessage' name='enableAppAuthOutput' />
    </operation>
    <operation name='enableCustomAppAuth'>
      <documentation>allows an existing user to turn on and set a Custom access control on one of his apps How the Custom access control works All the passed URLs should implement a login check logout register login by themself On each request an unique identifier is sent in the HTTP headers the header name is X APPSBUILDER ID Each passed URLs must return on success and on failure</documentation>
      <input message='tns:enableCustomAppAuthRequestMessage' name='enableCustomAppAuthInput' />
      <output message='tns:enableCustomAppAuthResponseMessage' name='enableCustomAppAuthOutput' />
    </operation>
    <operation name='getAdvStatus'>
      <documentation>allow an existing user to get the app advertissement network settings</documentation>
      <input message='tns:getAdvStatusRequestMessage' name='getAdvStatusInput' />
      <output message='tns:getAdvStatusResponseMessage' name='getAdvStatusOutput' />
    </operation>
    <operation name='getApnCertificate'>
      <documentation>allows an existing user to download the previously uploaded Apple Push Notification Certificate for one of his apps Returns the p binary file if available otherwise returns an empty file</documentation>
      <input message='tns:getApnCertificateRequestMessage' name='getApnCertificateInput' />
      <output message='tns:getApnCertificateResponseMessage' name='getApnCertificateOutput' />
    </operation>
    <operation name='getApp'>
      <documentation>allows an existing user to download the compiled package of one of his apps for a specific device type Returns the app binary file</documentation>
      <input message='tns:getAppRequestMessage' name='getAppInput' />
      <output message='tns:getAppResponseMessage' name='getAppOutput' />
    </operation>
    <operation name='getAppContent'>
      <documentation>allows an existing user to retrieve one of his apps content Returns the content JSON structure or false</documentation>
      <input message='tns:getAppContentRequestMessage' name='getAppContentInput' />
      <output message='tns:getAppContentResponseMessage' name='getAppContentOutput' />
    </operation>
    <operation name='getAppInfos'>
      <documentation>allows an existing user to retrieve infos of one of his apps Returns a JSON with its infos or false</documentation>
      <input message='tns:getAppInfosRequestMessage' name='getAppInfosInput' />
      <output message='tns:getAppInfosResponseMessage' name='getAppInfosOutput' />
    </operation>
    <operation name='getAppLayout'>
      <documentation>allows an existing user to get one of his apps first page layout and layoutoption values Returns a JSON hash containing those two values</documentation>
      <input message='tns:getAppLayoutRequestMessage' name='getAppLayoutInput' />
      <output message='tns:getAppLayoutResponseMessage' name='getAppLayoutOutput' />
    </operation>
    <operation name='getAppQuality'>
      <documentation>allows an existing user to retrieve the quality of an app based on an AppsBuilder rating Returns a number which must be considered a percentage</documentation>
      <input message='tns:getAppQualityRequestMessage' name='getAppQualityInput' />
      <output message='tns:getAppQualityResponseMessage' name='getAppQualityOutput' />
    </operation>
    <operation name='getAppStyle'>
      <documentation>allows an existing user to get one of his app style values To obtain the value for a KEY pass that key as the style parameter To obtain all the key values available pass all styles as style parameter Returns a JSON hash containing the set values</documentation>
      <input message='tns:getAppStyleRequestMessage' name='getAppStyleInput' />
      <output message='tns:getAppStyleResponseMessage' name='getAppStyleOutput' />
    </operation>
    <operation name='getCertificate'>
      <documentation>allows an existing user to retrieve his uploaded iOS and Android certificates and keys for a specific app Returns the binary file or a string with the password</documentation>
      <input message='tns:getCertificateRequestMessage' name='getCertificateInput' />
      <output message='tns:getCertificateResponseMessage' name='getCertificateOutput' />
    </operation>
    <operation name='getFeedContentJson'>
      <documentation>allows an existing user to get the content of a feed Returns a JSON array of feed items</documentation>
      <input message='tns:getFeedContentJsonRequestMessage' name='getFeedContentJsonInput' />
      <output message='tns:getFeedContentJsonResponseMessage' name='getFeedContentJsonOutput' />
    </operation>
    <operation name='getFeedContentXml'>
      <documentation>allows an existing user to get the content of a feed Returns the XML format representation of the feed</documentation>
      <input message='tns:getFeedContentXmlRequestMessage' name='getFeedContentXmlInput' />
      <output message='tns:getFeedContentXmlResponseMessage' name='getFeedContentXmlOutput' />
    </operation>
    <operation name='getFeedInfos'>
      <documentation>allows an existing user to retrieve the informations for one of his feeds Returns a JSON object</documentation>
      <input message='tns:getFeedInfosRequestMessage' name='getFeedInfosInput' />
      <output message='tns:getFeedInfosResponseMessage' name='getFeedInfosOutput' />
    </operation>
    <operation name='getFeedSpecifications'>
      <documentation>allows an existing user to retrieve the feed specification for a defined type Returns a JSON array that describes the available fields for the feed item</documentation>
      <input message='tns:getFeedSpecificationsRequestMessage' name='getFeedSpecificationsInput' />
      <output message='tns:getFeedSpecificationsResponseMessage' name='getFeedSpecificationsOutput' />
    </operation>
    <operation name='getFeedTypes'>
      <documentation>allows an existing user to retrieve a list of the available feed types Returns a string with the possible types</documentation>
      <input message='tns:getFeedTypesRequestMessage' name='getFeedTypesInput' />
      <output message='tns:getFeedTypesResponseMessage' name='getFeedTypesOutput' />
    </operation>
    <operation name='getFeedsInfos'>
      <documentation>allows an existing user to retrieve the informations for all his feeds or for selected group of IDs Returns a JSON array</documentation>
      <input message='tns:getFeedsInfosRequestMessage' name='getFeedsInfosInput' />
      <output message='tns:getFeedsInfosResponseMessage' name='getFeedsInfosOutput' />
    </operation>
    <operation name='getFormResults'>
      <documentation>allows an existing user to retrieve the resulting data of a form requests A CSV file will be returned</documentation>
      <input message='tns:getFormResultsRequestMessage' name='getFormResultsInput' />
      <output message='tns:getFormResultsResponseMessage' name='getFormResultsOutput' />
    </operation>
    <operation name='getLastBuildingInfos'>
      <documentation>allows an user to retrieve the informations about the last app building process success errors and so on Returns a JSON with multiple keys</documentation>
      <input message='tns:getLastBuildingInfosRequestMessage' name='getLastBuildingInfosInput' />
      <output message='tns:getLastBuildingInfosResponseMessage' name='getLastBuildingInfosOutput' />
    </operation>
    <operation name='getNextBuildId'>
      <documentation>allows a user to get the next build ID used for his app by the Build App endpoint necessary in Is Build App Complete call Returns a number</documentation>
      <input message='tns:getNextBuildIdRequestMessage' name='getNextBuildIdInput' />
      <output message='tns:getNextBuildIdResponseMessage' name='getNextBuildIdOutput' />
    </operation>
    <operation name='getSentMessages'>
      <documentation>allows an existing user to retrieve the previously sent push notification messages for on of his apps specifying the number of results to be shown</documentation>
      <input message='tns:getSentMessagesRequestMessage' name='getSentMessagesInput' />
      <output message='tns:getSentMessagesResponseMessage' name='getSentMessagesOutput' />
    </operation>
    <operation name='getThemes'>
      <documentation>allows a user to retrieve the list of available themes Returns an hash of Themes</documentation>
      <input message='tns:getThemesRequestMessage' name='getThemesInput' />
      <output message='tns:getThemesResponseMessage' name='getThemesOutput' />
    </operation>
    <operation name='getUserAppsInfos'>
      <documentation>allows an existing user to retrieve all his apps infos Returns a JSON array of apps or an error text</documentation>
      <input message='tns:getUserAppsInfosRequestMessage' name='getUserAppsInfosInput' />
      <output message='tns:getUserAppsInfosResponseMessage' name='getUserAppsInfosOutput' />
    </operation>
    <operation name='getUserThemes'>
      <documentation>allows a user to retrieve its own custom Themes Returns an hash of Themes</documentation>
      <input message='tns:getUserThemesRequestMessage' name='getUserThemesInput' />
      <output message='tns:getUserThemesResponseMessage' name='getUserThemesOutput' />
    </operation>
    <operation name='isBuildingApp'>
      <documentation>allows a user to verify if the building process for his app launched through Build App is completed Returns a JSON object with is building boolean key</documentation>
      <input message='tns:isBuildingAppRequestMessage' name='isBuildingAppInput' />
      <output message='tns:isBuildingAppResponseMessage' name='isBuildingAppOutput' />
    </operation>
    <operation name='loginAppsbuilderUser'>
      <documentation>allows an existing user to login on the AppsBuilder website Notice this function acts on AppsBuilder platform not on CMS Returns an object with keys result with true in case of success otherwise false and access token that contains the token needed for authentication HTTP header see Readme page</documentation>
      <input message='tns:loginAppsbuilderUserRequestMessage' name='loginAppsbuilderUserInput' />
      <output message='tns:loginAppsbuilderUserResponseMessage' name='loginAppsbuilderUserOutput' />
    </operation>
    <operation name='loginUser'>
      <documentation>allows an existing user to login Returns an object with keys result with true in case of success otherwise false and access token that contains the token needed for authentication HTTP header see Readme page</documentation>
      <input message='tns:loginUserRequestMessage' name='loginUserInput' />
      <output message='tns:loginUserResponseMessage' name='loginUserOutput' />
    </operation>
    <operation name='logoutAppsbuilderUser'>
      <documentation>allows an existing and logged in user to logout on the AppsBuilder website Notice this function acts on AppsBuilder platform not on CMS</documentation>
      <input message='tns:logoutAppsbuilderUserRequestMessage' name='logoutAppsbuilderUserInput' />
      <output message='tns:logoutAppsbuilderUserResponseMessage' name='logoutAppsbuilderUserOutput' />
    </operation>
    <operation name='logoutUser'>
      <documentation>allows an existing and logged in user to logout</documentation>
      <input message='tns:logoutUserRequestMessage' name='logoutUserInput' />
      <output message='tns:logoutUserResponseMessage' name='logoutUserOutput' />
    </operation>
    <operation name='registerAppsbuilderUser'>
      <documentation>allows a new user to register on the AppsBuilder website Notice this function acts on AppsBuilder platform not on CMS Returns true or a text error with failure reasons</documentation>
      <input message='tns:registerAppsbuilderUserRequestMessage' name='registerAppsbuilderUserInput' />
      <output message='tns:registerAppsbuilderUserResponseMessage' name='registerAppsbuilderUserOutput' />
    </operation>
    <operation name='registerUser'>
      <documentation>allows a new user to register Returns the newly created user ID a number or a text error with failure reasons</documentation>
      <input message='tns:registerUserRequestMessage' name='registerUserInput' />
      <output message='tns:registerUserResponseMessage' name='registerUserOutput' />
    </operation>
    <operation name='replaceAppStyle'>
      <documentation>allows an existing user to replace previous style values for one of his apps New values should be passed as a list of parameters using the parameter name set to the style option name and the parameter value set to the style option value</documentation>
      <input message='tns:replaceAppStyleRequestMessage' name='replaceAppStyleInput' />
      <output message='tns:replaceAppStyleResponseMessage' name='replaceAppStyleOutput' />
    </operation>
    <operation name='sendMessage'>
      <documentation>allows an existing user to send a push notification message for one of his apps to all devices using it or to a specified group of users ID The message is added to the outgoing queue and could be considered surely delivered after minutes from the sending time Returns success or error for the respective state</documentation>
      <input message='tns:sendMessageRequestMessage' name='sendMessageInput' />
      <output message='tns:sendMessageResponseMessage' name='sendMessageOutput' />
    </operation>
    <operation name='setAdvStatus'>
      <documentation>allows an existing user to enable disable advertisement for one of his apps</documentation>
      <input message='tns:setAdvStatusRequestMessage' name='setAdvStatusInput' />
      <output message='tns:setAdvStatusResponseMessage' name='setAdvStatusOutput' />
    </operation>
    <operation name='setAdvValues'>
      <documentation>allows an existing user to set the values for his app advertisement services</documentation>
      <input message='tns:setAdvValuesRequestMessage' name='setAdvValuesInput' />
      <output message='tns:setAdvValuesResponseMessage' name='setAdvValuesOutput' />
    </operation>
    <operation name='setAppContent'>
      <documentation>allows an existing user to set the content of one of his apps Returns true on success or false on failure</documentation>
      <input message='tns:setAppContentRequestMessage' name='setAppContentInput' />
      <output message='tns:setAppContentResponseMessage' name='setAppContentOutput' />
    </operation>
    <operation name='setAppExpireTime'>
      <documentation>allows a CMS admin to set an Expire Time for an app</documentation>
      <input message='tns:setAppExpireTimeRequestMessage' name='setAppExpireTimeInput' />
      <output message='tns:setAppExpireTimeResponseMessage' name='setAppExpireTimeOutput' />
    </operation>
    <operation name='setAppExpired'>
      <documentation>allows a CMS admin to set an app as Expired which means that the user will still see his app on the dashboard but will not be able to edit it until when that app is set as Paid</documentation>
      <input message='tns:setAppExpiredRequestMessage' name='setAppExpiredInput' />
      <output message='tns:setAppExpiredResponseMessage' name='setAppExpiredOutput' />
    </operation>
    <operation name='setAppLayout'>
      <documentation>allows an existing user to set the app first page a new layout and a new layoutoption object</documentation>
      <input message='tns:setAppLayoutRequestMessage' name='setAppLayoutInput' />
      <output message='tns:setAppLayoutResponseMessage' name='setAppLayoutOutput' />
    </operation>
    <operation name='setAppLayoutoption'>
      <documentation>allows an existing user to set new layoutoption values of the first page for one of his apps</documentation>
      <input message='tns:setAppLayoutoptionRequestMessage' name='setAppLayoutoptionInput' />
      <output message='tns:setAppLayoutoptionResponseMessage' name='setAppLayoutoptionOutput' />
    </operation>
    <operation name='setAppLayoutoptionValues'>
      <documentation>allows an existing user to set new layoutoption values only the ones that have a complex structure for simple options see Set App Layoutoption of the first page for one of his apps The only possible options settable by this method are banner banners win The couples key value passed as arguments will be inserted into the new specified option The only admitted options are colorscheme banners win</documentation>
      <input message='tns:setAppLayoutoptionValuesRequestMessage' name='setAppLayoutoptionValuesInput' />
      <output message='tns:setAppLayoutoptionValuesResponseMessage' name='setAppLayoutoptionValuesOutput' />
    </operation>
    <operation name='setAppPaid'>
      <documentation>allows a CMS admin to set an app as Paid This action should take place after that a payment has occurred By now the owner of the app will be able to edit his app</documentation>
      <input message='tns:setAppPaidRequestMessage' name='setAppPaidInput' />
      <output message='tns:setAppPaidResponseMessage' name='setAppPaidOutput' />
    </operation>
    <operation name='setAppRotation'>
      <documentation>allows an existing user to enable or disable the rotation of one of his apps</documentation>
      <input message='tns:setAppRotationRequestMessage' name='setAppRotationInput' />
      <output message='tns:setAppRotationResponseMessage' name='setAppRotationOutput' />
    </operation>
    <operation name='setAppStyle'>
      <documentation>allows an existing user to set new style values for one of his apps New values should be passed as a list of parameters using the parameter name set to the style option name and the parameter value set to the style option value</documentation>
      <input message='tns:setAppStyleRequestMessage' name='setAppStyleInput' />
      <output message='tns:setAppStyleResponseMessage' name='setAppStyleOutput' />
    </operation>
    <operation name='setAppTheme'>
      <documentation>allows an existing user to set a new theme for one of his apps</documentation>
      <input message='tns:setAppThemeRequestMessage' name='setAppThemeInput' />
      <output message='tns:setAppThemeResponseMessage' name='setAppThemeOutput' />
    </operation>
    <operation name='setBuildOption'>
      <documentation>allows an existing user to set a building option on one of his apps</documentation>
      <input message='tns:setBuildOptionRequestMessage' name='setBuildOptionInput' />
      <output message='tns:setBuildOptionResponseMessage' name='setBuildOptionOutput' />
    </operation>
    <operation name='updateAppInfos'>
      <documentation>allows an existing user to update the infos for one of his apps Returns in case of success false otherwise All the parameters are optional</documentation>
      <input message='tns:updateAppInfosRequestMessage' name='updateAppInfosInput' />
      <output message='tns:updateAppInfosResponseMessage' name='updateAppInfosOutput' />
    </operation>
    <operation name='upgradeApp'>
      <documentation>allows an existing user to make effective the changes made to the offline version of his app copying them on the online version visible by users</documentation>
      <input message='tns:upgradeAppRequestMessage' name='upgradeAppInput' />
      <output message='tns:upgradeAppResponseMessage' name='upgradeAppOutput' />
    </operation>
  </portType>
  <binding name='appsbuilderBinding' type='tns:appsbuilderPortType'>
    <operation name='addApnCertificate'>
      <soap12:operation soapAction='http://addApnCertificate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addCertificate'>
      <soap12:operation soapAction='http://addCertificate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addWebRedirectToMobile'>
      <soap12:operation soapAction='http://addWebRedirectToMobile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='addEditFeedItem'>
      <soap12:operation soapAction='http://addEditFeedItem' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='assignAppToUser'>
      <soap12:operation soapAction='http://assignAppToUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='buildApp'>
      <soap12:operation soapAction='http://buildApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='checkFeedUrl'>
      <soap12:operation soapAction='http://checkFeedUrl' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='cloneApp'>
      <soap12:operation soapAction='http://cloneApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createApp'>
      <soap12:operation soapAction='http://createApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='createFeed'>
      <soap12:operation soapAction='http://createFeed' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteApp'>
      <soap12:operation soapAction='http://deleteApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAppLayoutoptionValue'>
      <soap12:operation soapAction='http://deleteAppLayoutoptionValue' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteAppStyle'>
      <soap12:operation soapAction='http://deleteAppStyle' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteCertificate'>
      <soap12:operation soapAction='http://deleteCertificate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteFeed'>
      <soap12:operation soapAction='http://deleteFeed' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='deleteFeedItem'>
      <soap12:operation soapAction='http://deleteFeedItem' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='disableAppAuth'>
      <soap12:operation soapAction='http://disableAppAuth' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='editFeed'>
      <soap12:operation soapAction='http://editFeed' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='enableAppAuth'>
      <soap12:operation soapAction='http://enableAppAuth' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='enableCustomAppAuth'>
      <soap12:operation soapAction='http://enableCustomAppAuth' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAdvStatus'>
      <soap12:operation soapAction='http://getAdvStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getApnCertificate'>
      <soap12:operation soapAction='http://getApnCertificate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getApp'>
      <soap12:operation soapAction='http://getApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAppContent'>
      <soap12:operation soapAction='http://getAppContent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAppInfos'>
      <soap12:operation soapAction='http://getAppInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAppLayout'>
      <soap12:operation soapAction='http://getAppLayout' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAppQuality'>
      <soap12:operation soapAction='http://getAppQuality' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAppStyle'>
      <soap12:operation soapAction='http://getAppStyle' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getCertificate'>
      <soap12:operation soapAction='http://getCertificate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedContentJson'>
      <soap12:operation soapAction='http://getFeedContentJson' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedContentXml'>
      <soap12:operation soapAction='http://getFeedContentXml' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedInfos'>
      <soap12:operation soapAction='http://getFeedInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedSpecifications'>
      <soap12:operation soapAction='http://getFeedSpecifications' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedTypes'>
      <soap12:operation soapAction='http://getFeedTypes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFeedsInfos'>
      <soap12:operation soapAction='http://getFeedsInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getFormResults'>
      <soap12:operation soapAction='http://getFormResults' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getLastBuildingInfos'>
      <soap12:operation soapAction='http://getLastBuildingInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getNextBuildId'>
      <soap12:operation soapAction='http://getNextBuildId' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getSentMessages'>
      <soap12:operation soapAction='http://getSentMessages' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getThemes'>
      <soap12:operation soapAction='http://getThemes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUserAppsInfos'>
      <soap12:operation soapAction='http://getUserAppsInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getUserThemes'>
      <soap12:operation soapAction='http://getUserThemes' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='isBuildingApp'>
      <soap12:operation soapAction='http://isBuildingApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='loginAppsbuilderUser'>
      <soap12:operation soapAction='http://loginAppsbuilderUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='loginUser'>
      <soap12:operation soapAction='http://loginUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='logoutAppsbuilderUser'>
      <soap12:operation soapAction='http://logoutAppsbuilderUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='logoutUser'>
      <soap12:operation soapAction='http://logoutUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='registerAppsbuilderUser'>
      <soap12:operation soapAction='http://registerAppsbuilderUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='registerUser'>
      <soap12:operation soapAction='http://registerUser' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='replaceAppStyle'>
      <soap12:operation soapAction='http://replaceAppStyle' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='sendMessage'>
      <soap12:operation soapAction='http://sendMessage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAdvStatus'>
      <soap12:operation soapAction='http://setAdvStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAdvValues'>
      <soap12:operation soapAction='http://setAdvValues' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppContent'>
      <soap12:operation soapAction='http://setAppContent' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppExpireTime'>
      <soap12:operation soapAction='http://setAppExpireTime' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppExpired'>
      <soap12:operation soapAction='http://setAppExpired' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppLayout'>
      <soap12:operation soapAction='http://setAppLayout' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppLayoutoption'>
      <soap12:operation soapAction='http://setAppLayoutoption' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppLayoutoptionValues'>
      <soap12:operation soapAction='http://setAppLayoutoptionValues' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppPaid'>
      <soap12:operation soapAction='http://setAppPaid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppRotation'>
      <soap12:operation soapAction='http://setAppRotation' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppStyle'>
      <soap12:operation soapAction='http://setAppStyle' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setAppTheme'>
      <soap12:operation soapAction='http://setAppTheme' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='setBuildOption'>
      <soap12:operation soapAction='http://setBuildOption' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='updateAppInfos'>
      <soap12:operation soapAction='http://updateAppInfos' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='upgradeApp'>
      <soap12:operation soapAction='http://upgradeApp' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='appsbuilder'>
    <documentation>appsBuilder is a do it yourself platform for mobile applications development No coding skills are needed Trough a single building process users can create an app for iOS iPad iPhone iPod Android Tablets Phones and Windows Phone Last but not least your app will be available for the Chrome Web Store and with a Mobile Site Html version All content is stored on Cloud enabling real time updates All JSON structures can also be retrieved here https appsbuilder atlassian net wiki display res App JSON</documentation>
    <port name='appsbuilderPort' binding='tns:appsbuilderBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://appsbuilder' />
    </port>
  </service>
</definitions>