<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/ironwifi/' name='ironwifi' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/ironwifi/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/ironwifi/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/ironwifi/'>
      <xsd:element name='accountChangeContactParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountChangeContactResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountChangeEmailParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountChangeEmailResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountPasswordParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='accountPasswordResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loginResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='result' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='transaction_id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='token' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='reportsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='reportsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerCreateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerCreateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerDeleteParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerDeleteResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerUpdateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routerUpdateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routersParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='routersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='statusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='statusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='usageParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='usageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userChangeStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userChangeStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userCreateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userCreateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userCreateKeyParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userCreateKeyResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userDeleteKeyParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userDeleteKeyResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userDetailsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userDetailsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userExpirationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userExpirationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userLoginTimeParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userLoginTimeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='msg' type='xsd:string' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userLoginTimeDeleteParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='id' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='time' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='userLoginTimeDeleteResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='usersParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='token' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='usersResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='accountChangeContactRequestMessage'>
    <part name='parameters' element='tns:accountChangeContactParameters' />
  </message>
  <message name='accountChangeContactResponseMessage'>
    <part name='response' element='tns:accountChangeContactResponse' />
  </message>
  <message name='accountChangeEmailRequestMessage'>
    <part name='parameters' element='tns:accountChangeEmailParameters' />
  </message>
  <message name='accountChangeEmailResponseMessage'>
    <part name='response' element='tns:accountChangeEmailResponse' />
  </message>
  <message name='accountDetailsRequestMessage'>
    <part name='parameters' element='tns:accountDetailsParameters' />
  </message>
  <message name='accountDetailsResponseMessage'>
    <part name='response' element='tns:accountDetailsResponse' />
  </message>
  <message name='accountPasswordRequestMessage'>
    <part name='parameters' element='tns:accountPasswordParameters' />
  </message>
  <message name='accountPasswordResponseMessage'>
    <part name='response' element='tns:accountPasswordResponse' />
  </message>
  <message name='loginRequestMessage' />
  <message name='loginResponseMessage'>
    <part name='response' element='tns:loginResponse' />
  </message>
  <message name='reportsRequestMessage'>
    <part name='parameters' element='tns:reportsParameters' />
  </message>
  <message name='reportsResponseMessage'>
    <part name='response' element='tns:reportsResponse' />
  </message>
  <message name='routerCreateRequestMessage'>
    <part name='parameters' element='tns:routerCreateParameters' />
  </message>
  <message name='routerCreateResponseMessage'>
    <part name='response' element='tns:routerCreateResponse' />
  </message>
  <message name='routerDeleteRequestMessage'>
    <part name='parameters' element='tns:routerDeleteParameters' />
  </message>
  <message name='routerDeleteResponseMessage'>
    <part name='response' element='tns:routerDeleteResponse' />
  </message>
  <message name='routerDetailsRequestMessage'>
    <part name='parameters' element='tns:routerDetailsParameters' />
  </message>
  <message name='routerDetailsResponseMessage'>
    <part name='response' element='tns:routerDetailsResponse' />
  </message>
  <message name='routerUpdateRequestMessage'>
    <part name='parameters' element='tns:routerUpdateParameters' />
  </message>
  <message name='routerUpdateResponseMessage'>
    <part name='response' element='tns:routerUpdateResponse' />
  </message>
  <message name='routersRequestMessage'>
    <part name='parameters' element='tns:routersParameters' />
  </message>
  <message name='routersResponseMessage'>
    <part name='response' element='tns:routersResponse' />
  </message>
  <message name='statusRequestMessage'>
    <part name='parameters' element='tns:statusParameters' />
  </message>
  <message name='statusResponseMessage'>
    <part name='response' element='tns:statusResponse' />
  </message>
  <message name='usageRequestMessage'>
    <part name='parameters' element='tns:usageParameters' />
  </message>
  <message name='usageResponseMessage'>
    <part name='response' element='tns:usageResponse' />
  </message>
  <message name='userChangeStatusRequestMessage'>
    <part name='parameters' element='tns:userChangeStatusParameters' />
  </message>
  <message name='userChangeStatusResponseMessage'>
    <part name='response' element='tns:userChangeStatusResponse' />
  </message>
  <message name='userCreateRequestMessage'>
    <part name='parameters' element='tns:userCreateParameters' />
  </message>
  <message name='userCreateResponseMessage'>
    <part name='response' element='tns:userCreateResponse' />
  </message>
  <message name='userCreateKeyRequestMessage'>
    <part name='parameters' element='tns:userCreateKeyParameters' />
  </message>
  <message name='userCreateKeyResponseMessage'>
    <part name='response' element='tns:userCreateKeyResponse' />
  </message>
  <message name='userDeleteKeyRequestMessage'>
    <part name='parameters' element='tns:userDeleteKeyParameters' />
  </message>
  <message name='userDeleteKeyResponseMessage'>
    <part name='response' element='tns:userDeleteKeyResponse' />
  </message>
  <message name='userDetailsRequestMessage'>
    <part name='parameters' element='tns:userDetailsParameters' />
  </message>
  <message name='userDetailsResponseMessage'>
    <part name='response' element='tns:userDetailsResponse' />
  </message>
  <message name='userExpirationRequestMessage'>
    <part name='parameters' element='tns:userExpirationParameters' />
  </message>
  <message name='userExpirationResponseMessage'>
    <part name='response' element='tns:userExpirationResponse' />
  </message>
  <message name='userLoginTimeRequestMessage'>
    <part name='parameters' element='tns:userLoginTimeParameters' />
  </message>
  <message name='userLoginTimeResponseMessage'>
    <part name='response' element='tns:userLoginTimeResponse' />
  </message>
  <message name='userLoginTimeDeleteRequestMessage'>
    <part name='parameters' element='tns:userLoginTimeDeleteParameters' />
  </message>
  <message name='userLoginTimeDeleteResponseMessage'>
    <part name='response' element='tns:userLoginTimeDeleteResponse' />
  </message>
  <message name='usersRequestMessage'>
    <part name='parameters' element='tns:usersParameters' />
  </message>
  <message name='usersResponseMessage'>
    <part name='response' element='tns:usersResponse' />
  </message>
  <portType name='ironwifiPortType'>
    <operation name='accountChangeContact'>
      <documentation>change account s primary contact</documentation>
      <input message='tns:accountChangeContactRequestMessage' name='accountChangeContactInput' />
      <output message='tns:accountChangeContactResponseMessage' name='accountChangeContactOutput' />
    </operation>
    <operation name='accountChangeEmail'>
      <documentation>change account s email address</documentation>
      <input message='tns:accountChangeEmailRequestMessage' name='accountChangeEmailInput' />
      <output message='tns:accountChangeEmailResponseMessage' name='accountChangeEmailOutput' />
    </operation>
    <operation name='accountDetails'>
      <documentation>retrieve account s details</documentation>
      <input message='tns:accountDetailsRequestMessage' name='accountDetailsInput' />
      <output message='tns:accountDetailsResponseMessage' name='accountDetailsOutput' />
    </operation>
    <operation name='accountPassword'>
      <documentation>change account password</documentation>
      <input message='tns:accountPasswordRequestMessage' name='accountPasswordInput' />
      <output message='tns:accountPasswordResponseMessage' name='accountPasswordOutput' />
    </operation>
    <operation name='login'>
      <documentation>logs in the user and generates Token</documentation>
      <input message='tns:loginRequestMessage' name='loginInput' />
      <output message='tns:loginResponseMessage' name='loginOutput' />
    </operation>
    <operation name='reports'>
      <documentation>list available reports</documentation>
      <input message='tns:reportsRequestMessage' name='reportsInput' />
      <output message='tns:reportsResponseMessage' name='reportsOutput' />
    </operation>
    <operation name='routerCreate'>
      <documentation>define new router</documentation>
      <input message='tns:routerCreateRequestMessage' name='routerCreateInput' />
      <output message='tns:routerCreateResponseMessage' name='routerCreateOutput' />
    </operation>
    <operation name='routerDelete'>
      <documentation>delete a router</documentation>
      <input message='tns:routerDeleteRequestMessage' name='routerDeleteInput' />
      <output message='tns:routerDeleteResponseMessage' name='routerDeleteOutput' />
    </operation>
    <operation name='routerDetails'>
      <documentation>view router s details</documentation>
      <input message='tns:routerDetailsRequestMessage' name='routerDetailsInput' />
      <output message='tns:routerDetailsResponseMessage' name='routerDetailsOutput' />
    </operation>
    <operation name='routerUpdate'>
      <documentation>change router s parameters</documentation>
      <input message='tns:routerUpdateRequestMessage' name='routerUpdateInput' />
      <output message='tns:routerUpdateResponseMessage' name='routerUpdateOutput' />
    </operation>
    <operation name='routers'>
      <documentation></documentation>
      <input message='tns:routersRequestMessage' name='routersInput' />
      <output message='tns:routersResponseMessage' name='routersOutput' />
    </operation>
    <operation name='status'>
      <documentation>retrieves current configuration status</documentation>
      <input message='tns:statusRequestMessage' name='statusInput' />
      <output message='tns:statusResponseMessage' name='statusOutput' />
    </operation>
    <operation name='usage'>
      <documentation></documentation>
      <input message='tns:usageRequestMessage' name='usageInput' />
      <output message='tns:usageResponseMessage' name='usageOutput' />
    </operation>
    <operation name='userChangeStatus'>
      <documentation>enables Disables user</documentation>
      <input message='tns:userChangeStatusRequestMessage' name='userChangeStatusInput' />
      <output message='tns:userChangeStatusResponseMessage' name='userChangeStatusOutput' />
    </operation>
    <operation name='userCreate'>
      <documentation>creates a new user</documentation>
      <input message='tns:userCreateRequestMessage' name='userCreateInput' />
      <output message='tns:userCreateResponseMessage' name='userCreateOutput' />
    </operation>
    <operation name='userCreateKey'>
      <documentation>creates new user password</documentation>
      <input message='tns:userCreateKeyRequestMessage' name='userCreateKeyInput' />
      <output message='tns:userCreateKeyResponseMessage' name='userCreateKeyOutput' />
    </operation>
    <operation name='userDeleteKey'>
      <documentation>deletes users password</documentation>
      <input message='tns:userDeleteKeyRequestMessage' name='userDeleteKeyInput' />
      <output message='tns:userDeleteKeyResponseMessage' name='userDeleteKeyOutput' />
    </operation>
    <operation name='userDetails'>
      <documentation></documentation>
      <input message='tns:userDetailsRequestMessage' name='userDetailsInput' />
      <output message='tns:userDetailsResponseMessage' name='userDetailsOutput' />
    </operation>
    <operation name='userExpiration'>
      <documentation>set user s expiration date and time</documentation>
      <input message='tns:userExpirationRequestMessage' name='userExpirationInput' />
      <output message='tns:userExpirationResponseMessage' name='userExpirationOutput' />
    </operation>
    <operation name='userLoginTime'>
      <documentation></documentation>
      <input message='tns:userLoginTimeRequestMessage' name='userLoginTimeInput' />
      <output message='tns:userLoginTimeResponseMessage' name='userLoginTimeOutput' />
    </operation>
    <operation name='userLoginTimeDelete'>
      <documentation>delete defined user s login time</documentation>
      <input message='tns:userLoginTimeDeleteRequestMessage' name='userLoginTimeDeleteInput' />
      <output message='tns:userLoginTimeDeleteResponseMessage' name='userLoginTimeDeleteOutput' />
    </operation>
    <operation name='users'>
      <documentation></documentation>
      <input message='tns:usersRequestMessage' name='usersInput' />
      <output message='tns:usersResponseMessage' name='usersOutput' />
    </operation>
  </portType>
  <binding name='ironwifiBinding' type='tns:ironwifiPortType'>
    <operation name='accountChangeContact'>
      <soap12:operation soapAction='http://accountChangeContact' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='accountChangeEmail'>
      <soap12:operation soapAction='http://accountChangeEmail' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='accountDetails'>
      <soap12:operation soapAction='http://accountDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='accountPassword'>
      <soap12:operation soapAction='http://accountPassword' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='login'>
      <soap12:operation soapAction='http://login' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='reports'>
      <soap12:operation soapAction='http://reports' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routerCreate'>
      <soap12:operation soapAction='http://routerCreate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routerDelete'>
      <soap12:operation soapAction='http://routerDelete' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routerDetails'>
      <soap12:operation soapAction='http://routerDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routerUpdate'>
      <soap12:operation soapAction='http://routerUpdate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='routers'>
      <soap12:operation soapAction='http://routers' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='status'>
      <soap12:operation soapAction='http://status' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='usage'>
      <soap12:operation soapAction='http://usage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userChangeStatus'>
      <soap12:operation soapAction='http://userChangeStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userCreate'>
      <soap12:operation soapAction='http://userCreate' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userCreateKey'>
      <soap12:operation soapAction='http://userCreateKey' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userDeleteKey'>
      <soap12:operation soapAction='http://userDeleteKey' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userDetails'>
      <soap12:operation soapAction='http://userDetails' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userExpiration'>
      <soap12:operation soapAction='http://userExpiration' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userLoginTime'>
      <soap12:operation soapAction='http://userLoginTime' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='userLoginTimeDelete'>
      <soap12:operation soapAction='http://userLoginTimeDelete' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='users'>
      <soap12:operation soapAction='http://users' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='ironwifi'>
    <documentation>ironWifi offers a powerful Application Program Interface API that can be used to integrate IronWifi RADIUS authentication services with user and guest management systems The API framework allows your platform to interact with the network access control infrastructure provided by IronWifi With the IronWifi API user management systems can dynamically update the RADIUS server to instantly create or delete users in the IronWifi database and you can set or modify access rights When a user attempts to access the network IronWifi uses the updated credentials as the basis for permitting activities on the network When a user attempts to access a WiFi network the Access Point can send a RADIUS request to IronWifi RADIUS IronWifi authenticates the user based on the updated credentials To receive technical assistance with your IronWifi API project or to discuss any advanced requirements that you may have please contact us at hello ironwifi com or</documentation>
    <port name='ironwifiPort' binding='tns:ironwifiBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://ironwifi' />
    </port>
  </service>
</definitions>