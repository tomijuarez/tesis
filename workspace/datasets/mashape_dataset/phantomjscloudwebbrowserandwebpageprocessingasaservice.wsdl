<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/phantomjsCloudWebBrowserAndWebpageProcessingAsAService/' name='phantomjsCloudWebBrowserAndWebpageProcessingAsAService' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/phantomjsCloudWebBrowserAndWebpageProcessingAsAService/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/phantomjsCloudWebBrowserAndWebpageProcessingAsAService/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/phantomjsCloudWebBrowserAndWebpageProcessingAsAService/'>
      <xsd:element name='anyAjaxWebpageToHtmlParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='requesttype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='targeturl' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='anyAjaxWebpageToHtmlResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='anyWebpageToJpegParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='loadimages' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='requesttype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='resourceurlblacklist' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='targeturl' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='viewportsize' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='anyWebpageToJpegResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='anyWebpageToPdfParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='loadimages' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='requesttype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='resourceurlblacklist' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='targeturl' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='anyWebpageToPdfResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchOfPageRequestsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchOfPageRequestsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='callbackUrl' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchResultsCallbackParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='callbackid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchResultsCallbackResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='justCompleted' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='pageOutput' type='xsd:string' minOccurs='0' />
                  <xsd:element name='pageRequest' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='isDebug' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='requestType' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='loadImages' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='requestId' type='xsd:string' minOccurs='0' />
                        <xsd:element name='outputAsJson' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='userAgent' type='xsd:string' minOccurs='0' />
                        <xsd:element name='postDomLoadedTimeout' type='xsd:int' minOccurs='0' />
                        <xsd:element name='targetUrl' type='xsd:anyURI' minOccurs='0' />
                        <xsd:element name='timeout' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='stillProcessing' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='pinterestToJsonInjectedScriptsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='injectedscripts' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='requesttype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='resourceurlblacklist' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='targeturl' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='viewportsize' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='pinterestToJsonInjectedScriptsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='pinterest_parser' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='twitter' type='xsd:string' minOccurs='0' />
                  <xsd:element name='website' type='xsd:string' minOccurs='0' />
                  <xsd:element name='scriptMeta' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='scriptUrl' type='xsd:string' minOccurs='0' />
                        <xsd:element name='scriptTitle' type='xsd:string' minOccurs='0' />
                        <xsd:element name='targetUrl' type='xsd:string' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='userProfile' type='xsd:string' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryGeolocationsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryGeolocationsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='instances' type='xsd:int' minOccurs='0' />
            <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryServiceStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='length' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='start' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryServiceStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='totalInstances' type='xsd:int' minOccurs='0' />
            <xsd:element name='responses' type='xsd:int' minOccurs='0' />
            <xsd:element name='pendingBatchRequests' type='xsd:int' minOccurs='0' />
            <xsd:element name='pendingSingleRequests' type='xsd:int' minOccurs='0' />
            <xsd:element name='timestamp' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryUserQuotaParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='queryUserQuotaResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='reservedInstances' type='xsd:int' minOccurs='0' />
            <xsd:element name='timeQuota' type='xsd:int' minOccurs='0' />
            <xsd:element name='freeCreditsPerDay' type='xsd:int' minOccurs='0' />
            <xsd:element name='freeBalance' type='xsd:int' minOccurs='0' />
            <xsd:element name='dataQuota' type='xsd:int' minOccurs='0' />
            <xsd:element name='prepaidBalance' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singlePageRequestParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singlePageRequestResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='request' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='requestType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='userAgent' type='xsd:string' minOccurs='0' />
                  <xsd:element name='timeout' type='xsd:int' minOccurs='0' />
                  <xsd:element name='isDebug' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='requestId' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='loadImages' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='outputAsJson' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='delayTime' type='xsd:int' minOccurs='0' />
                  <xsd:element name='postDomLoadedTimeout' type='xsd:int' minOccurs='0' />
                  <xsd:element name='targetUrl' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='abortOnJavascriptErrors' type='xsd:boolean' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='totalTime' type='xsd:int' minOccurs='0' />
            <xsd:element name='resultUrl' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='pageContent' type='xsd:string' minOccurs='0' />
            <xsd:element name='serviceMetadata' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='details' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='timestamp' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='pageResponseMetadata' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='headers' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='redirectURL' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='stage' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='statusText' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='contentType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='status' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='responseCategory' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singlePageRequestQuerystringVersionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='abortonjavascripterrors' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='apikey' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='delaytime' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='geolocation' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='injectedscripts' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='isdebug' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='loadimages' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='outputasjson' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
            <xsd:element name='pdfpapersize' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='postdomloadedtimeout' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='requestid' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='requesttype' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='resourceurlblacklist' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='resourceurlwhitelist' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='targeturl' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='timeout' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='useragent' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='viewportsize' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='singlePageRequestQuerystringVersionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='request' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='requestType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='userAgent' type='xsd:string' minOccurs='0' />
                  <xsd:element name='timeout' type='xsd:int' minOccurs='0' />
                  <xsd:element name='isDebug' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='requestId' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='loadImages' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='outputAsJson' type='xsd:boolean' minOccurs='0' />
                  <xsd:element name='delayTime' type='xsd:int' minOccurs='0' />
                  <xsd:element name='postDomLoadedTimeout' type='xsd:int' minOccurs='0' />
                  <xsd:element name='targetUrl' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='abortOnJavascriptErrors' type='xsd:boolean' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='totalTime' type='xsd:int' minOccurs='0' />
            <xsd:element name='resultUrl' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='pageContent' type='xsd:string' minOccurs='0' />
            <xsd:element name='serviceMetadata' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='details' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='timestamp' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='pageResponseMetadata' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='headers' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='value' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='redirectURL' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='stage' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='statusText' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='id' type='xsd:int' minOccurs='0' />
                  <xsd:element name='time' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='contentType' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='url' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='status' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='responseCategory' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='anyAjaxWebpageToHtmlRequestMessage'>
    <part name='parameters' element='tns:anyAjaxWebpageToHtmlParameters' />
  </message>
  <message name='anyAjaxWebpageToHtmlResponseMessage'>
    <part name='response' element='tns:anyAjaxWebpageToHtmlResponse' />
  </message>
  <message name='anyWebpageToJpegRequestMessage'>
    <part name='parameters' element='tns:anyWebpageToJpegParameters' />
  </message>
  <message name='anyWebpageToJpegResponseMessage'>
    <part name='response' element='tns:anyWebpageToJpegResponse' />
  </message>
  <message name='anyWebpageToPdfRequestMessage'>
    <part name='parameters' element='tns:anyWebpageToPdfParameters' />
  </message>
  <message name='anyWebpageToPdfResponseMessage'>
    <part name='response' element='tns:anyWebpageToPdfResponse' />
  </message>
  <message name='batchOfPageRequestsRequestMessage'>
    <part name='parameters' element='tns:batchOfPageRequestsParameters' />
  </message>
  <message name='batchOfPageRequestsResponseMessage'>
    <part name='response' element='tns:batchOfPageRequestsResponse' />
  </message>
  <message name='batchResultsCallbackRequestMessage'>
    <part name='parameters' element='tns:batchResultsCallbackParameters' />
  </message>
  <message name='batchResultsCallbackResponseMessage'>
    <part name='response' element='tns:batchResultsCallbackResponse' />
  </message>
  <message name='pinterestToJsonInjectedScriptsRequestMessage'>
    <part name='parameters' element='tns:pinterestToJsonInjectedScriptsParameters' />
  </message>
  <message name='pinterestToJsonInjectedScriptsResponseMessage'>
    <part name='response' element='tns:pinterestToJsonInjectedScriptsResponse' />
  </message>
  <message name='queryGeolocationsRequestMessage'>
    <part name='parameters' element='tns:queryGeolocationsParameters' />
  </message>
  <message name='queryGeolocationsResponseMessage'>
    <part name='response' element='tns:queryGeolocationsResponse' />
  </message>
  <message name='queryServiceStatusRequestMessage'>
    <part name='parameters' element='tns:queryServiceStatusParameters' />
  </message>
  <message name='queryServiceStatusResponseMessage'>
    <part name='response' element='tns:queryServiceStatusResponse' />
  </message>
  <message name='queryUserQuotaRequestMessage'>
    <part name='parameters' element='tns:queryUserQuotaParameters' />
  </message>
  <message name='queryUserQuotaResponseMessage'>
    <part name='response' element='tns:queryUserQuotaResponse' />
  </message>
  <message name='singlePageRequestRequestMessage'>
    <part name='parameters' element='tns:singlePageRequestParameters' />
  </message>
  <message name='singlePageRequestResponseMessage'>
    <part name='response' element='tns:singlePageRequestResponse' />
  </message>
  <message name='singlePageRequestQuerystringVersionRequestMessage'>
    <part name='parameters' element='tns:singlePageRequestQuerystringVersionParameters' />
  </message>
  <message name='singlePageRequestQuerystringVersionResponseMessage'>
    <part name='response' element='tns:singlePageRequestQuerystringVersionResponse' />
  </message>
  <portType name='phantomjsCloudWebBrowserAndWebpageProcessingAsAServicePortType'>
    <operation name='anyAjaxWebpageToHtml'>
      <documentation>basic Example of the PhantomJsCloud com features</documentation>
      <input message='tns:anyAjaxWebpageToHtmlRequestMessage' name='anyAjaxWebpageToHtmlInput' />
      <output message='tns:anyAjaxWebpageToHtmlResponseMessage' name='anyAjaxWebpageToHtmlOutput' />
    </operation>
    <operation name='anyWebpageToJpeg'>
      <documentation>take a screen shot of any page</documentation>
      <input message='tns:anyWebpageToJpegRequestMessage' name='anyWebpageToJpegInput' />
      <output message='tns:anyWebpageToJpegResponseMessage' name='anyWebpageToJpegOutput' />
    </operation>
    <operation name='anyWebpageToPdf'>
      <documentation>archive a copy of the page as PDF includes clickable hyperlinks</documentation>
      <input message='tns:anyWebpageToPdfRequestMessage' name='anyWebpageToPdfInput' />
      <output message='tns:anyWebpageToPdfResponseMessage' name='anyWebpageToPdfOutput' />
    </operation>
    <operation name='batchOfPageRequests'>
      <documentation>submit multiple requests unlimited up to your quota and immediately returns a callback URL invoking the callback Url will return a JSON with all pages that have already finished processing Invoking the callback Url again will return you newly finished pages not pages already sent by previous callback invocations</documentation>
      <input message='tns:batchOfPageRequestsRequestMessage' name='batchOfPageRequestsInput' />
      <output message='tns:batchOfPageRequestsResponseMessage' name='batchOfPageRequestsOutput' />
    </operation>
    <operation name='batchResultsCallback'>
      <documentation>invoke the callback URL to obtain your results and be informed on how many pages are still being processed Keep in mind that once we return you a result it is deleted It will not be resent the next time you invoke the callback url You have up to hours to obtain your results after this time your results will be deleted</documentation>
      <input message='tns:batchResultsCallbackRequestMessage' name='batchResultsCallbackInput' />
      <output message='tns:batchResultsCallbackResponseMessage' name='batchResultsCallbackOutput' />
    </operation>
    <operation name='pinterestToJsonInjectedScripts'>
      <documentation>extract ALL the data from ANY Pinterest page This is an example of the pageRequest injectedScripts feature</documentation>
      <input message='tns:pinterestToJsonInjectedScriptsRequestMessage' name='pinterestToJsonInjectedScriptsInput' />
      <output message='tns:pinterestToJsonInjectedScriptsResponseMessage' name='pinterestToJsonInjectedScriptsOutput' />
    </operation>
    <operation name='queryGeolocations'>
      <documentation>obtain a listing of all geolocations that can be passed as a parameter to pageRequest geolocation</documentation>
      <input message='tns:queryGeolocationsRequestMessage' name='queryGeolocationsInput' />
      <output message='tns:queryGeolocationsResponseMessage' name='queryGeolocationsOutput' />
    </operation>
    <operation name='queryServiceStatus'>
      <documentation>information about the current service status and history over time Returns an array of service status information one per minute the first item start represents the current not yet completed minute s metrics So for right now use element for history use elements</documentation>
      <input message='tns:queryServiceStatusRequestMessage' name='queryServiceStatusInput' />
      <output message='tns:queryServiceStatusResponseMessage' name='queryServiceStatusOutput' />
    </operation>
    <operation name='queryUserQuota'>
      <documentation>provide details on the users current quota</documentation>
      <input message='tns:queryUserQuotaRequestMessage' name='queryUserQuotaInput' />
      <output message='tns:queryUserQuotaResponseMessage' name='queryUserQuotaOutput' />
    </operation>
    <operation name='singlePageRequest'>
      <documentation>submit a single request to our system and returns you the results once the page has finished rendering Please consider using the batch api if you need to process more than one request in parallel</documentation>
      <input message='tns:singlePageRequestRequestMessage' name='singlePageRequestInput' />
      <output message='tns:singlePageRequestResponseMessage' name='singlePageRequestOutput' />
    </operation>
    <operation name='singlePageRequestQuerystringVersion'>
      <documentation>an Easy Querystring version We suggest you use the POST JSON Batch API but for easy testing we also support querystring input of parameters Below we list the common required parameters but all of the JSON parameters are valid to be passed as querystrings we will attempt to parse them on the server</documentation>
      <input message='tns:singlePageRequestQuerystringVersionRequestMessage' name='singlePageRequestQuerystringVersionInput' />
      <output message='tns:singlePageRequestQuerystringVersionResponseMessage' name='singlePageRequestQuerystringVersionOutput' />
    </operation>
  </portType>
  <binding name='phantomjsCloudWebBrowserAndWebpageProcessingAsAServiceBinding' type='tns:phantomjsCloudWebBrowserAndWebpageProcessingAsAServicePortType'>
    <operation name='anyAjaxWebpageToHtml'>
      <soap12:operation soapAction='http://anyAjaxWebpageToHtml' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='anyWebpageToJpeg'>
      <soap12:operation soapAction='http://anyWebpageToJpeg' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='anyWebpageToPdf'>
      <soap12:operation soapAction='http://anyWebpageToPdf' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchOfPageRequests'>
      <soap12:operation soapAction='http://batchOfPageRequests' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchResultsCallback'>
      <soap12:operation soapAction='http://batchResultsCallback' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='pinterestToJsonInjectedScripts'>
      <soap12:operation soapAction='http://pinterestToJsonInjectedScripts' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='queryGeolocations'>
      <soap12:operation soapAction='http://queryGeolocations' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='queryServiceStatus'>
      <soap12:operation soapAction='http://queryServiceStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='queryUserQuota'>
      <soap12:operation soapAction='http://queryUserQuota' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='singlePageRequest'>
      <soap12:operation soapAction='http://singlePageRequest' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='singlePageRequestQuerystringVersion'>
      <soap12:operation soapAction='http://singlePageRequestQuerystringVersion' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='phantomjsCloudWebBrowserAndWebpageProcessingAsAService'>
    <documentation>do you need to screen scrape Javascript Websites PhantomJs Cloud is A web browser hosted as a service using Chrome WebKit to render your javascript heavy webpages as HTML JPEG PDF or JSON A Cloud of PhantomJS instances to process more than pages per second A REST API allowing you to request and obtain your pages A Software as a Service SaaS with free plans and paid plans starting at for pages BitCoin and Free plan available</documentation>
    <port name='phantomjsCloudWebBrowserAndWebpageProcessingAsAServicePort' binding='tns:phantomjsCloudWebBrowserAndWebpageProcessingAsAServiceBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://phantomjsCloudWebBrowserAndWebpageProcessingAsAService' />
    </port>
  </service>
</definitions>