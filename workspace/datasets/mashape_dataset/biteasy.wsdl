<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/biteasy/' name='biteasy' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/biteasy/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/biteasy/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/biteasy/'>
      <xsd:element name='getAddressesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAddressesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='addresses' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='address' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='balance' type='xsd:int' minOccurs='0' />
                        <xsd:element name='total_sent' type='xsd:int' minOccurs='0' />
                        <xsd:element name='total_received' type='xsd:int' minOccurs='0' />
                        <xsd:element name='hash160' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='pagination' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='next_page' type='xsd:boolean' minOccurs='0' />
                        <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='previous_page' type='xsd:boolean' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAddressesAddressParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getAddressesAddressResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='balance' type='xsd:int' minOccurs='0' />
                  <xsd:element name='total_sent' type='xsd:int' minOccurs='0' />
                  <xsd:element name='total_received' type='xsd:int' minOccurs='0' />
                  <xsd:element name='hash160' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlocksParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='height' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='page' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='perpage' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='solvedat' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlocksResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='pagination' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='next_page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='previous_page' type='xsd:boolean' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='blocks' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='total_fees' type='xsd:int' minOccurs='0' />
                        <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='merkle_root' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='inflation' type='xsd:int' minOccurs='0' />
                        <xsd:element name='version' type='xsd:int' minOccurs='0' />
                        <xsd:element name='nonce' type='xsd:int' minOccurs='0' />
                        <xsd:element name='difficulty' type='xsd:int' minOccurs='0' />
                        <xsd:element name='previous_block' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='num_transactions' type='xsd:int' minOccurs='0' />
                        <xsd:element name='size' type='xsd:int' minOccurs='0' />
                        <xsd:element name='solved_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='next_blocks' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='hash' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='height' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlocksHashParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getBlocksHashResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='merkle_root' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='inflation' type='xsd:int' minOccurs='0' />
                  <xsd:element name='version' type='xsd:int' minOccurs='0' />
                  <xsd:element name='nonce' type='xsd:int' minOccurs='0' />
                  <xsd:element name='difficulty' type='xsd:int' minOccurs='0' />
                  <xsd:element name='previous_block' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='num_transactions' type='xsd:int' minOccurs='0' />
                  <xsd:element name='size' type='xsd:int' minOccurs='0' />
                  <xsd:element name='solved_at' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='next_blocks' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='hash' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='height' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSearchParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='results' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='array' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='total_fees' type='xsd:int' minOccurs='0' />
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='merkle_root' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='inflation' type='xsd:int' minOccurs='0' />
                              <xsd:element name='version' type='xsd:int' minOccurs='0' />
                              <xsd:element name='nonce' type='xsd:int' minOccurs='0' />
                              <xsd:element name='difficulty' type='xsd:int' minOccurs='0' />
                              <xsd:element name='previous_block' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='num_transactions' type='xsd:int' minOccurs='0' />
                              <xsd:element name='size' type='xsd:int' minOccurs='0' />
                              <xsd:element name='solved_at' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='next_blocks' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='hash' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTransactionsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='blockhash' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='confidence' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='fromaddress' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='page' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='perpage' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='toaddress' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTransactionsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='data' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='pagination' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='next_page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='per_page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='page' type='xsd:int' minOccurs='0' />
                        <xsd:element name='previous_page' type='xsd:boolean' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='transactions' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='outputs' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='is_spent' type='xsd:int' minOccurs='0' />
                              <xsd:element name='script_pub_key' type='xsd:string' minOccurs='0' />
                              <xsd:element name='to_address' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='transaction_index' type='xsd:int' minOccurs='0' />
                              <xsd:element name='value' type='xsd:int' minOccurs='0' />
                              <xsd:element name='script_sent_type' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='in_blocks' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='hash' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='height' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='outputs_value' type='xsd:int' minOccurs='0' />
                        <xsd:element name='inputs' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='outpoint_value' type='xsd:int' minOccurs='0' />
                              <xsd:element name='is_coinbase' type='xsd:int' minOccurs='0' />
                              <xsd:element name='script_sig' type='xsd:string' minOccurs='0' />
                              <xsd:element name='outpoint_index' type='xsd:int' minOccurs='0' />
                              <xsd:element name='from_address' type='xsd:string' minOccurs='0' />
                              <xsd:element name='outpoint_hash' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='confidence' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='fee' type='xsd:int' minOccurs='0' />
                        <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='transacted_value' type='xsd:int' minOccurs='0' />
                        <xsd:element name='confirmations' type='xsd:int' minOccurs='0' />
                        <xsd:element name='version' type='xsd:int' minOccurs='0' />
                        <xsd:element name='size' type='xsd:int' minOccurs='0' />
                        <xsd:element name='is_coinbase' type='xsd:int' minOccurs='0' />
                        <xsd:element name='inputs_value' type='xsd:int' minOccurs='0' />
                        <xsd:element name='hash' type='xsd:normalizedString' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='status' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTransactionsHashParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='hash' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getTransactionsHashResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='getAddressesRequestMessage'>
    <part name='parameters' element='tns:getAddressesParameters' />
  </message>
  <message name='getAddressesResponseMessage'>
    <part name='response' element='tns:getAddressesResponse' />
  </message>
  <message name='getAddressesAddressRequestMessage'>
    <part name='parameters' element='tns:getAddressesAddressParameters' />
  </message>
  <message name='getAddressesAddressResponseMessage'>
    <part name='response' element='tns:getAddressesAddressResponse' />
  </message>
  <message name='getBlocksRequestMessage'>
    <part name='parameters' element='tns:getBlocksParameters' />
  </message>
  <message name='getBlocksResponseMessage'>
    <part name='response' element='tns:getBlocksResponse' />
  </message>
  <message name='getBlocksHashRequestMessage'>
    <part name='parameters' element='tns:getBlocksHashParameters' />
  </message>
  <message name='getBlocksHashResponseMessage'>
    <part name='response' element='tns:getBlocksHashResponse' />
  </message>
  <message name='getSearchRequestMessage'>
    <part name='parameters' element='tns:getSearchParameters' />
  </message>
  <message name='getSearchResponseMessage'>
    <part name='response' element='tns:getSearchResponse' />
  </message>
  <message name='getTransactionsRequestMessage'>
    <part name='parameters' element='tns:getTransactionsParameters' />
  </message>
  <message name='getTransactionsResponseMessage'>
    <part name='response' element='tns:getTransactionsResponse' />
  </message>
  <message name='getTransactionsHashRequestMessage'>
    <part name='parameters' element='tns:getTransactionsHashParameters' />
  </message>
  <message name='getTransactionsHashResponseMessage'>
    <part name='response' element='tns:getTransactionsHashResponse' />
  </message>
  <portType name='biteasyPortType'>
    <operation name='getAddresses'>
      <documentation>returns an array of paginated addresses which can optionally be fltered</documentation>
      <input message='tns:getAddressesRequestMessage' name='getAddressesInput' />
      <output message='tns:getAddressesResponseMessage' name='getAddressesOutput' />
    </operation>
    <operation name='getAddressesAddress'>
      <documentation>returns information about a specifc bitcoin address</documentation>
      <input message='tns:getAddressesAddressRequestMessage' name='getAddressesAddressInput' />
      <output message='tns:getAddressesAddressResponseMessage' name='getAddressesAddressOutput' />
    </operation>
    <operation name='getBlocks'>
      <documentation>returns an array of paginated blocks which can optionally be filtered</documentation>
      <input message='tns:getBlocksRequestMessage' name='getBlocksInput' />
      <output message='tns:getBlocksResponseMessage' name='getBlocksOutput' />
    </operation>
    <operation name='getBlocksHash'>
      <documentation>returns information about a specifc block</documentation>
      <input message='tns:getBlocksHashRequestMessage' name='getBlocksHashInput' />
      <output message='tns:getBlocksHashResponseMessage' name='getBlocksHashOutput' />
    </operation>
    <operation name='getSearch'>
      <documentation>auto detects the type of the blockchain data that are requested and searches for them Possible values for the type feld in the response body are BLOCK ADDRESS and TRANSACTION</documentation>
      <input message='tns:getSearchRequestMessage' name='getSearchInput' />
      <output message='tns:getSearchResponseMessage' name='getSearchOutput' />
    </operation>
    <operation name='getTransactions'>
      <documentation>returns an array of paginated transactions which can optionally be fltered</documentation>
      <input message='tns:getTransactionsRequestMessage' name='getTransactionsInput' />
      <output message='tns:getTransactionsResponseMessage' name='getTransactionsOutput' />
    </operation>
    <operation name='getTransactionsHash'>
      <documentation>returns information about a specifc transaction</documentation>
      <input message='tns:getTransactionsHashRequestMessage' name='getTransactionsHashInput' />
      <output message='tns:getTransactionsHashResponseMessage' name='getTransactionsHashOutput' />
    </operation>
  </portType>
  <binding name='biteasyBinding' type='tns:biteasyPortType'>
    <operation name='getAddresses'>
      <soap12:operation soapAction='http://getAddresses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getAddressesAddress'>
      <soap12:operation soapAction='http://getAddressesAddress' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getBlocks'>
      <soap12:operation soapAction='http://getBlocks' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getBlocksHash'>
      <soap12:operation soapAction='http://getBlocksHash' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getSearch'>
      <soap12:operation soapAction='http://getSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTransactions'>
      <soap12:operation soapAction='http://getTransactions' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getTransactionsHash'>
      <soap12:operation soapAction='http://getTransactionsHash' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='biteasy'>
    <documentation>the Biteasy Blockchain REST API provides you with a convenient powerful and simple way to read data from the bitcoin network and build your own services with it</documentation>
    <port name='biteasyPort' binding='tns:biteasyBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://biteasy' />
    </port>
  </service>
</definitions>