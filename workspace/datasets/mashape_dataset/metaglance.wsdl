<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/metaglance/' name='metaglance' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/metaglance/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/metaglance/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/metaglance/'>
      <xsd:element name='debuggerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='decalsDefinitionForSemanticSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='decalsKeywordsForSemanticSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='decalsNounsForSemanticSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='keywordGenerationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='keywordGenerationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:normalizedString' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='metadataGenerationParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='metadataGenerationResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nameDetectionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nameDetectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:string' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namedEntityDetectionParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='url' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='namedEntityDetectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='nounDetectionResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='wikipediaInformationForSemanticSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='debuggerRequestMessage' />
  <message name='debuggerResponseMessage'>
    <part name='response' element='tns:debuggerResponse' />
  </message>
  <message name='decalsDefinitionForSemanticSearchRequestMessage' />
  <message name='decalsDefinitionForSemanticSearchResponseMessage'>
    <part name='response' element='tns:decalsDefinitionForSemanticSearchResponse' />
  </message>
  <message name='decalsKeywordsForSemanticSearchRequestMessage' />
  <message name='decalsKeywordsForSemanticSearchResponseMessage'>
    <part name='response' element='tns:decalsKeywordsForSemanticSearchResponse' />
  </message>
  <message name='decalsNounsForSemanticSearchRequestMessage' />
  <message name='decalsNounsForSemanticSearchResponseMessage'>
    <part name='response' element='tns:decalsNounsForSemanticSearchResponse' />
  </message>
  <message name='keywordGenerationRequestMessage'>
    <part name='parameters' element='tns:keywordGenerationParameters' />
  </message>
  <message name='keywordGenerationResponseMessage'>
    <part name='response' element='tns:keywordGenerationResponse' />
  </message>
  <message name='metadataGenerationRequestMessage'>
    <part name='parameters' element='tns:metadataGenerationParameters' />
  </message>
  <message name='metadataGenerationResponseMessage'>
    <part name='response' element='tns:metadataGenerationResponse' />
  </message>
  <message name='nameDetectionRequestMessage'>
    <part name='parameters' element='tns:nameDetectionParameters' />
  </message>
  <message name='nameDetectionResponseMessage'>
    <part name='response' element='tns:nameDetectionResponse' />
  </message>
  <message name='namedEntityDetectionRequestMessage'>
    <part name='parameters' element='tns:namedEntityDetectionParameters' />
  </message>
  <message name='namedEntityDetectionResponseMessage'>
    <part name='response' element='tns:namedEntityDetectionResponse' />
  </message>
  <message name='nounDetectionRequestMessage' />
  <message name='nounDetectionResponseMessage'>
    <part name='response' element='tns:nounDetectionResponse' />
  </message>
  <message name='wikipediaInformationForSemanticSearchRequestMessage' />
  <message name='wikipediaInformationForSemanticSearchResponseMessage'>
    <part name='response' element='tns:wikipediaInformationForSemanticSearchResponse' />
  </message>
  <portType name='metaglancePortType'>
    <operation name='debugger'>
      <documentation>do not use</documentation>
      <input message='tns:debuggerRequestMessage' name='debuggerInput' />
      <output message='tns:debuggerResponseMessage' name='debuggerOutput' />
    </operation>
    <operation name='decalsDefinitionForSemanticSearch'>
      <input message='tns:decalsDefinitionForSemanticSearchRequestMessage' name='decalsDefinitionForSemanticSearchInput' />
      <output message='tns:decalsDefinitionForSemanticSearchResponseMessage' name='decalsDefinitionForSemanticSearchOutput' />
    </operation>
    <operation name='decalsKeywordsForSemanticSearch'>
      <input message='tns:decalsKeywordsForSemanticSearchRequestMessage' name='decalsKeywordsForSemanticSearchInput' />
      <output message='tns:decalsKeywordsForSemanticSearchResponseMessage' name='decalsKeywordsForSemanticSearchOutput' />
    </operation>
    <operation name='decalsNounsForSemanticSearch'>
      <input message='tns:decalsNounsForSemanticSearchRequestMessage' name='decalsNounsForSemanticSearchInput' />
      <output message='tns:decalsNounsForSemanticSearchResponseMessage' name='decalsNounsForSemanticSearchOutput' />
    </operation>
    <operation name='keywordGeneration'>
      <documentation>generate Keywords on any segment of text</documentation>
      <input message='tns:keywordGenerationRequestMessage' name='keywordGenerationInput' />
      <output message='tns:keywordGenerationResponseMessage' name='keywordGenerationOutput' />
    </operation>
    <operation name='metadataGeneration'>
      <documentation>generate metadata for a file in a format for use by RUSSEL</documentation>
      <input message='tns:metadataGenerationRequestMessage' name='metadataGenerationInput' />
      <output message='tns:metadataGenerationResponseMessage' name='metadataGenerationOutput' />
    </operation>
    <operation name='nameDetection'>
      <documentation>retrieves names from the provided text</documentation>
      <input message='tns:nameDetectionRequestMessage' name='nameDetectionInput' />
      <output message='tns:nameDetectionResponseMessage' name='nameDetectionOutput' />
    </operation>
    <operation name='namedEntityDetection'>
      <documentation>detects Named Entities</documentation>
      <input message='tns:namedEntityDetectionRequestMessage' name='namedEntityDetectionInput' />
      <output message='tns:namedEntityDetectionResponseMessage' name='namedEntityDetectionOutput' />
    </operation>
    <operation name='nounDetection'>
      <documentation>selects the nouns from the provided text</documentation>
      <input message='tns:nounDetectionRequestMessage' name='nounDetectionInput' />
      <output message='tns:nounDetectionResponseMessage' name='nounDetectionOutput' />
    </operation>
    <operation name='wikipediaInformationForSemanticSearch'>
      <input message='tns:wikipediaInformationForSemanticSearchRequestMessage' name='wikipediaInformationForSemanticSearchInput' />
      <output message='tns:wikipediaInformationForSemanticSearchResponseMessage' name='wikipediaInformationForSemanticSearchOutput' />
    </operation>
  </portType>
  <binding name='metaglanceBinding' type='tns:metaglancePortType'>
    <operation name='debugger'>
      <soap12:operation soapAction='http://debugger' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='decalsDefinitionForSemanticSearch'>
      <soap12:operation soapAction='http://decalsDefinitionForSemanticSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='decalsKeywordsForSemanticSearch'>
      <soap12:operation soapAction='http://decalsKeywordsForSemanticSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='decalsNounsForSemanticSearch'>
      <soap12:operation soapAction='http://decalsNounsForSemanticSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='keywordGeneration'>
      <soap12:operation soapAction='http://keywordGeneration' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='metadataGeneration'>
      <soap12:operation soapAction='http://metadataGeneration' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nameDetection'>
      <soap12:operation soapAction='http://nameDetection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='namedEntityDetection'>
      <soap12:operation soapAction='http://namedEntityDetection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='nounDetection'>
      <soap12:operation soapAction='http://nounDetection' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='wikipediaInformationForSemanticSearch'>
      <soap12:operation soapAction='http://wikipediaInformationForSemanticSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='metaglance'>
    <documentation>metaglance is a service for detecting linguistic elements and generating metadata with computational linguistics and semantic analysis Metaglance supports several Open Source projects such as ADL s DECALS and RUSSEL</documentation>
    <port name='metaglancePort' binding='tns:metaglanceBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://metaglance' />
    </port>
  </service>
</definitions>