<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/graphdive/' name='graphdive' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/graphdive/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/graphdive/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/graphdive/'>
      <xsd:element name='categorizedinferredinterestsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='facebookid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='categorizedinferredinterestsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lastUpdate' type='xsd:int' minOccurs='0' />
            <xsd:element name='sourceContentDigests' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='source' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='contentType' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='categorizedTraceableProfiles' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='traceableInterests' minOccurs='0'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='nodeName' type='xsd:normalizedString' minOccurs='0' />
                        <xsd:element name='score' type='xsd:decimal' minOccurs='0' />
                        <xsd:element name='contentDigestIndices' maxOccurs='unbounded'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='score' type='xsd:int' minOccurs='0' />
                              <xsd:element name='index' type='xsd:int' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name='nodeId' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='categoryName' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='fetchtriggerprofileParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='facebookid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='fetchtriggerprofileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lastUpdate' type='xsd:int' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='successful' type='xsd:boolean' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='inferreddemographicsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='facebookid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='inferreddemographicsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='income' type='xsd:decimal' minOccurs='0' />
            <xsd:element name='incomeBracket' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='education' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='ageBracket' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='lastUpdate' type='xsd:int' minOccurs='0' />
            <xsd:element name='relationshipStatus' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
            <xsd:element name='fresh' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='age' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='inferredinterestsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='facebookid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='inferredinterestsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='lastUpdate' type='xsd:int' minOccurs='0' />
            <xsd:element name='tracableInterests' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='nodeName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='score' type='xsd:decimal' minOccurs='0' />
                  <xsd:element name='contentDigestIndices' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='score' type='xsd:int' minOccurs='0' />
                        <xsd:element name='index' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='nodeId' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='sourceContentDigests' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='source' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='contentType' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='id' type='xsd:int' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='taggedtraceableactionprofileParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='catalog' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='facebookid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='taggedtraceableactionprofileResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='taggedTraceableScoredActions' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='nodeName' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='score' type='xsd:int' minOccurs='0' />
                  <xsd:element name='scoredActions' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='score' type='xsd:int' minOccurs='0' />
                        <xsd:element name='action' minOccurs='0'>
                          <xsd:complexType>
                            <xsd:sequence minOccurs='1' maxOccurs='1'>
                              <xsd:element name='imageLink' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='salePrice' type='xsd:string' minOccurs='0' />
                              <xsd:element name='price' type='xsd:normalizedString' minOccurs='0' />
                              <xsd:element name='link' type='xsd:anyURI' minOccurs='0' />
                              <xsd:element name='id' type='xsd:int' minOccurs='0' />
                              <xsd:element name='title' type='xsd:string' minOccurs='0' />
                              <xsd:element name='category' type='xsd:string' minOccurs='0' />
                              <xsd:element name='brand' type='xsd:normalizedString' minOccurs='0' />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='contentDigestIndices' maxOccurs='unbounded'>
                    <xsd:complexType>
                      <xsd:sequence minOccurs='1' maxOccurs='1'>
                        <xsd:element name='score' type='xsd:int' minOccurs='0' />
                        <xsd:element name='index' type='xsd:int' minOccurs='0' />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name='nodeId' type='xsd:int' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='lastUpdate' type='xsd:int' minOccurs='0' />
            <xsd:element name='sourceContentDigests' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='date' type='xsd:int' minOccurs='0' />
                  <xsd:element name='text' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='source' type='xsd:string' minOccurs='0' />
                  <xsd:element name='category' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='contentType' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='fresh' type='xsd:boolean' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='categorizedinferredinterestsRequestMessage'>
    <part name='parameters' element='tns:categorizedinferredinterestsParameters' />
  </message>
  <message name='categorizedinferredinterestsResponseMessage'>
    <part name='response' element='tns:categorizedinferredinterestsResponse' />
  </message>
  <message name='fetchtriggerprofileRequestMessage'>
    <part name='parameters' element='tns:fetchtriggerprofileParameters' />
  </message>
  <message name='fetchtriggerprofileResponseMessage'>
    <part name='response' element='tns:fetchtriggerprofileResponse' />
  </message>
  <message name='inferreddemographicsRequestMessage'>
    <part name='parameters' element='tns:inferreddemographicsParameters' />
  </message>
  <message name='inferreddemographicsResponseMessage'>
    <part name='response' element='tns:inferreddemographicsResponse' />
  </message>
  <message name='inferredinterestsRequestMessage'>
    <part name='parameters' element='tns:inferredinterestsParameters' />
  </message>
  <message name='inferredinterestsResponseMessage'>
    <part name='response' element='tns:inferredinterestsResponse' />
  </message>
  <message name='taggedtraceableactionprofileRequestMessage'>
    <part name='parameters' element='tns:taggedtraceableactionprofileParameters' />
  </message>
  <message name='taggedtraceableactionprofileResponseMessage'>
    <part name='response' element='tns:taggedtraceableactionprofileResponse' />
  </message>
  <portType name='graphdivePortType'>
    <operation name='categorizedinferredinterests'>
      <documentation>categorizedInferredInterests is an API method that provides a user s interest graph ranked by category and shows the supporting concepts behind it It has two components sourceContentDigests and categoryTraceableProfiles GraphDive s algorithms single out the most important signals from all the noisy signals in a user s social profile and associated data to generate a ranked set of categorized interests for that user sourceContentDigests is where you can find the Facebook signals that support a given user interest as ranked by GraphDive s algorithms A signal can be an individual user event such as a like on Wimbledon s Facebook page or a user activity such as a check in at a tennis club categorizedTraceableProfiles is a sorted list of interest categories e g Sports or Arts where the categories each under categoryName are ranked by GraphDive s algorithms to reflect their relative importance to the user Each category is then supported by individual user interests or nodes appearing under the traceableInterests list Each such interest has a nodeName and corresponding nodeId and references items from the sourceContentDigests list that contributed to that particular node or interest s score</documentation>
      <input message='tns:categorizedinferredinterestsRequestMessage' name='categorizedinferredinterestsInput' />
      <output message='tns:categorizedinferredinterestsResponseMessage' name='categorizedinferredinterestsOutput' />
    </operation>
    <operation name='fetchtriggerprofile'>
      <documentation>fetchTriggerProfile is the basic API call that gives GraphDive access to a user s Facebook Token and ID Once you make this API call GraphDive will be able to analyze the user s data and power the User Insights tab in the dashboard</documentation>
      <input message='tns:fetchtriggerprofileRequestMessage' name='fetchtriggerprofileInput' />
      <output message='tns:fetchtriggerprofileResponseMessage' name='fetchtriggerprofileOutput' />
    </operation>
    <operation name='inferreddemographics'>
      <documentation>this API method provides an inferred demographic characterization of the user based on GraphDive s algorithms There are currently three demographic inferences that are provided by this API age is the inferred age of the user Also returns an age bracket for the user with the following ranges income is the inferred income of the user Also returns an income bracket for the user with the following ranges k k k k k k k k k k education is the inferred education of the user relationshipStatus is the inferred relationship status of the user fresh indicates whether the profile data was recently fetched gender is the inferred gender of the user This feature is not available yet and currently returns false These probability profiles do not necessarily return a user s declared age education or marital status rather they reflect how old the user acts feels and behaves as inferred by GraphDive s algorithrms</documentation>
      <input message='tns:inferreddemographicsRequestMessage' name='inferreddemographicsInput' />
      <output message='tns:inferreddemographicsResponseMessage' name='inferreddemographicsOutput' />
    </operation>
    <operation name='inferredinterests'>
      <documentation>inferredInterests is an API method that provides a user s ranked interest graph traceableInterests and shows the supporting concepts behind it It has two components sourceContentDigests and traceableInterests GraphDive s algorithms single out the most important signals from all the noisy signals in a user s social profile and associated data to generate a ranked set of categorized interests for that user sourceContentDigests is where you can find the Facebook signals that support a given user interest as ranked by GraphDive s algorithms A signal can be an individual user event such as a like on Wimbledon s Facebook page or a user activity such as a check in at a tennis club traceableInterests is a ranked list of interests for the user where each interest or node is assigned a score by GraphDive s algorithms reflecting its importance or relevance to the user Each interest has a nodeName and corresponding nodeId and references items from the sourceContentDigests list that contributed to that particular node or interest s score</documentation>
      <input message='tns:inferredinterestsRequestMessage' name='inferredinterestsInput' />
      <output message='tns:inferredinterestsResponseMessage' name='inferredinterestsOutput' />
    </operation>
    <operation name='taggedtraceableactionprofile'>
      <documentation>this API method returns product or content recommendations based on the given CATALOGNAME that is provided to you by GraphDive after you upload your catalog To begin the catalog upload process please contact us sourceContentDigests provides the Facebook signals that support a given user s recommended products content as ranked by GraphDive s algorithms Signals are individual user events such as a like or a user activity such as a check in For example a like of Kobe Bryant s Facebook page and a Let s go LAKERS post are both signals that support a user s interest in basketball taggedTraceableScoredActions provides a list of recommended products content from the given CATALOGNAME and the user interest that they fit under The products content are listed under the scoredActions field and ranked by GraphDive s algorithms to reflect their relevance to the user The user interest that the recommended products content fit under is identified by a nodeName and corresponding nodeId Each interest references items from the sourceContentDigests list that contributed to that particular interest s score For example in the output below the most important signals supporting Wilson Wave Indoor Outdoor Intermediate Basketball as a recommended product and the corresponding user interest in basketball are indicated by the contentDigestIndices The contentDigestIndices contain indices and scores that refer to the sourceContentDigests In this case the indices and correspond to the user s like of Basketball Kobe Bryant and a user post of Let s go LAKERS respectively The score field under contentDigestIndices is the strength of the contribution to the interest of Basketball of the individual signal sourceContentDigests referenced The higher the score the stronger the contribution of that index to the interest</documentation>
      <input message='tns:taggedtraceableactionprofileRequestMessage' name='taggedtraceableactionprofileInput' />
      <output message='tns:taggedtraceableactionprofileResponseMessage' name='taggedtraceableactionprofileOutput' />
    </operation>
  </portType>
  <binding name='graphdiveBinding' type='tns:graphdivePortType'>
    <operation name='categorizedinferredinterests'>
      <soap12:operation soapAction='http://categorizedinferredinterests' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='fetchtriggerprofile'>
      <soap12:operation soapAction='http://fetchtriggerprofile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='inferreddemographics'>
      <soap12:operation soapAction='http://inferreddemographics' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='inferredinterests'>
      <soap12:operation soapAction='http://inferredinterests' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='taggedtraceableactionprofile'>
      <soap12:operation soapAction='http://taggedtraceableactionprofile' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='graphdive'>
    <documentation>know Your Customers GraphDive s Big Data analytics provide key insights into your users such as Top interests Age income education relationship status</documentation>
    <port name='graphdivePort' binding='tns:graphdiveBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://graphdive' />
    </port>
  </service>
</definitions>