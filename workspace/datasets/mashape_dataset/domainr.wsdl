<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/domainr/' name='domainr' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/domainr/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/domainr/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/domainr/'>
      <xsd:element name='vInfoParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vInfoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='query' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='register_url' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='availability' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='subregistration_permitted' type='xsd:boolean' minOccurs='0' />
            <xsd:element name='tld' minOccurs='0'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='wikipedia_url' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='domain' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='iana_url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='path' type='xsd:string' minOccurs='0' />
            <xsd:element name='whois_url' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='registrars' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='registrar' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='register_url' type='xsd:anyURI' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name='domain' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='www_url' type='xsd:anyURI' minOccurs='0' />
            <xsd:element name='host' type='xsd:string' minOccurs='0' />
            <xsd:element name='subdomain' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='domain_idna' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vRegisterParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='domain' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='registrar' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vRegisterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vSearchParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='q' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='query' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='results' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='path' type='xsd:string' minOccurs='0' />
                  <xsd:element name='domain' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='host' type='xsd:string' minOccurs='0' />
                  <xsd:element name='register_url' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='subdomain' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='availability' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vRegisterParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='domain' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='registrar' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vRegisterResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vSearchParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='defaults' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='location' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='query' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='registrar' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vSearchResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='results' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='path' type='xsd:string' minOccurs='0' />
                  <xsd:element name='registerURL' type='xsd:anyURI' minOccurs='0' />
                  <xsd:element name='zone' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='domain' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='host' type='xsd:string' minOccurs='0' />
                  <xsd:element name='subdomain' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vStatusParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='domain' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='vStatusResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='status' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='summary' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='zone' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='domain' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='status' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='vInfoRequestMessage'>
    <part name='parameters' element='tns:vInfoParameters' />
  </message>
  <message name='vInfoResponseMessage'>
    <part name='response' element='tns:vInfoResponse' />
  </message>
  <message name='vRegisterRequestMessage'>
    <part name='parameters' element='tns:vRegisterParameters' />
  </message>
  <message name='vRegisterResponseMessage'>
    <part name='response' element='tns:vRegisterResponse' />
  </message>
  <message name='vSearchRequestMessage'>
    <part name='parameters' element='tns:vSearchParameters' />
  </message>
  <message name='vSearchResponseMessage'>
    <part name='response' element='tns:vSearchResponse' />
  </message>
  <message name='vRegisterRequestMessage'>
    <part name='parameters' element='tns:vRegisterParameters' />
  </message>
  <message name='vRegisterResponseMessage'>
    <part name='response' element='tns:vRegisterResponse' />
  </message>
  <message name='vSearchRequestMessage'>
    <part name='parameters' element='tns:vSearchParameters' />
  </message>
  <message name='vSearchResponseMessage'>
    <part name='response' element='tns:vSearchResponse' />
  </message>
  <message name='vStatusRequestMessage'>
    <part name='parameters' element='tns:vStatusParameters' />
  </message>
  <message name='vStatusResponseMessage'>
    <part name='response' element='tns:vStatusResponse' />
  </message>
  <portType name='domainrPortType'>
    <operation name='vInfo'>
      <documentation>responds with info about the domain e g its availability where to register it etc</documentation>
      <input message='tns:vInfoRequestMessage' name='vInfoInput' />
      <output message='tns:vInfoResponseMessage' name='vInfoOutput' />
    </operation>
    <operation name='vRegister'>
      <documentation>the Register API takes a domain parameter and responds with an HTTP redirect to a supporting registrar</documentation>
      <input message='tns:vRegisterRequestMessage' name='vRegisterInput' />
      <output message='tns:vRegisterResponseMessage' name='vRegisterOutput' />
    </operation>
    <operation name='vSearch'>
      <documentation>responds with search suggestions related to the query as well as availability and links to register the suggested domains</documentation>
      <input message='tns:vSearchRequestMessage' name='vSearchInput' />
      <output message='tns:vSearchResponseMessage' name='vSearchOutput' />
    </operation>
    <operation name='vRegister'>
      <documentation>responds with an HTTP redirect to a supporting registrar</documentation>
      <input message='tns:vRegisterRequestMessage' name='vRegisterInput' />
      <output message='tns:vRegisterResponseMessage' name='vRegisterOutput' />
    </operation>
    <operation name='vSearch'>
      <documentation>responds with search suggestions related to the query</documentation>
      <input message='tns:vSearchRequestMessage' name='vSearchInput' />
      <output message='tns:vSearchResponseMessage' name='vSearchOutput' />
    </operation>
    <operation name='vStatus'>
      <documentation>check domain availability</documentation>
      <input message='tns:vStatusRequestMessage' name='vStatusInput' />
      <output message='tns:vStatusResponseMessage' name='vStatusOutput' />
    </operation>
  </portType>
  <binding name='domainrBinding' type='tns:domainrPortType'>
    <operation name='vInfo'>
      <soap12:operation soapAction='http://vInfo' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='vRegister'>
      <soap12:operation soapAction='http://vRegister' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='vSearch'>
      <soap12:operation soapAction='http://vSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='vRegister'>
      <soap12:operation soapAction='http://vRegister' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='vSearch'>
      <soap12:operation soapAction='http://vSearch' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='vStatus'>
      <soap12:operation soapAction='http://vStatus' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='domainr'>
    <documentation>instant domain search Docs https github com domainr api</documentation>
    <port name='domainrPort' binding='tns:domainrBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://domainr' />
    </port>
  </service>
</definitions>