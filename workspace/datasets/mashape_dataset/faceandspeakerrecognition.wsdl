<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/faceAndSpeakerRecognition/' name='faceAndSpeakerRecognition' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/faceAndSpeakerRecognition/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/faceAndSpeakerRecognition/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/faceAndSpeakerRecognition/'>
      <xsd:element name='deleteModelParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='modelid' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='deleteModelResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='detectFaceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='properties' xmlns='xsd' type='boolean' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='detectFaceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enrollFaceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='name' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enrollFaceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enrollSpeakerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='mean' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='name' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='enrollSpeakerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listGroupsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='limit' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listGroupsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listIdentitiesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='limit' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listIdentitiesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listModelsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='limit' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='modality' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='offset' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='listModelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeFaceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='groups' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='identities' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='models' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeFaceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeFaceVideoParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='identity' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='model' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeFaceVideoResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeSpeakerParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='identities' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='maxresults' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='models' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='recognizeSpeakerResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='usageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='deleteModelRequestMessage'>
    <part name='parameters' element='tns:deleteModelParameters' />
  </message>
  <message name='deleteModelResponseMessage'>
    <part name='response' element='tns:deleteModelResponse' />
  </message>
  <message name='detectFaceRequestMessage'>
    <part name='parameters' element='tns:detectFaceParameters' />
  </message>
  <message name='detectFaceResponseMessage'>
    <part name='response' element='tns:detectFaceResponse' />
  </message>
  <message name='enrollFaceRequestMessage'>
    <part name='parameters' element='tns:enrollFaceParameters' />
  </message>
  <message name='enrollFaceResponseMessage'>
    <part name='response' element='tns:enrollFaceResponse' />
  </message>
  <message name='enrollSpeakerRequestMessage'>
    <part name='parameters' element='tns:enrollSpeakerParameters' />
  </message>
  <message name='enrollSpeakerResponseMessage'>
    <part name='response' element='tns:enrollSpeakerResponse' />
  </message>
  <message name='listGroupsRequestMessage'>
    <part name='parameters' element='tns:listGroupsParameters' />
  </message>
  <message name='listGroupsResponseMessage'>
    <part name='response' element='tns:listGroupsResponse' />
  </message>
  <message name='listIdentitiesRequestMessage'>
    <part name='parameters' element='tns:listIdentitiesParameters' />
  </message>
  <message name='listIdentitiesResponseMessage'>
    <part name='response' element='tns:listIdentitiesResponse' />
  </message>
  <message name='listModelsRequestMessage'>
    <part name='parameters' element='tns:listModelsParameters' />
  </message>
  <message name='listModelsResponseMessage'>
    <part name='response' element='tns:listModelsResponse' />
  </message>
  <message name='recognizeFaceRequestMessage'>
    <part name='parameters' element='tns:recognizeFaceParameters' />
  </message>
  <message name='recognizeFaceResponseMessage'>
    <part name='response' element='tns:recognizeFaceResponse' />
  </message>
  <message name='recognizeFaceVideoRequestMessage'>
    <part name='parameters' element='tns:recognizeFaceVideoParameters' />
  </message>
  <message name='recognizeFaceVideoResponseMessage'>
    <part name='response' element='tns:recognizeFaceVideoResponse' />
  </message>
  <message name='recognizeSpeakerRequestMessage'>
    <part name='parameters' element='tns:recognizeSpeakerParameters' />
  </message>
  <message name='recognizeSpeakerResponseMessage'>
    <part name='response' element='tns:recognizeSpeakerResponse' />
  </message>
  <message name='usageRequestMessage' />
  <message name='usageResponseMessage'>
    <part name='response' element='tns:usageResponse' />
  </message>
  <portType name='faceAndSpeakerRecognitionPortType'>
    <operation name='deleteModel'>
      <documentation>delete an existing model</documentation>
      <input message='tns:deleteModelRequestMessage' name='deleteModelInput' />
      <output message='tns:deleteModelResponseMessage' name='deleteModelOutput' />
    </operation>
    <operation name='detectFace'>
      <documentation>images can be submitted as URLs or binary strings uploaded via POST Optionally estimate age and gender for each detected face Detect up to faces per image Returns the x and y coordinates width and height of each face detected in submitted image s</documentation>
      <input message='tns:detectFaceRequestMessage' name='detectFaceInput' />
      <output message='tns:detectFaceResponseMessage' name='detectFaceOutput' />
    </operation>
    <operation name='enrollFace'>
      <documentation>create a biometric model from a collection of faces Use of images is recommended for most accurate recognition If multiple faces are detected in the image s only the largest face based on detected width and height will be used for enrollment Returns a unique Model ID to be used to call the model for recognition later</documentation>
      <input message='tns:enrollFaceRequestMessage' name='enrollFaceInput' />
      <output message='tns:enrollFaceResponseMessage' name='enrollFaceOutput' />
    </operation>
    <operation name='enrollSpeaker'>
      <documentation>create a biometric speaker model using one or more audio recording of speech Returns a unique Model ID to be used for speaker verification</documentation>
      <input message='tns:enrollSpeakerRequestMessage' name='enrollSpeakerInput' />
      <output message='tns:enrollSpeakerResponseMessage' name='enrollSpeakerOutput' />
    </operation>
    <operation name='listGroups'>
      <documentation>returns existing Group IDs By default only the first groups are included in the response Pagination is controlled with the optional limit and offset parameters</documentation>
      <input message='tns:listGroupsRequestMessage' name='listGroupsInput' />
      <output message='tns:listGroupsResponseMessage' name='listGroupsOutput' />
    </operation>
    <operation name='listIdentities'>
      <documentation>returns existing Identity IDs By default only the first groups are included in the response Pagination is controlled with the optional limit and offset parameters</documentation>
      <input message='tns:listIdentitiesRequestMessage' name='listIdentitiesInput' />
      <output message='tns:listIdentitiesResponseMessage' name='listIdentitiesOutput' />
    </operation>
    <operation name='listModels'>
      <documentation>returns a list of existing Model IDs The number of models listed is limited to by default Use the limit and offset parameters to paginate through the list It is also possible to filter the model list by modality face speaker</documentation>
      <input message='tns:listModelsRequestMessage' name='listModelsInput' />
      <output message='tns:listModelsResponseMessage' name='listModelsOutput' />
    </operation>
    <operation name='recognizeFace'>
      <documentation>recognize image s against one or more identities models or groups Requires either an Identity ID Model ID or Group ID for recognition</documentation>
      <input message='tns:recognizeFaceRequestMessage' name='recognizeFaceInput' />
      <output message='tns:recognizeFaceResponseMessage' name='recognizeFaceOutput' />
    </operation>
    <operation name='recognizeFaceVideo'>
      <documentation>perform face authentication on a video stream KeyLemon provides an optional JavaScript library KeyLemon JS with liveness detection to integrate streaming video authentication into your website Download it for free at developers keylemon com</documentation>
      <input message='tns:recognizeFaceVideoRequestMessage' name='recognizeFaceVideoInput' />
      <output message='tns:recognizeFaceVideoResponseMessage' name='recognizeFaceVideoOutput' />
    </operation>
    <operation name='recognizeSpeaker'>
      <documentation>performs speaker verification of an audio sample against a given model group or identity</documentation>
      <input message='tns:recognizeSpeakerRequestMessage' name='recognizeSpeakerInput' />
      <output message='tns:recognizeSpeakerResponseMessage' name='recognizeSpeakerOutput' />
    </operation>
    <operation name='usage'>
      <documentation>returns the monthly usage of images models and video streams</documentation>
      <input message='tns:usageRequestMessage' name='usageInput' />
      <output message='tns:usageResponseMessage' name='usageOutput' />
    </operation>
  </portType>
  <binding name='faceAndSpeakerRecognitionBinding' type='tns:faceAndSpeakerRecognitionPortType'>
    <operation name='deleteModel'>
      <soap12:operation soapAction='http://deleteModel' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='detectFace'>
      <soap12:operation soapAction='http://detectFace' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='enrollFace'>
      <soap12:operation soapAction='http://enrollFace' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='enrollSpeaker'>
      <soap12:operation soapAction='http://enrollSpeaker' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listGroups'>
      <soap12:operation soapAction='http://listGroups' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listIdentities'>
      <soap12:operation soapAction='http://listIdentities' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='listModels'>
      <soap12:operation soapAction='http://listModels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='recognizeFace'>
      <soap12:operation soapAction='http://recognizeFace' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='recognizeFaceVideo'>
      <soap12:operation soapAction='http://recognizeFaceVideo' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='recognizeSpeaker'>
      <soap12:operation soapAction='http://recognizeSpeaker' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='usage'>
      <soap12:operation soapAction='http://usage' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='faceAndSpeakerRecognition'>
    <documentation>the way your friends know you Real time biometric authentication for web enabled applications websites or services</documentation>
    <port name='faceAndSpeakerRecognitionPort' binding='tns:faceAndSpeakerRecognitionBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://faceAndSpeakerRecognition' />
    </port>
  </service>
</definitions>