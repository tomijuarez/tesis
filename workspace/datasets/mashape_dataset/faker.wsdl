<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/faker/' name='faker' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/faker/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/faker/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/faker/'>
      <xsd:element name='ccResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='number' type='xsd:int' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='type' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='expirationDate' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='colorParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='format' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='colorResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='dateParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='before' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='format' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='dateResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='hashParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='hashResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='imageParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='height' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='tag' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='width' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='imageResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='intParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='max' type='xsd:int' maxOccurs='unbounded' />
            <xsd:element name='min' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='intResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='localeResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loremParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='length' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='loremResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='netParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='browser' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='type' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='netResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='peopleParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='count' type='xsd:int' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='peopleResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='root' maxOccurs='unbounded'>
              <xsd:complexType>
                <xsd:sequence minOccurs='1' maxOccurs='1'>
                  <xsd:element name='address' type='xsd:string' minOccurs='0' />
                  <xsd:element name='phone' type='xsd:normalizedString' minOccurs='0' />
                  <xsd:element name='name' type='xsd:string' minOccurs='0' />
                  <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='personParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='gender' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='personResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='address' type='xsd:string' minOccurs='0' />
            <xsd:element name='phone' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='length' type='xsd:string' maxOccurs='unbounded' />
            <xsd:element name='locale' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='textResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='uuidResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='ccRequestMessage' />
  <message name='ccResponseMessage'>
    <part name='response' element='tns:ccResponse' />
  </message>
  <message name='colorRequestMessage'>
    <part name='parameters' element='tns:colorParameters' />
  </message>
  <message name='colorResponseMessage'>
    <part name='response' element='tns:colorResponse' />
  </message>
  <message name='dateRequestMessage'>
    <part name='parameters' element='tns:dateParameters' />
  </message>
  <message name='dateResponseMessage'>
    <part name='response' element='tns:dateResponse' />
  </message>
  <message name='hashRequestMessage'>
    <part name='parameters' element='tns:hashParameters' />
  </message>
  <message name='hashResponseMessage'>
    <part name='response' element='tns:hashResponse' />
  </message>
  <message name='imageRequestMessage'>
    <part name='parameters' element='tns:imageParameters' />
  </message>
  <message name='imageResponseMessage'>
    <part name='response' element='tns:imageResponse' />
  </message>
  <message name='intRequestMessage'>
    <part name='parameters' element='tns:intParameters' />
  </message>
  <message name='intResponseMessage'>
    <part name='response' element='tns:intResponse' />
  </message>
  <message name='localeRequestMessage' />
  <message name='localeResponseMessage'>
    <part name='response' element='tns:localeResponse' />
  </message>
  <message name='loremRequestMessage'>
    <part name='parameters' element='tns:loremParameters' />
  </message>
  <message name='loremResponseMessage'>
    <part name='response' element='tns:loremResponse' />
  </message>
  <message name='netRequestMessage'>
    <part name='parameters' element='tns:netParameters' />
  </message>
  <message name='netResponseMessage'>
    <part name='response' element='tns:netResponse' />
  </message>
  <message name='peopleRequestMessage'>
    <part name='parameters' element='tns:peopleParameters' />
  </message>
  <message name='peopleResponseMessage'>
    <part name='response' element='tns:peopleResponse' />
  </message>
  <message name='personRequestMessage'>
    <part name='parameters' element='tns:personParameters' />
  </message>
  <message name='personResponseMessage'>
    <part name='response' element='tns:personResponse' />
  </message>
  <message name='textRequestMessage'>
    <part name='parameters' element='tns:textParameters' />
  </message>
  <message name='textResponseMessage'>
    <part name='response' element='tns:textResponse' />
  </message>
  <message name='uuidRequestMessage' />
  <message name='uuidResponseMessage'>
    <part name='response' element='tns:uuidResponse' />
  </message>
  <portType name='fakerPortType'>
    <operation name='cc'>
      <documentation>generate a random valid credit card can also use creditcard or payment</documentation>
      <input message='tns:ccRequestMessage' name='ccInput' />
      <output message='tns:ccResponseMessage' name='ccOutput' />
    </operation>
    <operation name='color'>
      <documentation>generate a random color</documentation>
      <input message='tns:colorRequestMessage' name='colorInput' />
      <output message='tns:colorResponseMessage' name='colorOutput' />
    </operation>
    <operation name='date'>
      <documentation>get a random date</documentation>
      <input message='tns:dateRequestMessage' name='dateInput' />
      <output message='tns:dateResponseMessage' name='dateOutput' />
    </operation>
    <operation name='hash'>
      <documentation>generate a random hash</documentation>
      <input message='tns:hashRequestMessage' name='hashInput' />
      <output message='tns:hashResponseMessage' name='hashOutput' />
    </operation>
    <operation name='image'>
      <documentation>get a random image URL from LoremPixel with the given dimensions and tag</documentation>
      <input message='tns:imageRequestMessage' name='imageInput' />
      <output message='tns:imageResponseMessage' name='imageOutput' />
    </operation>
    <operation name='int'>
      <documentation>generate a random integer Can also use rand</documentation>
      <input message='tns:intRequestMessage' name='intInput' />
      <output message='tns:intResponseMessage' name='intOutput' />
    </operation>
    <operation name='locale'>
      <documentation>generate a random valid locale</documentation>
      <input message='tns:localeRequestMessage' name='localeInput' />
      <output message='tns:localeResponseMessage' name='localeOutput' />
    </operation>
    <operation name='lorem'>
      <documentation>generate Lorem Ipsum text</documentation>
      <input message='tns:loremRequestMessage' name='loremInput' />
      <output message='tns:loremResponseMessage' name='loremOutput' />
    </operation>
    <operation name='net'>
      <documentation>return a random networking related value</documentation>
      <input message='tns:netRequestMessage' name='netInput' />
      <output message='tns:netResponseMessage' name='netOutput' />
    </operation>
    <operation name='people'>
      <documentation>generate a set of random people</documentation>
      <input message='tns:peopleRequestMessage' name='peopleInput' />
      <output message='tns:peopleResponseMessage' name='peopleOutput' />
    </operation>
    <operation name='person'>
      <documentation>generate a random person</documentation>
      <input message='tns:personRequestMessage' name='personInput' />
      <output message='tns:personResponseMessage' name='personOutput' />
    </operation>
    <operation name='text'>
      <documentation>generate semi realistic text</documentation>
      <input message='tns:textRequestMessage' name='textInput' />
      <output message='tns:textResponseMessage' name='textOutput' />
    </operation>
    <operation name='uuid'>
      <documentation>generate a UUID</documentation>
      <input message='tns:uuidRequestMessage' name='uuidInput' />
      <output message='tns:uuidResponseMessage' name='uuidOutput' />
    </operation>
  </portType>
  <binding name='fakerBinding' type='tns:fakerPortType'>
    <operation name='cc'>
      <soap12:operation soapAction='http://cc' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='color'>
      <soap12:operation soapAction='http://color' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='date'>
      <soap12:operation soapAction='http://date' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='hash'>
      <soap12:operation soapAction='http://hash' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='image'>
      <soap12:operation soapAction='http://image' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='int'>
      <soap12:operation soapAction='http://int' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='locale'>
      <soap12:operation soapAction='http://locale' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='lorem'>
      <soap12:operation soapAction='http://lorem' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='net'>
      <soap12:operation soapAction='http://net' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='people'>
      <soap12:operation soapAction='http://people' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='person'>
      <soap12:operation soapAction='http://person' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='text'>
      <soap12:operation soapAction='http://text' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='uuid'>
      <soap12:operation soapAction='http://uuid' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='faker'>
    <documentation>generate realistic fake data of all kinds</documentation>
    <port name='fakerPort' binding='tns:fakerBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://faker' />
    </port>
  </service>
</definitions>