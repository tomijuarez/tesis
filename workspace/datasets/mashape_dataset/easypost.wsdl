<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<definitions targetNamespace='http://generatedWSDL.com/easypost/' name='easypost' xmlns='http://schemas.xmlsoap.org/wsdl/' xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/' xmlns:tns='http://generatedWSDL.com/easypost/'>
  <types>
    <xsd:schema targetNamespace='http://generatedWSDL.com/easypost/' attributeFormDefault='unqualified' elementFormDefault='unqualified' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:tns='http://generatedWSDL.com/easypost/'>
      <xsd:element name='adressesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='zip' type='xsd:int' minOccurs='0' />
            <xsd:element name='country' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='city' type='xsd:string' minOccurs='0' />
            <xsd:element name='created_at' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='updated_at' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='phone' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='name' type='xsd:string' minOccurs='0' />
            <xsd:element name='company' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='street1' type='xsd:string' minOccurs='0' />
            <xsd:element name='id' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='street2' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='state' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='email' type='xsd:normalizedString' minOccurs='0' />
            <xsd:element name='object' type='xsd:normalizedString' minOccurs='0' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchCreateAndBuyResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchLabelsParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='batch' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchLabelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='batchesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='buyPostageLabelParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='shp' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='buyPostageLabelResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='customsInfoFormsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='customsItemsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getShippingRatesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='shp' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='getShippingRatesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='parcelsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='refundsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='scanFormResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='shipmentInsuranceParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='shp' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='shipmentInsuranceResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='shipmentsResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='verifyAddressesParameters'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='adr' type='xsd:string' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name='verifyAddressesResponse'>
        <xsd:complexType>
          <xsd:sequence minOccurs='1' maxOccurs='1'>
            <xsd:element name='response' xmlns='xsd' type='any' maxOccurs='unbounded' />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name='adressesRequestMessage' />
  <message name='adressesResponseMessage'>
    <part name='response' element='tns:adressesResponse' />
  </message>
  <message name='batchCreateAndBuyRequestMessage' />
  <message name='batchCreateAndBuyResponseMessage'>
    <part name='response' element='tns:batchCreateAndBuyResponse' />
  </message>
  <message name='batchLabelsRequestMessage'>
    <part name='parameters' element='tns:batchLabelsParameters' />
  </message>
  <message name='batchLabelsResponseMessage'>
    <part name='response' element='tns:batchLabelsResponse' />
  </message>
  <message name='batchesRequestMessage' />
  <message name='batchesResponseMessage'>
    <part name='response' element='tns:batchesResponse' />
  </message>
  <message name='buyPostageLabelRequestMessage'>
    <part name='parameters' element='tns:buyPostageLabelParameters' />
  </message>
  <message name='buyPostageLabelResponseMessage'>
    <part name='response' element='tns:buyPostageLabelResponse' />
  </message>
  <message name='customsInfoFormsRequestMessage' />
  <message name='customsInfoFormsResponseMessage'>
    <part name='response' element='tns:customsInfoFormsResponse' />
  </message>
  <message name='customsItemsRequestMessage' />
  <message name='customsItemsResponseMessage'>
    <part name='response' element='tns:customsItemsResponse' />
  </message>
  <message name='getShippingRatesRequestMessage'>
    <part name='parameters' element='tns:getShippingRatesParameters' />
  </message>
  <message name='getShippingRatesResponseMessage'>
    <part name='response' element='tns:getShippingRatesResponse' />
  </message>
  <message name='parcelsRequestMessage' />
  <message name='parcelsResponseMessage'>
    <part name='response' element='tns:parcelsResponse' />
  </message>
  <message name='refundsRequestMessage' />
  <message name='refundsResponseMessage'>
    <part name='response' element='tns:refundsResponse' />
  </message>
  <message name='scanFormRequestMessage' />
  <message name='scanFormResponseMessage'>
    <part name='response' element='tns:scanFormResponse' />
  </message>
  <message name='shipmentInsuranceRequestMessage'>
    <part name='parameters' element='tns:shipmentInsuranceParameters' />
  </message>
  <message name='shipmentInsuranceResponseMessage'>
    <part name='response' element='tns:shipmentInsuranceResponse' />
  </message>
  <message name='shipmentsRequestMessage' />
  <message name='shipmentsResponseMessage'>
    <part name='response' element='tns:shipmentsResponse' />
  </message>
  <message name='verifyAddressesRequestMessage'>
    <part name='parameters' element='tns:verifyAddressesParameters' />
  </message>
  <message name='verifyAddressesResponseMessage'>
    <part name='response' element='tns:verifyAddressesResponse' />
  </message>
  <portType name='easypostPortType'>
    <operation name='adresses'>
      <documentation>address objects represent the origin and destination of any shipment and are required in order to get rates and purchase postage</documentation>
      <input message='tns:adressesRequestMessage' name='adressesInput' />
      <output message='tns:adressesResponseMessage' name='adressesOutput' />
    </operation>
    <operation name='batchCreateAndBuy'>
      <documentation>the create and buy method allows you to specify the carrier and service that you d like to purchase for each shipment in the batch After the method is called we will automatically purchase the requested shipping labels and update the batch status accordingly</documentation>
      <input message='tns:batchCreateAndBuyRequestMessage' name='batchCreateAndBuyInput' />
      <output message='tns:batchCreateAndBuyResponseMessage' name='batchCreateAndBuyOutput' />
    </operation>
    <operation name='batchLabels'>
      <documentation>one of the advantages of processing shipments in batches is the ability to retrieve the postage labels for the entire batch in one file This can only be done once all shipments in the batch are in postage purchased status Batch labels can be retrieved in pdf or epl format</documentation>
      <input message='tns:batchLabelsRequestMessage' name='batchLabelsInput' />
      <output message='tns:batchLabelsResponseMessage' name='batchLabelsOutput' />
    </operation>
    <operation name='batches'>
      <documentation>batches allow you to create a large number of shipments at one time and retrieve details and shipping labels for them all at once</documentation>
      <input message='tns:batchesRequestMessage' name='batchesInput' />
      <output message='tns:batchesResponseMessage' name='batchesOutput' />
    </operation>
    <operation name='buyPostageLabel'>
      <documentation>buying a postage label once you ve created a shipment is as simple as specifying which rate you d like from the available options</documentation>
      <input message='tns:buyPostageLabelRequestMessage' name='buyPostageLabelInput' />
      <output message='tns:buyPostageLabelResponseMessage' name='buyPostageLabelOutput' />
    </operation>
    <operation name='customsInfoForms'>
      <documentation>customsInfo objects contain CustomsItem objects and all necessary information for the generation of customs forms required for international shipping</documentation>
      <input message='tns:customsInfoFormsRequestMessage' name='customsInfoFormsInput' />
      <output message='tns:customsInfoFormsResponseMessage' name='customsInfoFormsOutput' />
    </operation>
    <operation name='customsItems'>
      <documentation>customs items describe goods for international shipment and are included in CustomsInfo objects</documentation>
      <input message='tns:customsItemsRequestMessage' name='customsItemsInput' />
      <output message='tns:customsItemsResponseMessage' name='customsItemsOutput' />
    </operation>
    <operation name='getShippingRates'>
      <documentation>you can request an update to the shipping rate options for a shipment at any time If there is an existing rate for a carrier service already attached to this shipment it will be updated not replaced it will retain its id</documentation>
      <input message='tns:getShippingRatesRequestMessage' name='getShippingRatesInput' />
      <output message='tns:getShippingRatesResponseMessage' name='getShippingRatesOutput' />
    </operation>
    <operation name='parcels'>
      <documentation>parcel objects represent the physical container being shipped Please provide either the length width and height dimensions or a predefined package string</documentation>
      <input message='tns:parcelsRequestMessage' name='parcelsInput' />
      <output message='tns:parcelsResponseMessage' name='parcelsOutput' />
    </operation>
    <operation name='refunds'>
      <documentation>generally a refund can be issued for unused shipping labels if the request is made promptly</documentation>
      <input message='tns:refundsRequestMessage' name='refundsInput' />
      <output message='tns:refundsResponseMessage' name='refundsOutput' />
    </operation>
    <operation name='scanForm'>
      <documentation>sCAN forms are USPS specific documents that can be created to speed up and simplify your carrier parcel pickup process The SCAN form is one document that can be scanned to mark all included tracking codes as Accepted for Shipment by the USPS</documentation>
      <input message='tns:scanFormRequestMessage' name='scanFormInput' />
      <output message='tns:scanFormResponseMessage' name='scanFormOutput' />
    </operation>
    <operation name='shipmentInsurance'>
      <documentation>insuring your shipment is simple just tell us its value</documentation>
      <input message='tns:shipmentInsuranceRequestMessage' name='shipmentInsuranceInput' />
      <output message='tns:shipmentInsuranceResponseMessage' name='shipmentInsuranceOutput' />
    </operation>
    <operation name='shipments'>
      <documentation>the workhorse of the EasyPost API shipments are made up of to and from addresses the parcel being shipped and any customs forms required for international deliveries Once created a Shipment object can be used to retrieve shipping rates and purchase a postage label</documentation>
      <input message='tns:shipmentsRequestMessage' name='shipmentsInput' />
      <output message='tns:shipmentsResponseMessage' name='shipmentsOutput' />
    </operation>
    <operation name='verifyAddresses'>
      <documentation>verifying an address with EasyPost is simple simply request verification of an Address object and we ll return a new object with the closest verified address</documentation>
      <input message='tns:verifyAddressesRequestMessage' name='verifyAddressesInput' />
      <output message='tns:verifyAddressesResponseMessage' name='verifyAddressesOutput' />
    </operation>
  </portType>
  <binding name='easypostBinding' type='tns:easypostPortType'>
    <operation name='adresses'>
      <soap12:operation soapAction='http://adresses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchCreateAndBuy'>
      <soap12:operation soapAction='http://batchCreateAndBuy' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batchLabels'>
      <soap12:operation soapAction='http://batchLabels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='batches'>
      <soap12:operation soapAction='http://batches' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='buyPostageLabel'>
      <soap12:operation soapAction='http://buyPostageLabel' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='customsInfoForms'>
      <soap12:operation soapAction='http://customsInfoForms' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='customsItems'>
      <soap12:operation soapAction='http://customsItems' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='getShippingRates'>
      <soap12:operation soapAction='http://getShippingRates' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='parcels'>
      <soap12:operation soapAction='http://parcels' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='refunds'>
      <soap12:operation soapAction='http://refunds' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='scanForm'>
      <soap12:operation soapAction='http://scanForm' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='shipmentInsurance'>
      <soap12:operation soapAction='http://shipmentInsurance' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='shipments'>
      <soap12:operation soapAction='http://shipments' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
    <operation name='verifyAddresses'>
      <soap12:operation soapAction='http://verifyAddresses' style='document' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/' />
      <input>
        <tns:body use='literal' parts='parameters' />
      </input>
      <output>
        <tns:body use='literal' parts='response' />
      </output>
    </operation>
  </binding>
  <service name='easypost'>
    <documentation>easyPost allows you to integrate shipping APIs into any application in minutes</documentation>
    <port name='easypostPort' binding='tns:easypostBinding' xmlns:soap12='http://schemas.xmlsoap.org/wsdl/soap12/'>
      <soap12:address location='http://easypost' />
    </port>
  </service>
</definitions>